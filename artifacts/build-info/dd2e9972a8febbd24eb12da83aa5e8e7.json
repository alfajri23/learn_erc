{
	"id": "dd2e9972a8febbd24eb12da83aa5e8e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/reward.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract RewardToken is ERC20, ERC2771Context, Ownable {\r\n    address private immutable FORWARDER_ADDRESS;\r\n\r\n    constructor(address trustedForwarder, address initialOwner)\r\n        ERC20(\"Reward Token\", \"RWD\")\r\n        ERC2771Context(trustedForwarder)\r\n        Ownable(initialOwner)\r\n    {\r\n        FORWARDER_ADDRESS = trustedForwarder;\r\n    }\r\n\r\n    // Tambahkan fungsi override ini\r\n    function _contextSuffixLength() \r\n        internal \r\n        view \r\n        override(ERC2771Context, Context) \r\n        returns (uint256) \r\n    {\r\n        return super._contextSuffixLength();\r\n    }\r\n\r\n    function _msgSender() \r\n        internal \r\n        view \r\n        override(ERC2771Context, Context) \r\n        returns (address) \r\n    {\r\n        return super._msgSender();\r\n    }\r\n\r\n    function _msgData() \r\n        internal \r\n        view \r\n        override(ERC2771Context, Context) \r\n        returns (bytes calldata) \r\n    {\r\n        return super._msgData();\r\n    }\r\n\r\n    function isTrustedForwarder(address forwarder)\r\n        public \r\n        view \r\n        override(ERC2771Context)\r\n        returns (bool) \r\n    {\r\n        return super.isTrustedForwarder(forwarder);\r\n    }\r\n\r\n    function mint(address account, uint256 amount) public onlyOwner {\r\n        uint256 amountInSmallestUnit = amount * 10**decimals();\r\n        _mint(account, amountInSmallestUnit);\r\n    }\r\n\r\n    function increaseSupply(uint256 amount) public onlyOwner {\r\n        uint256 amountInSmallestUnit = amount * 10**decimals();\r\n        _mint(owner(), amountInSmallestUnit);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/metatx/ERC2771Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {\n            unchecked {\n                return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n            }\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {\n            unchecked {\n                return msg.data[:calldataLength - contextSuffixLength];\n            }\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/metatx/ERC2771Context.sol": {
				"ERC2771Context": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"isTrustedForwarder(address)": {
								"details": "Indicates whether any particular address is the trusted forwarder."
							},
							"trustedForwarder()": {
								"details": "Returns the address of the trusted forwarder."
							}
						},
						"stateVariables": {
							"_trustedForwarder": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isTrustedForwarder(address)": "572b6c05",
							"trustedForwarder()": "7da0a877"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 452,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 458,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 460,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/reward.sol": {
				"RewardToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "trustedForwarder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "increaseSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"isTrustedForwarder(address)": {
								"details": "Indicates whether any particular address is the trusted forwarder."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"trustedForwarder()": {
								"details": "Returns the address of the trusted forwarder."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/reward.sol\":235:1791  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/reward.sol\":349:580  constructor(address trustedForwarder, address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/reward.sol\":506:518  initialOwner */\n  dup1\n    /* \"contracts/reward.sol\":471:487  trustedForwarder */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x52657761726420546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5257440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1520:1537  trustedForwarder_ */\n  dup1\n    /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1500:1537  _trustedForwarder = trustedForwarder_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1451:1544  constructor(address trustedForwarder_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/reward.sol\":556:572  trustedForwarder */\n  dup2\n    /* \"contracts/reward.sol\":536:572  FORWARDER_ADDRESS = trustedForwarder */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/reward.sol\":349:580  constructor(address trustedForwarder, address initialOwner)... */\n  pop\n  pop\n    /* \"contracts/reward.sol\":235:1791  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":949:1068   */\ntag_63:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_65\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_66\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_29:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_30:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_31:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_32:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_71:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_73\n  tag_31\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2065:2149   */\ntag_72:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_33:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_34:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_35:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_36:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_78\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_35\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2780:2819   */\n  tag_79\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_35\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_37:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_38:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_39:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_83\n    /* \"#utility.yul\":3169:3203   */\n  tag_84\n    /* \"#utility.yul\":3178:3202   */\n  tag_85\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3169:3203   */\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3151:3204   */\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_40:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_41:\n    /* \"#utility.yul\":3407:3446   */\n  tag_88\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_39\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3468:3559   */\n  tag_89\n    /* \"#utility.yul\":3517:3558   */\n  tag_90\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_36\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_42:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3638:3639   */\n  0x00\n    /* \"#utility.yul\":3631:3639   */\n  swap1\n  pop\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_43:\n    /* \"#utility.yul\":3728:3760   */\n  tag_93\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3769:3834   */\n  tag_94\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_41\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_44:\n    /* \"#utility.yul\":3906:4026   */\ntag_96:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_99\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_43\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_45:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_102\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4257:4286   */\n  tag_103\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_104:\n    /* \"#utility.yul\":4484:4564   */\n  tag_105\n    /* \"#utility.yul\":4540:4562   */\n  tag_106\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_44\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_101:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_46:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_47:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_109\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_46\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_48:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_111\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_47\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_10:\n    /* \"#utility.yul\":5301:5338   */\n  tag_113\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_29\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_115\n  tag_30\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5389:5445   */\ntag_114:\n    /* \"#utility.yul\":5469:5507   */\n  tag_116\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_32\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5554:5621   */\n  tag_117\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_45\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_120:\n    /* \"#utility.yul\":6495:6562   */\n  tag_121\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_48\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_118)\n    /* \"#utility.yul\":5716:6334   */\ntag_119:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_122\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_33\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_123:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_127\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_47\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_126:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_118:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_49:\n    /* \"#utility.yul\":6672:6696   */\n  tag_129\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_26\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_16:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_131\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_49\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/reward.sol\":235:1791  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\ntag_20:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcc1cf32daa775edd624f71ddb0d100d39c31c65becb67e6d2e7789fa58c10fe0\")\n  0x00\n  assignImmutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/reward.sol\":235:1791  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb921e163\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7da0a877\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x572b6c05\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reward.sol\":1419:1603  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/reward.sol\":1207:1411  function isTrustedForwarder(address forwarder)... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reward.sol\":1611:1788  function increaseSupply(uint256 amount) public onlyOwner {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/reward.sol\":1419:1603  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/reward.sol\":1494:1522  uint256 amountInSmallestUnit */\n      0x00\n        /* \"contracts/reward.sol\":1538:1548  decimals() */\n      tag_109\n        /* \"contracts/reward.sol\":1538:1546  decimals */\n      tag_42\n        /* \"contracts/reward.sol\":1538:1548  decimals() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/reward.sol\":1534:1536  10 */\n      0x0a\n        /* \"contracts/reward.sol\":1534:1548  10**decimals() */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/reward.sol\":1525:1531  amount */\n      dup3\n        /* \"contracts/reward.sol\":1525:1548  amount * 10**decimals() */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/reward.sol\":1494:1548  uint256 amountInSmallestUnit = amount * 10**decimals() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":1559:1595  _mint(account, amountInSmallestUnit) */\n      tag_114\n        /* \"contracts/reward.sol\":1565:1572  account */\n      dup4\n        /* \"contracts/reward.sol\":1574:1594  amountInSmallestUnit */\n      dup3\n        /* \"contracts/reward.sol\":1559:1564  _mint */\n      tag_115\n        /* \"contracts/reward.sol\":1559:1595  _mint(account, amountInSmallestUnit) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/reward.sol\":1483:1603  {... */\n      pop\n        /* \"contracts/reward.sol\":1419:1603  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":1207:1411  function isTrustedForwarder(address forwarder)... */\n    tag_51:\n        /* \"contracts/reward.sol\":1338:1342  bool */\n      0x00\n        /* \"contracts/reward.sol\":1368:1403  super.isTrustedForwarder(forwarder) */\n      tag_117\n        /* \"contracts/reward.sol\":1393:1402  forwarder */\n      dup3\n        /* \"contracts/reward.sol\":1368:1392  super.isTrustedForwarder */\n      tag_118\n        /* \"contracts/reward.sol\":1368:1403  super.isTrustedForwarder(forwarder) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/reward.sol\":1361:1403  return super.isTrustedForwarder(forwarder) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":1207:1411  function isTrustedForwarder(address forwarder)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1681:1688  address */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1707:1724  _trustedForwarder */\n      immutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1700:1724  return _trustedForwarder */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_87\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_87\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":1611:1788  function increaseSupply(uint256 amount) public onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/reward.sol\":1679:1707  uint256 amountInSmallestUnit */\n      0x00\n        /* \"contracts/reward.sol\":1723:1733  decimals() */\n      tag_139\n        /* \"contracts/reward.sol\":1723:1731  decimals */\n      tag_42\n        /* \"contracts/reward.sol\":1723:1733  decimals() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/reward.sol\":1719:1721  10 */\n      0x0a\n        /* \"contracts/reward.sol\":1719:1733  10**decimals() */\n      tag_140\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n        /* \"contracts/reward.sol\":1710:1716  amount */\n      dup3\n        /* \"contracts/reward.sol\":1710:1733  amount * 10**decimals() */\n      tag_141\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_141:\n        /* \"contracts/reward.sol\":1679:1733  uint256 amountInSmallestUnit = amount * 10**decimals() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":1744:1780  _mint(owner(), amountInSmallestUnit) */\n      tag_142\n        /* \"contracts/reward.sol\":1750:1757  owner() */\n      tag_143\n        /* \"contracts/reward.sol\":1750:1755  owner */\n      tag_64\n        /* \"contracts/reward.sol\":1750:1757  owner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/reward.sol\":1759:1779  amountInSmallestUnit */\n      dup3\n        /* \"contracts/reward.sol\":1744:1749  _mint */\n      tag_115\n        /* \"contracts/reward.sol\":1744:1780  _mint(owner(), amountInSmallestUnit) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/reward.sol\":1668:1788  {... */\n      pop\n        /* \"contracts/reward.sol\":1611:1788  function increaseSupply(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":832:1010  function _msgSender() ... */\n    tag_94:\n        /* \"contracts/reward.sol\":951:958  address */\n      0x00\n        /* \"contracts/reward.sol\":984:1002  super._msgSender() */\n      tag_152\n        /* \"contracts/reward.sol\":984:1000  super._msgSender */\n      tag_153\n        /* \"contracts/reward.sol\":984:1002  super._msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/reward.sol\":977:1002  return super._msgSender() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":832:1010  function _msgSender() ... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1908:1912  bool */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1962  trustedForwarder() */\n      tag_182\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1960  trustedForwarder */\n      tag_60\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1962  trustedForwarder() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1940  forwarder */\n      dup3\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1924:1962  return forwarder == trustedForwarder() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2677  function _msgSender() internal view virtual override returns (address) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2268:2275  address */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2287:2309  uint256 calldataLength */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2312:2320  msg.data */\n      0x00\n      calldatasize\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2312:2327  msg.data.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2287:2327  uint256 calldataLength = msg.data.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2337:2364  uint256 contextSuffixLength */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2367:2389  _contextSuffixLength() */\n      tag_185\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2367:2387  _contextSuffixLength */\n      tag_186\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2367:2389  _contextSuffixLength() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2337:2389  uint256 contextSuffixLength = _contextSuffixLength() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2421:2440  contextSuffixLength */\n      dup1\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2417  calldataLength */\n      dup3\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2440  calldataLength >= contextSuffixLength */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender) */\n      dup1\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2444:2474  isTrustedForwarder(msg.sender) */\n      tag_188\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2463:2473  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2444:2462  isTrustedForwarder */\n      tag_51\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2444:2474  isTrustedForwarder(msg.sender) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender) */\n    tag_187:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2671  if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2541:2549  msg.data */\n      0x00\n      calldatasize\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2567:2586  contextSuffixLength */\n      dup3\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2550:2564  calldataLength */\n      dup5\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2550:2586  calldataLength - contextSuffixLength */\n      sub\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2541:2588  msg.data[calldataLength - contextSuffixLength:] */\n      swap1\n      dup1\n      swap3\n      tag_190\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2533:2589  bytes20(msg.data[calldataLength - contextSuffixLength:]) */\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2525:2590  address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n      0x60\n      shr\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2518:2590  return address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_184)\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2671  if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2642:2660  super._msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2642:2658  super._msgSender */\n      tag_196\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2642:2660  super._msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2635:2660  return super._msgSender() */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2677  function _msgSender() internal view virtual override returns (address) {... */\n    tag_184:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_208)\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_212)\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_213\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":626:824  function _contextSuffixLength() ... */\n    tag_186:\n        /* \"contracts/reward.sol\":755:762  uint256 */\n      0x00\n        /* \"contracts/reward.sol\":788:816  super._contextSuffixLength() */\n      tag_215\n        /* \"contracts/reward.sol\":788:814  super._contextSuffixLength */\n      tag_216\n        /* \"contracts/reward.sol\":788:816  super._contextSuffixLength() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/reward.sol\":781:816  return super._contextSuffixLength() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":626:824  function _contextSuffixLength() ... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3469:3576  function _contextSuffixLength() internal view virtual override returns (uint256) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3541:3548  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3567:3569  20 */\n      0x14\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3560:3569  return 20 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3469:3576  function _contextSuffixLength() internal view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_219:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_220:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_221:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_222:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_223:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_257\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_219\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":711:782   */\n      tag_258\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_259\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_221\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":881:910   */\n      tag_260\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_262\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_223\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_225:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_227:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_228:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_268\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_227\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_229:\n        /* \"#utility.yul\":1876:1900   */\n      tag_270\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_228\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_271:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_230:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_273\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_229\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_231:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_232:\n        /* \"#utility.yul\":2232:2256   */\n      tag_276\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_231\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_277:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_233:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_279\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_232\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_282\n      tag_225\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2525:2644   */\n    tag_281:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_283\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_230\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_284\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_233\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_234:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_235:\n        /* \"#utility.yul\":3089:3110   */\n      tag_287\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_289\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_235\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_236:\n        /* \"#utility.yul\":3426:3450   */\n      tag_291\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_293\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_236\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_296\n      tag_225\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3801:3920   */\n    tag_295:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_297\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_298\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_230\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_299\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_233\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_237:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_238:\n        /* \"#utility.yul\":4491:4513   */\n      tag_302\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_237\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_304\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_238\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_50:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_307\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4822:4941   */\n    tag_306:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_308\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_230\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_239:\n        /* \"#utility.yul\":5168:5192   */\n      tag_310\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_228\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_62:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_312\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_239\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_75:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_315\n      tag_225\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5509:5628   */\n    tag_314:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_316\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_233\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_79:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_319\n      tag_225\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5861:5980   */\n    tag_318:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_320\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_230\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_321\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_230\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_240:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_87:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_324:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_326\n      tag_240\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6664:6748   */\n    tag_325:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6940   */\n    tag_241:\n        /* \"#utility.yul\":6808:6885   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6798:6886   */\n      mstore\n        /* \"#utility.yul\":6905:6909   */\n      0x11\n        /* \"#utility.yul\":6902:6903   */\n      0x04\n        /* \"#utility.yul\":6895:6910   */\n      mstore\n        /* \"#utility.yul\":6929:6933   */\n      0x24\n        /* \"#utility.yul\":6926:6927   */\n      0x00\n        /* \"#utility.yul\":6919:6934   */\n      revert\n        /* \"#utility.yul\":6946:7048   */\n    tag_242:\n        /* \"#utility.yul\":6988:6996   */\n      0x00\n        /* \"#utility.yul\":7035:7040   */\n      dup2\n        /* \"#utility.yul\":7032:7033   */\n      0x01\n        /* \"#utility.yul\":7028:7041   */\n      shr\n        /* \"#utility.yul\":7007:7041   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7054:7902   */\n    tag_243:\n        /* \"#utility.yul\":7115:7120   */\n      0x00\n        /* \"#utility.yul\":7122:7126   */\n      0x00\n        /* \"#utility.yul\":7146:7152   */\n      dup3\n        /* \"#utility.yul\":7137:7152   */\n      swap2\n      pop\n        /* \"#utility.yul\":7170:7175   */\n      dup4\n        /* \"#utility.yul\":7161:7175   */\n      swap1\n      pop\n        /* \"#utility.yul\":7184:7896   */\n    tag_330:\n        /* \"#utility.yul\":7205:7206   */\n      0x01\n        /* \"#utility.yul\":7195:7203   */\n      dup6\n        /* \"#utility.yul\":7192:7207   */\n      gt\n        /* \"#utility.yul\":7184:7896   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":7300:7304   */\n      dup1\n        /* \"#utility.yul\":7295:7298   */\n      dup7\n        /* \"#utility.yul\":7291:7305   */\n      div\n        /* \"#utility.yul\":7285:7289   */\n      dup2\n        /* \"#utility.yul\":7282:7306   */\n      gt\n        /* \"#utility.yul\":7279:7329   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7309:7327   */\n      tag_334\n      tag_241\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7279:7329   */\n    tag_333:\n        /* \"#utility.yul\":7359:7360   */\n      0x01\n        /* \"#utility.yul\":7349:7357   */\n      dup6\n        /* \"#utility.yul\":7345:7361   */\n      and\n        /* \"#utility.yul\":7342:7793   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7774:7778   */\n      dup1\n        /* \"#utility.yul\":7767:7772   */\n      dup3\n        /* \"#utility.yul\":7763:7779   */\n      mul\n        /* \"#utility.yul\":7754:7779   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7793   */\n    tag_335:\n        /* \"#utility.yul\":7824:7828   */\n      dup1\n        /* \"#utility.yul\":7818:7822   */\n      dup2\n        /* \"#utility.yul\":7814:7829   */\n      mul\n        /* \"#utility.yul\":7806:7829   */\n      swap1\n      pop\n        /* \"#utility.yul\":7854:7886   */\n      tag_336\n        /* \"#utility.yul\":7877:7885   */\n      dup6\n        /* \"#utility.yul\":7854:7886   */\n      tag_242\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7842:7886   */\n      swap5\n      pop\n        /* \"#utility.yul\":7184:7896   */\n      jump(tag_330)\n    tag_332:\n        /* \"#utility.yul\":7054:7902   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7908:8981   */\n    tag_244:\n        /* \"#utility.yul\":7962:7967   */\n      0x00\n        /* \"#utility.yul\":8153:8161   */\n      dup3\n        /* \"#utility.yul\":8143:8183   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":8174:8175   */\n      0x01\n        /* \"#utility.yul\":8165:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":8176:8181   */\n      jump(tag_337)\n        /* \"#utility.yul\":8143:8183   */\n    tag_338:\n        /* \"#utility.yul\":8202:8206   */\n      dup2\n        /* \"#utility.yul\":8192:8228   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8219:8220   */\n      0x00\n        /* \"#utility.yul\":8210:8220   */\n      swap1\n      pop\n        /* \"#utility.yul\":8221:8226   */\n      jump(tag_337)\n        /* \"#utility.yul\":8192:8228   */\n    tag_339:\n        /* \"#utility.yul\":8288:8292   */\n      dup2\n        /* \"#utility.yul\":8336:8337   */\n      0x01\n        /* \"#utility.yul\":8331:8358   */\n      dup2\n      eq\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8372:8373   */\n      0x02\n        /* \"#utility.yul\":8367:8558   */\n      dup2\n      eq\n      tag_342\n      jumpi\n        /* \"#utility.yul\":8281:8558   */\n      jump(tag_340)\n        /* \"#utility.yul\":8331:8358   */\n    tag_341:\n        /* \"#utility.yul\":8349:8350   */\n      0x01\n        /* \"#utility.yul\":8340:8350   */\n      swap2\n      pop\n        /* \"#utility.yul\":8351:8356   */\n      pop\n      jump(tag_337)\n        /* \"#utility.yul\":8367:8558   */\n    tag_342:\n        /* \"#utility.yul\":8412:8415   */\n      0xff\n        /* \"#utility.yul\":8402:8410   */\n      dup5\n        /* \"#utility.yul\":8399:8416   */\n      gt\n        /* \"#utility.yul\":8396:8439   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":8419:8437   */\n      tag_344\n      tag_241\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8396:8439   */\n    tag_343:\n        /* \"#utility.yul\":8468:8476   */\n      dup4\n        /* \"#utility.yul\":8465:8466   */\n      0x02\n        /* \"#utility.yul\":8461:8477   */\n      exp\n        /* \"#utility.yul\":8452:8477   */\n      swap2\n      pop\n        /* \"#utility.yul\":8503:8506   */\n      dup5\n        /* \"#utility.yul\":8496:8501   */\n      dup3\n        /* \"#utility.yul\":8493:8507   */\n      gt\n        /* \"#utility.yul\":8490:8530   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":8510:8528   */\n      tag_346\n      tag_241\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8490:8530   */\n    tag_345:\n        /* \"#utility.yul\":8543:8548   */\n      pop\n      jump(tag_337)\n        /* \"#utility.yul\":8281:8558   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":8667:8669   */\n      0x20\n        /* \"#utility.yul\":8657:8665   */\n      dup4\n        /* \"#utility.yul\":8654:8670   */\n      lt\n        /* \"#utility.yul\":8648:8651   */\n      0x0133\n        /* \"#utility.yul\":8642:8646   */\n      dup4\n        /* \"#utility.yul\":8639:8652   */\n      lt\n        /* \"#utility.yul\":8635:8671   */\n      and\n        /* \"#utility.yul\":8617:8619   */\n      0x4e\n        /* \"#utility.yul\":8607:8615   */\n      dup5\n        /* \"#utility.yul\":8604:8620   */\n      lt\n        /* \"#utility.yul\":8599:8601   */\n      0x0b\n        /* \"#utility.yul\":8593:8597   */\n      dup5\n        /* \"#utility.yul\":8590:8602   */\n      lt\n        /* \"#utility.yul\":8586:8621   */\n      and\n        /* \"#utility.yul\":8570:8681   */\n      or\n        /* \"#utility.yul\":8567:8813   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":8723:8731   */\n      dup3\n        /* \"#utility.yul\":8717:8721   */\n      dup3\n        /* \"#utility.yul\":8713:8732   */\n      exp\n        /* \"#utility.yul\":8704:8732   */\n      swap1\n      pop\n        /* \"#utility.yul\":8758:8761   */\n      dup4\n        /* \"#utility.yul\":8751:8756   */\n      dup2\n        /* \"#utility.yul\":8748:8762   */\n      gt\n        /* \"#utility.yul\":8745:8785   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":8765:8783   */\n      tag_349\n      tag_241\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8745:8785   */\n    tag_348:\n        /* \"#utility.yul\":8798:8803   */\n      jump(tag_337)\n        /* \"#utility.yul\":8567:8813   */\n    tag_347:\n        /* \"#utility.yul\":8838:8880   */\n      tag_350\n        /* \"#utility.yul\":8876:8879   */\n      dup5\n        /* \"#utility.yul\":8866:8874   */\n      dup5\n        /* \"#utility.yul\":8860:8864   */\n      dup5\n        /* \"#utility.yul\":8857:8858   */\n      0x01\n        /* \"#utility.yul\":8838:8880   */\n      tag_243\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8823:8880   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8912:8916   */\n      dup2\n        /* \"#utility.yul\":8907:8910   */\n      dup5\n        /* \"#utility.yul\":8903:8917   */\n      div\n        /* \"#utility.yul\":8896:8901   */\n      dup2\n        /* \"#utility.yul\":8893:8918   */\n      gt\n        /* \"#utility.yul\":8890:8941   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8921:8939   */\n      tag_352\n      tag_241\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8890:8941   */\n    tag_351:\n        /* \"#utility.yul\":8970:8974   */\n      dup2\n        /* \"#utility.yul\":8963:8968   */\n      dup2\n        /* \"#utility.yul\":8959:8975   */\n      mul\n        /* \"#utility.yul\":8950:8975   */\n      swap1\n      pop\n        /* \"#utility.yul\":7908:8981   */\n    tag_337:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8987:9268   */\n    tag_111:\n        /* \"#utility.yul\":9045:9050   */\n      0x00\n        /* \"#utility.yul\":9069:9092   */\n      tag_354\n        /* \"#utility.yul\":9087:9091   */\n      dup3\n        /* \"#utility.yul\":9069:9092   */\n      tag_231\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9061:9092   */\n      swap2\n      pop\n        /* \"#utility.yul\":9113:9138   */\n      tag_355\n        /* \"#utility.yul\":9129:9137   */\n      dup4\n        /* \"#utility.yul\":9113:9138   */\n      tag_237\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9101:9138   */\n      swap3\n      pop\n        /* \"#utility.yul\":9157:9261   */\n      tag_356\n        /* \"#utility.yul\":9194:9260   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9184:9192   */\n      dup5\n        /* \"#utility.yul\":9178:9182   */\n      dup5\n        /* \"#utility.yul\":9157:9261   */\n      tag_244\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9148:9261   */\n      swap1\n      pop\n        /* \"#utility.yul\":8987:9268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9274:9684   */\n    tag_113:\n        /* \"#utility.yul\":9314:9321   */\n      0x00\n        /* \"#utility.yul\":9337:9357   */\n      tag_358\n        /* \"#utility.yul\":9355:9356   */\n      dup3\n        /* \"#utility.yul\":9337:9357   */\n      tag_231\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9332:9357   */\n      swap2\n      pop\n        /* \"#utility.yul\":9371:9391   */\n      tag_359\n        /* \"#utility.yul\":9389:9390   */\n      dup4\n        /* \"#utility.yul\":9371:9391   */\n      tag_231\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9366:9391   */\n      swap3\n      pop\n        /* \"#utility.yul\":9426:9427   */\n      dup3\n        /* \"#utility.yul\":9423:9424   */\n      dup3\n        /* \"#utility.yul\":9419:9428   */\n      mul\n        /* \"#utility.yul\":9448:9478   */\n      tag_360\n        /* \"#utility.yul\":9466:9477   */\n      dup2\n        /* \"#utility.yul\":9448:9478   */\n      tag_231\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9437:9478   */\n      swap2\n      pop\n        /* \"#utility.yul\":9627:9628   */\n      dup3\n        /* \"#utility.yul\":9618:9625   */\n      dup3\n        /* \"#utility.yul\":9614:9629   */\n      div\n        /* \"#utility.yul\":9611:9612   */\n      dup5\n        /* \"#utility.yul\":9608:9630   */\n      eq\n        /* \"#utility.yul\":9588:9589   */\n      dup4\n        /* \"#utility.yul\":9581:9590   */\n      iszero\n        /* \"#utility.yul\":9561:9644   */\n      or\n        /* \"#utility.yul\":9538:9677   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":9657:9675   */\n      tag_362\n      tag_241\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9538:9677   */\n    tag_361:\n        /* \"#utility.yul\":9322:9684   */\n      pop\n        /* \"#utility.yul\":9274:9684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9690:10132   */\n    tag_162:\n        /* \"#utility.yul\":9839:9843   */\n      0x00\n        /* \"#utility.yul\":9877:9879   */\n      0x60\n        /* \"#utility.yul\":9866:9875   */\n      dup3\n        /* \"#utility.yul\":9862:9880   */\n      add\n        /* \"#utility.yul\":9854:9880   */\n      swap1\n      pop\n        /* \"#utility.yul\":9890:9961   */\n      tag_364\n        /* \"#utility.yul\":9958:9959   */\n      0x00\n        /* \"#utility.yul\":9947:9956   */\n      dup4\n        /* \"#utility.yul\":9943:9960   */\n      add\n        /* \"#utility.yul\":9934:9940   */\n      dup7\n        /* \"#utility.yul\":9890:9961   */\n      tag_239\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9971:10043   */\n      tag_365\n        /* \"#utility.yul\":10039:10041   */\n      0x20\n        /* \"#utility.yul\":10028:10037   */\n      dup4\n        /* \"#utility.yul\":10024:10042   */\n      add\n        /* \"#utility.yul\":10015:10021   */\n      dup6\n        /* \"#utility.yul\":9971:10043   */\n      tag_236\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10053:10125   */\n      tag_366\n        /* \"#utility.yul\":10121:10123   */\n      0x40\n        /* \"#utility.yul\":10110:10119   */\n      dup4\n        /* \"#utility.yul\":10106:10124   */\n      add\n        /* \"#utility.yul\":10097:10103   */\n      dup5\n        /* \"#utility.yul\":10053:10125   */\n      tag_236\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9690:10132   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10138:10255   */\n    tag_245:\n        /* \"#utility.yul\":10247:10248   */\n      0x00\n        /* \"#utility.yul\":10244:10245   */\n      0x00\n        /* \"#utility.yul\":10237:10249   */\n      revert\n        /* \"#utility.yul\":10261:10378   */\n    tag_246:\n        /* \"#utility.yul\":10370:10371   */\n      0x00\n        /* \"#utility.yul\":10367:10368   */\n      0x00\n        /* \"#utility.yul\":10360:10372   */\n      revert\n        /* \"#utility.yul\":10384:10853   */\n    tag_191:\n        /* \"#utility.yul\":10489:10498   */\n      0x00\n        /* \"#utility.yul\":10500:10509   */\n      0x00\n        /* \"#utility.yul\":10538:10546   */\n      dup6\n        /* \"#utility.yul\":10526:10536   */\n      dup6\n        /* \"#utility.yul\":10523:10547   */\n      gt\n        /* \"#utility.yul\":10520:10631   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10550:10629   */\n      tag_371\n      tag_245\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10520:10631   */\n    tag_370:\n        /* \"#utility.yul\":10656:10662   */\n      dup4\n        /* \"#utility.yul\":10646:10654   */\n      dup7\n        /* \"#utility.yul\":10643:10663   */\n      gt\n        /* \"#utility.yul\":10640:10747   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10666:10745   */\n      tag_373\n      tag_246\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10640:10747   */\n    tag_372:\n        /* \"#utility.yul\":10797:10798   */\n      0x01\n        /* \"#utility.yul\":10785:10795   */\n      dup6\n        /* \"#utility.yul\":10781:10799   */\n      mul\n        /* \"#utility.yul\":10773:10779   */\n      dup4\n        /* \"#utility.yul\":10769:10800   */\n      add\n        /* \"#utility.yul\":10756:10800   */\n      swap2\n      pop\n        /* \"#utility.yul\":10836:10846   */\n      dup5\n        /* \"#utility.yul\":10826:10834   */\n      dup7\n        /* \"#utility.yul\":10822:10847   */\n      sub\n        /* \"#utility.yul\":10809:10847   */\n      swap1\n      pop\n        /* \"#utility.yul\":10384:10853   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10859:10955   */\n    tag_247:\n        /* \"#utility.yul\":10917:10923   */\n      0x00\n        /* \"#utility.yul\":10945:10948   */\n      dup3\n        /* \"#utility.yul\":10935:10948   */\n      swap1\n      pop\n        /* \"#utility.yul\":10859:10955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11053:11203   */\n    tag_249:\n        /* \"#utility.yul\":11090:11097   */\n      0x00\n        /* \"#utility.yul\":11130:11196   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"#utility.yul\":11123:11128   */\n      dup3\n        /* \"#utility.yul\":11119:11197   */\n      and\n        /* \"#utility.yul\":11108:11197   */\n      swap1\n      pop\n        /* \"#utility.yul\":11053:11203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11316   */\n    tag_250:\n        /* \"#utility.yul\":11253:11261   */\n      0x00\n        /* \"#utility.yul\":11303:11308   */\n      dup3\n        /* \"#utility.yul\":11297:11301   */\n      dup3\n        /* \"#utility.yul\":11293:11309   */\n      shl\n        /* \"#utility.yul\":11272:11309   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11322:11874   */\n    tag_193:\n        /* \"#utility.yul\":11413:11418   */\n      0x00\n        /* \"#utility.yul\":11444:11489   */\n      tag_379\n        /* \"#utility.yul\":11485:11488   */\n      dup4\n        /* \"#utility.yul\":11478:11483   */\n      dup4\n        /* \"#utility.yul\":11444:11489   */\n      tag_247\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11514:11519   */\n      dup3\n        /* \"#utility.yul\":11538:11579   */\n      tag_380\n        /* \"#utility.yul\":11569:11577   */\n      dup2\n        /* \"#utility.yul\":11556:11578   */\n      calldataload\n        /* \"#utility.yul\":11538:11579   */\n      tag_249\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":11529:11579   */\n      swap3\n      pop\n        /* \"#utility.yul\":11603:11605   */\n      0x14\n        /* \"#utility.yul\":11595:11601   */\n      dup3\n        /* \"#utility.yul\":11592:11606   */\n      lt\n        /* \"#utility.yul\":11589:11867   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":11674:11843   */\n      tag_382\n        /* \"#utility.yul\":11759:11825   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"#utility.yul\":11729:11735   */\n      dup4\n        /* \"#utility.yul\":11725:11727   */\n      0x14\n        /* \"#utility.yul\":11721:11736   */\n      sub\n        /* \"#utility.yul\":11718:11719   */\n      0x08\n        /* \"#utility.yul\":11714:11737   */\n      mul\n        /* \"#utility.yul\":11674:11843   */\n      tag_250\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11651:11656   */\n      dup4\n        /* \"#utility.yul\":11630:11857   */\n      and\n        /* \"#utility.yul\":11621:11857   */\n      swap3\n      pop\n        /* \"#utility.yul\":11589:11867   */\n    tag_381:\n        /* \"#utility.yul\":11419:11874   */\n      pop\n      pop\n        /* \"#utility.yul\":11322:11874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11880:12071   */\n    tag_207:\n        /* \"#utility.yul\":11920:11923   */\n      0x00\n        /* \"#utility.yul\":11939:11959   */\n      tag_384\n        /* \"#utility.yul\":11957:11958   */\n      dup3\n        /* \"#utility.yul\":11939:11959   */\n      tag_231\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11934:11959   */\n      swap2\n      pop\n        /* \"#utility.yul\":11973:11993   */\n      tag_385\n        /* \"#utility.yul\":11991:11992   */\n      dup4\n        /* \"#utility.yul\":11973:11993   */\n      tag_231\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11968:11993   */\n      swap3\n      pop\n        /* \"#utility.yul\":12016:12017   */\n      dup3\n        /* \"#utility.yul\":12013:12014   */\n      dup3\n        /* \"#utility.yul\":12009:12018   */\n      add\n        /* \"#utility.yul\":12002:12018   */\n      swap1\n      pop\n        /* \"#utility.yul\":12037:12040   */\n      dup1\n        /* \"#utility.yul\":12034:12035   */\n      dup3\n        /* \"#utility.yul\":12031:12041   */\n      gt\n        /* \"#utility.yul\":12028:12064   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":12044:12062   */\n      tag_387\n      tag_241\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":12028:12064   */\n    tag_386:\n        /* \"#utility.yul\":11880:12071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b34b9b0cb9be1fd831c3372eb134d819f4ea6c50c359ffdfa6ee88332d75581c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_481": {
									"entryPoint": null,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 433,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6934:8",
										"nodeType": "YulBlock",
										"src": "0:6934:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "939:413:8",
													"nodeType": "YulBlock",
													"src": "939:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:8",
																"nodeType": "YulBlock",
																"src": "985:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:8"
																			},
																			"nativeSrc": "987:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:8"
																		},
																		"nativeSrc": "987:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:8"
																		},
																		"nativeSrc": "956:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "981:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:8"
																},
																"nativeSrc": "952:32:8",
																"nodeType": "YulFunctionCall",
																"src": "952:32:8"
															},
															"nativeSrc": "949:119:8",
															"nodeType": "YulIf",
															"src": "949:119:8"
														},
														{
															"nativeSrc": "1078:128:8",
															"nodeType": "YulBlock",
															"src": "1078:128:8",
															"statements": [
																{
																	"nativeSrc": "1093:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:8"
																				},
																				"nativeSrc": "1164:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:8"
																		},
																		"nativeSrc": "1132:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:8",
															"nodeType": "YulBlock",
															"src": "1216:129:8",
															"statements": [
																{
																	"nativeSrc": "1231:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:8"
																				},
																				"nativeSrc": "1303:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:8"
																		},
																		"nativeSrc": "1271:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:8",
														"nodeType": "YulTypedName",
														"src": "901:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:8",
														"nodeType": "YulTypedName",
														"src": "912:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:8",
														"nodeType": "YulTypedName",
														"src": "924:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:8",
														"nodeType": "YulTypedName",
														"src": "932:6:8",
														"type": ""
													}
												],
												"src": "845:507:8"
											},
											{
												"body": {
													"nativeSrc": "1417:40:8",
													"nodeType": "YulBlock",
													"src": "1417:40:8",
													"statements": [
														{
															"nativeSrc": "1428:22:8",
															"nodeType": "YulAssignment",
															"src": "1428:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:8"
																},
																"nativeSrc": "1438:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:8",
														"nodeType": "YulTypedName",
														"src": "1400:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:8",
														"nodeType": "YulTypedName",
														"src": "1410:6:8",
														"type": ""
													}
												],
												"src": "1358:99:8"
											},
											{
												"body": {
													"nativeSrc": "1491:152:8",
													"nodeType": "YulBlock",
													"src": "1491:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:8"
																},
																"nativeSrc": "1501:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:8"
															},
															"nativeSrc": "1501:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:8"
																},
																"nativeSrc": "1598:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:8"
															},
															"nativeSrc": "1598:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:8"
																},
																"nativeSrc": "1622:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:8"
															},
															"nativeSrc": "1622:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:8"
											},
											{
												"body": {
													"nativeSrc": "1677:152:8",
													"nodeType": "YulBlock",
													"src": "1677:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:8"
																},
																"nativeSrc": "1687:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:8"
															},
															"nativeSrc": "1687:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:8"
																},
																"nativeSrc": "1784:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:8"
															},
															"nativeSrc": "1784:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:8"
																},
																"nativeSrc": "1808:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:8"
															},
															"nativeSrc": "1808:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:8"
											},
											{
												"body": {
													"nativeSrc": "1886:269:8",
													"nodeType": "YulBlock",
													"src": "1886:269:8",
													"statements": [
														{
															"nativeSrc": "1896:22:8",
															"nodeType": "YulAssignment",
															"src": "1896:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:8"
																},
																"nativeSrc": "1906:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:8"
																}
															]
														},
														{
															"nativeSrc": "1927:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:8"
																},
																"nativeSrc": "1953:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:8",
																"nodeType": "YulBlock",
																"src": "2004:51:8",
																"statements": [
																	{
																		"nativeSrc": "2018:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:8"
																			},
																			"nativeSrc": "2028:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:8"
																},
																"nativeSrc": "1977:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:8"
															},
															"nativeSrc": "1974:81:8",
															"nodeType": "YulIf",
															"src": "1974:81:8"
														},
														{
															"body": {
																"nativeSrc": "2107:42:8",
																"nodeType": "YulBlock",
																"src": "2107:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:8"
																			},
																			"nativeSrc": "2121:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:8"
																		},
																		"nativeSrc": "2121:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:8"
																		},
																		"nativeSrc": "2091:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:8"
																},
																"nativeSrc": "2068:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:8"
															},
															"nativeSrc": "2065:84:8",
															"nodeType": "YulIf",
															"src": "2065:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:8",
														"nodeType": "YulTypedName",
														"src": "1870:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:8",
														"nodeType": "YulTypedName",
														"src": "1879:6:8",
														"type": ""
													}
												],
												"src": "1835:320:8"
											},
											{
												"body": {
													"nativeSrc": "2215:87:8",
													"nodeType": "YulBlock",
													"src": "2215:87:8",
													"statements": [
														{
															"nativeSrc": "2225:11:8",
															"nodeType": "YulAssignment",
															"src": "2225:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:8",
																"nodeType": "YulIdentifier",
																"src": "2233:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:8"
																},
																"nativeSrc": "2246:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:8"
															},
															"nativeSrc": "2246:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:8"
														},
														{
															"nativeSrc": "2269:26:8",
															"nodeType": "YulAssignment",
															"src": "2269:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:8"
																},
																"nativeSrc": "2277:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:8",
														"nodeType": "YulTypedName",
														"src": "2202:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:8",
														"nodeType": "YulTypedName",
														"src": "2210:4:8",
														"type": ""
													}
												],
												"src": "2161:141:8"
											},
											{
												"body": {
													"nativeSrc": "2352:49:8",
													"nodeType": "YulBlock",
													"src": "2352:49:8",
													"statements": [
														{
															"nativeSrc": "2362:33:8",
															"nodeType": "YulAssignment",
															"src": "2362:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:8"
																		},
																		"nativeSrc": "2376:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:8"
																},
																"nativeSrc": "2372:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:8",
														"nodeType": "YulTypedName",
														"src": "2335:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:8",
														"nodeType": "YulTypedName",
														"src": "2345:6:8",
														"type": ""
													}
												],
												"src": "2308:93:8"
											},
											{
												"body": {
													"nativeSrc": "2460:54:8",
													"nodeType": "YulBlock",
													"src": "2460:54:8",
													"statements": [
														{
															"nativeSrc": "2470:37:8",
															"nodeType": "YulAssignment",
															"src": "2470:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:8"
																},
																"nativeSrc": "2491:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:8",
														"nodeType": "YulTypedName",
														"src": "2435:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:8",
														"nodeType": "YulTypedName",
														"src": "2441:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:8",
														"nodeType": "YulTypedName",
														"src": "2451:8:8",
														"type": ""
													}
												],
												"src": "2407:107:8"
											},
											{
												"body": {
													"nativeSrc": "2596:317:8",
													"nodeType": "YulBlock",
													"src": "2596:317:8",
													"statements": [
														{
															"nativeSrc": "2606:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:8"
																},
																"nativeSrc": "2623:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:8"
																},
																"nativeSrc": "2662:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:8",
															"nodeType": "YulAssignment",
															"src": "2768:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:8"
																},
																"nativeSrc": "2780:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:8"
																}
															]
														},
														{
															"nativeSrc": "2828:30:8",
															"nodeType": "YulAssignment",
															"src": "2828:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:8"
																		},
																		"nativeSrc": "2848:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:8"
																},
																"nativeSrc": "2837:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:8"
																}
															]
														},
														{
															"nativeSrc": "2867:40:8",
															"nodeType": "YulAssignment",
															"src": "2867:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:8"
																		},
																		"nativeSrc": "2887:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:8"
																},
																"nativeSrc": "2877:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:8",
														"nodeType": "YulTypedName",
														"src": "2557:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:8",
														"nodeType": "YulTypedName",
														"src": "2564:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:8",
														"nodeType": "YulTypedName",
														"src": "2576:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:8",
														"nodeType": "YulTypedName",
														"src": "2589:6:8",
														"type": ""
													}
												],
												"src": "2520:393:8"
											},
											{
												"body": {
													"nativeSrc": "2964:32:8",
													"nodeType": "YulBlock",
													"src": "2964:32:8",
													"statements": [
														{
															"nativeSrc": "2974:16:8",
															"nodeType": "YulAssignment",
															"src": "2974:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:8",
																"nodeType": "YulIdentifier",
																"src": "2985:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:8",
														"nodeType": "YulTypedName",
														"src": "2946:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:8",
														"nodeType": "YulTypedName",
														"src": "2956:7:8",
														"type": ""
													}
												],
												"src": "2919:77:8"
											},
											{
												"body": {
													"nativeSrc": "3034:28:8",
													"nodeType": "YulBlock",
													"src": "3034:28:8",
													"statements": [
														{
															"nativeSrc": "3044:12:8",
															"nodeType": "YulAssignment",
															"src": "3044:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:8",
																"nodeType": "YulIdentifier",
																"src": "3051:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:8",
														"nodeType": "YulTypedName",
														"src": "3020:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:8",
														"nodeType": "YulTypedName",
														"src": "3030:3:8",
														"type": ""
													}
												],
												"src": "3002:60:8"
											},
											{
												"body": {
													"nativeSrc": "3128:82:8",
													"nodeType": "YulBlock",
													"src": "3128:82:8",
													"statements": [
														{
															"nativeSrc": "3138:66:8",
															"nodeType": "YulAssignment",
															"src": "3138:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:8"
																				},
																				"nativeSrc": "3178:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:8"
																		},
																		"nativeSrc": "3169:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:8"
																},
																"nativeSrc": "3151:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:8",
														"nodeType": "YulTypedName",
														"src": "3108:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:8",
														"nodeType": "YulTypedName",
														"src": "3118:9:8",
														"type": ""
													}
												],
												"src": "3068:142:8"
											},
											{
												"body": {
													"nativeSrc": "3263:28:8",
													"nodeType": "YulBlock",
													"src": "3263:28:8",
													"statements": [
														{
															"nativeSrc": "3273:12:8",
															"nodeType": "YulAssignment",
															"src": "3273:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:8",
																"nodeType": "YulIdentifier",
																"src": "3280:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:8",
														"nodeType": "YulTypedName",
														"src": "3249:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:8",
														"nodeType": "YulTypedName",
														"src": "3259:3:8",
														"type": ""
													}
												],
												"src": "3216:75:8"
											},
											{
												"body": {
													"nativeSrc": "3373:193:8",
													"nodeType": "YulBlock",
													"src": "3373:193:8",
													"statements": [
														{
															"nativeSrc": "3383:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:8"
																},
																"nativeSrc": "3407:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:8"
																				},
																				"nativeSrc": "3496:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:8"
																				},
																				"nativeSrc": "3517:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:8"
																		},
																		"nativeSrc": "3468:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:8"
																},
																"nativeSrc": "3455:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:8"
															},
															"nativeSrc": "3455:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:8",
														"nodeType": "YulTypedName",
														"src": "3350:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:8",
														"nodeType": "YulTypedName",
														"src": "3356:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:8",
														"nodeType": "YulTypedName",
														"src": "3364:7:8",
														"type": ""
													}
												],
												"src": "3297:269:8"
											},
											{
												"body": {
													"nativeSrc": "3621:24:8",
													"nodeType": "YulBlock",
													"src": "3621:24:8",
													"statements": [
														{
															"nativeSrc": "3631:8:8",
															"nodeType": "YulAssignment",
															"src": "3631:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:8",
																"nodeType": "YulLiteral",
																"src": "3638:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:8",
														"nodeType": "YulTypedName",
														"src": "3617:3:8",
														"type": ""
													}
												],
												"src": "3572:73:8"
											},
											{
												"body": {
													"nativeSrc": "3704:136:8",
													"nodeType": "YulBlock",
													"src": "3704:136:8",
													"statements": [
														{
															"nativeSrc": "3714:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:8"
																},
																"nativeSrc": "3728:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:8"
																},
																"nativeSrc": "3769:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:8"
															},
															"nativeSrc": "3769:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:8",
														"nodeType": "YulTypedName",
														"src": "3690:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:8",
														"nodeType": "YulTypedName",
														"src": "3696:6:8",
														"type": ""
													}
												],
												"src": "3651:189:8"
											},
											{
												"body": {
													"nativeSrc": "3896:136:8",
													"nodeType": "YulBlock",
													"src": "3896:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:8",
																"nodeType": "YulBlock",
																"src": "3963:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:8"
																			},
																			"nativeSrc": "3977:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:8"
																		},
																		"nativeSrc": "3977:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:8"
																},
																"nativeSrc": "3913:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:8"
															},
															"nativeSrc": "3906:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:8",
																"nodeType": "YulBlock",
																"src": "3928:26:8",
																"statements": [
																	{
																		"nativeSrc": "3930:22:8",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:8"
																			},
																			"nativeSrc": "3939:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:8",
																"nodeType": "YulBlock",
																"src": "3910:2:8",
																"statements": []
															},
															"src": "3906:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:8",
														"nodeType": "YulTypedName",
														"src": "3884:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:8",
														"nodeType": "YulTypedName",
														"src": "3891:3:8",
														"type": ""
													}
												],
												"src": "3846:186:8"
											},
											{
												"body": {
													"nativeSrc": "4117:464:8",
													"nodeType": "YulBlock",
													"src": "4117:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:8",
																"nodeType": "YulBlock",
																"src": "4143:431:8",
																"statements": [
																	{
																		"nativeSrc": "4157:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:8"
																			},
																			"nativeSrc": "4173:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:8"
																					},
																					"nativeSrc": "4257:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:8"
																			},
																			"nativeSrc": "4243:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:8",
																			"nodeType": "YulBlock",
																			"src": "4444:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:8"
																			},
																			"nativeSrc": "4425:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:8"
																		},
																		"nativeSrc": "4422:49:8",
																		"nodeType": "YulIf",
																		"src": "4422:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:8"
																							},
																							"nativeSrc": "4540:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:8"
																					},
																					"nativeSrc": "4526:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:8"
																			},
																			"nativeSrc": "4484:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:8"
																		},
																		"nativeSrc": "4484:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:8"
																},
																"nativeSrc": "4131:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:8"
															},
															"nativeSrc": "4128:446:8",
															"nodeType": "YulIf",
															"src": "4128:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:8",
														"nodeType": "YulTypedName",
														"src": "4093:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:8",
														"nodeType": "YulTypedName",
														"src": "4100:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:8",
														"nodeType": "YulTypedName",
														"src": "4105:10:8",
														"type": ""
													}
												],
												"src": "4038:543:8"
											},
											{
												"body": {
													"nativeSrc": "4650:54:8",
													"nodeType": "YulBlock",
													"src": "4650:54:8",
													"statements": [
														{
															"nativeSrc": "4660:37:8",
															"nodeType": "YulAssignment",
															"src": "4660:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:8"
																},
																"nativeSrc": "4681:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:8",
														"nodeType": "YulTypedName",
														"src": "4625:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:8",
														"nodeType": "YulTypedName",
														"src": "4631:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:8",
														"nodeType": "YulTypedName",
														"src": "4641:8:8",
														"type": ""
													}
												],
												"src": "4587:117:8"
											},
											{
												"body": {
													"nativeSrc": "4761:118:8",
													"nodeType": "YulBlock",
													"src": "4761:118:8",
													"statements": [
														{
															"nativeSrc": "4771:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:8"
																				},
																				"nativeSrc": "4816:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:8"
																				},
																				"nativeSrc": "4831:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:8"
																		},
																		"nativeSrc": "4787:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:8"
																},
																"nativeSrc": "4783:56:8",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:8",
															"nodeType": "YulAssignment",
															"src": "4848:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:8"
																},
																"nativeSrc": "4858:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:8",
														"nodeType": "YulTypedName",
														"src": "4738:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:8",
														"nodeType": "YulTypedName",
														"src": "4744:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:8",
														"nodeType": "YulTypedName",
														"src": "4754:6:8",
														"type": ""
													}
												],
												"src": "4710:169:8"
											},
											{
												"body": {
													"nativeSrc": "4965:214:8",
													"nodeType": "YulBlock",
													"src": "4965:214:8",
													"statements": [
														{
															"nativeSrc": "5098:37:8",
															"nodeType": "YulAssignment",
															"src": "5098:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:8"
																},
																"nativeSrc": "5106:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:8"
																}
															]
														},
														{
															"nativeSrc": "5144:29:8",
															"nodeType": "YulAssignment",
															"src": "5144:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:8"
																		},
																		"nativeSrc": "5161:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:8"
																},
																"nativeSrc": "5152:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:8",
														"nodeType": "YulTypedName",
														"src": "4946:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:8",
														"nodeType": "YulTypedName",
														"src": "4952:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:8",
														"nodeType": "YulTypedName",
														"src": "4960:4:8",
														"type": ""
													}
												],
												"src": "4884:295:8"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:8",
													"nodeType": "YulBlock",
													"src": "5276:1303:8",
													"statements": [
														{
															"nativeSrc": "5287:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:8"
																},
																"nativeSrc": "5301:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:8",
																"nodeType": "YulBlock",
																"src": "5423:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:8"
																			},
																			"nativeSrc": "5425:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:8"
																		},
																		"nativeSrc": "5425:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:8"
																},
																"nativeSrc": "5392:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:8"
															},
															"nativeSrc": "5389:56:8",
															"nodeType": "YulIf",
															"src": "5389:56:8"
														},
														{
															"nativeSrc": "5455:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:8"
																		},
																		"nativeSrc": "5495:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:8"
																},
																"nativeSrc": "5469:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:8"
																},
																"nativeSrc": "5554:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:8"
															},
															"nativeSrc": "5554:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:8"
														},
														{
															"nativeSrc": "5631:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:8",
																"nodeType": "YulLiteral",
																"src": "5648:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:8",
															"nodeType": "YulAssignment",
															"src": "5659:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:8",
																"nodeType": "YulLiteral",
																"src": "5672:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:8",
																		"nodeType": "YulBlock",
																		"src": "5723:611:8",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:8",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:8"
																							},
																							"nativeSrc": "5764:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:8"
																					},
																					"nativeSrc": "5752:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:8",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:8"
																					},
																					"nativeSrc": "5802:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:8",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:8",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:8",
																					"nodeType": "YulBlock",
																					"src": "5920:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:8"
																												},
																												"nativeSrc": "5959:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:8"
																										},
																										"nativeSrc": "5953:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:8"
																								},
																								"nativeSrc": "5938:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:8"
																							},
																							"nativeSrc": "5938:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:8"
																						},
																						{
																							"nativeSrc": "5997:24:8",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:8"
																								},
																								"nativeSrc": "6007:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:8"
																								},
																								"nativeSrc": "6051:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:8"
																					},
																					"nativeSrc": "5883:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:8"
																				},
																				"nativeSrc": "5875:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:8",
																					"nodeType": "YulBlock",
																					"src": "5898:21:8",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:8",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:8",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:8"
																								},
																								"nativeSrc": "5905:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:8",
																					"nodeType": "YulBlock",
																					"src": "5879:3:8",
																					"statements": []
																				},
																				"src": "5875:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:8",
																					"nodeType": "YulBlock",
																					"src": "6119:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:8"
																										},
																										"nativeSrc": "6160:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:8"
																								},
																								"nativeSrc": "6154:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:8"
																												},
																												"nativeSrc": "6242:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:8"
																										},
																										"nativeSrc": "6212:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:8"
																								},
																								"nativeSrc": "6197:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:8"
																							},
																							"nativeSrc": "6197:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:8"
																					},
																					"nativeSrc": "6099:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:8"
																				},
																				"nativeSrc": "6096:179:8",
																				"nodeType": "YulIf",
																				"src": "6096:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:8"
																									},
																									"nativeSrc": "6305:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:8"
																							},
																							"nativeSrc": "6301:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:8"
																					},
																					"nativeSrc": "6288:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:8"
																				},
																				"nativeSrc": "6288:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:8",
																	"nodeType": "YulCase",
																	"src": "5716:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:8",
																		"nodeType": "YulBlock",
																		"src": "6351:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:8",
																					"nodeType": "YulBlock",
																					"src": "6402:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:8"
																										},
																										"nativeSrc": "6435:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:8"
																								},
																								"nativeSrc": "6429:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:8"
																				},
																				"nativeSrc": "6392:77:8",
																				"nodeType": "YulIf",
																				"src": "6392:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:8"
																							},
																							"nativeSrc": "6495:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:8"
																					},
																					"nativeSrc": "6482:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:8"
																				},
																				"nativeSrc": "6482:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:8",
																	"nodeType": "YulCase",
																	"src": "6343:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:8"
																},
																"nativeSrc": "5693:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:8"
															},
															"nativeSrc": "5686:887:8",
															"nodeType": "YulSwitch",
															"src": "5686:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:8",
														"nodeType": "YulTypedName",
														"src": "5265:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:8",
														"nodeType": "YulTypedName",
														"src": "5271:3:8",
														"type": ""
													}
												],
												"src": "5184:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6650:53:8",
													"nodeType": "YulBlock",
													"src": "6650:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:8"
																		},
																		"nativeSrc": "6672:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:8"
																},
																"nativeSrc": "6660:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:8"
															},
															"nativeSrc": "6660:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:8",
														"nodeType": "YulTypedName",
														"src": "6638:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:8",
														"nodeType": "YulTypedName",
														"src": "6645:3:8",
														"type": ""
													}
												],
												"src": "6585:118:8"
											},
											{
												"body": {
													"nativeSrc": "6807:124:8",
													"nodeType": "YulBlock",
													"src": "6807:124:8",
													"statements": [
														{
															"nativeSrc": "6817:26:8",
															"nodeType": "YulAssignment",
															"src": "6817:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:8"
																},
																"nativeSrc": "6825:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:8"
																		},
																		"nativeSrc": "6906:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:8"
																},
																"nativeSrc": "6853:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:8"
															},
															"nativeSrc": "6853:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:8",
														"nodeType": "YulTypedName",
														"src": "6779:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:8",
														"nodeType": "YulTypedName",
														"src": "6791:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:8",
														"nodeType": "YulTypedName",
														"src": "6802:4:8",
														"type": ""
													}
												],
												"src": "6709:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051611c43380380611c43833981810160405281019061003191906102d2565b80826040518060400160405280600c81526020017f52657761726420546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f525744000000000000000000000000000000000000000000000000000000000081525081600390816100ae919061054d565b5080600490816100be919061054d565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610166575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161015d919061062b565b60405180910390fd5b610175816101b160201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610644565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102a182610278565b9050919050565b6102b181610297565b81146102bb575f5ffd5b50565b5f815190506102cc816102a8565b92915050565b5f5f604083850312156102e8576102e7610274565b5b5f6102f5858286016102be565b9250506020610306858286016102be565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061038b57607f821691505b60208210810361039e5761039d610347565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103c5565b61040a86836103c5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61044e61044961044484610422565b61042b565b610422565b9050919050565b5f819050919050565b61046783610434565b61047b61047382610455565b8484546103d1565b825550505050565b5f5f905090565b610492610483565b61049d81848461045e565b505050565b5b818110156104c0576104b55f8261048a565b6001810190506104a3565b5050565b601f821115610505576104d6816103a4565b6104df846103b6565b810160208510156104ee578190505b6105026104fa856103b6565b8301826104a2565b50505b505050565b5f82821c905092915050565b5f6105255f198460080261050a565b1980831691505092915050565b5f61053d8383610516565b9150826002028217905092915050565b61055682610310565b67ffffffffffffffff81111561056f5761056e61031a565b5b6105798254610374565b6105848282856104c4565b5f60209050601f8311600181146105b5575f84156105a3578287015190505b6105ad8582610532565b865550610614565b601f1984166105c3866103a4565b5f5b828110156105ea578489015182556001820191506020850194506020810190506105c5565b868310156106075784890151610603601f891682610516565b8355505b6001600288020188555050505b505050505050565b61062581610297565b82525050565b5f60208201905061063e5f83018461061c565b92915050565b60805160a0516115e16106625f395f50505f6104ca01526115e15ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb1461029c578063b921e163146102cc578063dd62ed3e146102e8578063f2fde38b14610318576100fe565b8063715018a6146102385780637da0a877146102425780638da5cb5b1461026057806395d89b411461027e576100fe565b8063313ce567116100d1578063313ce5671461019e57806340c10f19146101bc578063572b6c05146101d857806370a0823114610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a610334565b6040516101179190610f94565b60405180910390f35b61013a60048036038101906101359190611045565b6103c4565b604051610147919061109d565b60405180910390f35b6101586103e6565b60405161016591906110c5565b60405180910390f35b610188600480360381019061018391906110de565b6103ef565b604051610195919061109d565b60405180910390f35b6101a661041d565b6040516101b39190611149565b60405180910390f35b6101d660048036038101906101d19190611045565b610425565b005b6101f260048036038101906101ed9190611162565b61045e565b6040516101ff919061109d565b60405180910390f35b610222600480360381019061021d9190611162565b61046f565b60405161022f91906110c5565b60405180910390f35b6102406104b4565b005b61024a6104c7565b604051610257919061119c565b60405180910390f35b6102686104ee565b604051610275919061119c565b60405180910390f35b610286610516565b6040516102939190610f94565b60405180910390f35b6102b660048036038101906102b19190611045565b6105a6565b6040516102c3919061109d565b60405180910390f35b6102e660048036038101906102e191906111b5565b6105c8565b005b61030260048036038101906102fd91906111e0565b610607565b60405161030f91906110c5565b60405180910390f35b610332600480360381019061032d9190611162565b610689565b005b6060600380546103439061124b565b80601f016020809104026020016040519081016040528092919081815260200182805461036f9061124b565b80156103ba5780601f10610391576101008083540402835291602001916103ba565b820191905f5260205f20905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b5f5f6103ce61070d565b90506103db81858561071b565b600191505092915050565b5f600254905090565b5f5f6103f961070d565b905061040685828561072d565b6104118585856107c0565b60019150509392505050565b5f6012905090565b61042d6108b0565b5f61043661041d565b600a61044291906113d7565b8261044d9190611421565b90506104598382610937565b505050565b5f610468826109b6565b9050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104bc6108b0565b6104c55f6109f4565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105259061124b565b80601f01602080910402602001604051908101604052809291908181526020018280546105519061124b565b801561059c5780601f106105735761010080835404028352916020019161059c565b820191905f5260205f20905b81548152906001019060200180831161057f57829003601f168201915b5050505050905090565b5f5f6105b061070d565b90506105bd8185856107c0565b600191505092915050565b6105d06108b0565b5f6105d961041d565b600a6105e591906113d7565b826105f09190611421565b90506106036105fd6104ee565b82610937565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6106916108b0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610701575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f8919061119c565b60405180910390fd5b61070a816109f4565b50565b5f610716610ab7565b905090565b6107288383836001610b1f565b505050565b5f6107388484610607565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107ba57818110156107ab578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107a293929190611462565b60405180910390fd5b6107b984848484035f610b1f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610830575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610827919061119c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610897919061119c565b60405180910390fd5b6108ab838383610cee565b505050565b6108b861070d565b73ffffffffffffffffffffffffffffffffffffffff166108d66104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610935576108f961070d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161092c919061119c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161099e919061119c565b60405180910390fd5b6109b25f8383610cee565b5050565b5f6109bf6104c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f5f36905090505f610ac8610f07565b9050808210158015610adf5750610ade3361045e565b5b15610b0f575f36828403908092610af89392919061149f565b90610b03919061151a565b60601c92505050610b1c565b610b17610f15565b925050505b90565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b8f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b86919061119c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bff575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bf6919061119c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610ce8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cdf91906110c5565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3e578060025f828254610d329190611578565b92505081905550610e0c565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dc7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dbe93929190611462565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e53578060025f8282540392505081905550610e9d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610efa91906110c5565b60405180910390a3505050565b5f610f10610f1c565b905090565b5f33905090565b5f6014905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f6682610f24565b610f708185610f2e565b9350610f80818560208601610f3e565b610f8981610f4c565b840191505092915050565b5f6020820190508181035f830152610fac8184610f5c565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fe182610fb8565b9050919050565b610ff181610fd7565b8114610ffb575f5ffd5b50565b5f8135905061100c81610fe8565b92915050565b5f819050919050565b61102481611012565b811461102e575f5ffd5b50565b5f8135905061103f8161101b565b92915050565b5f5f6040838503121561105b5761105a610fb4565b5b5f61106885828601610ffe565b925050602061107985828601611031565b9150509250929050565b5f8115159050919050565b61109781611083565b82525050565b5f6020820190506110b05f83018461108e565b92915050565b6110bf81611012565b82525050565b5f6020820190506110d85f8301846110b6565b92915050565b5f5f5f606084860312156110f5576110f4610fb4565b5b5f61110286828701610ffe565b935050602061111386828701610ffe565b925050604061112486828701611031565b9150509250925092565b5f60ff82169050919050565b6111438161112e565b82525050565b5f60208201905061115c5f83018461113a565b92915050565b5f6020828403121561117757611176610fb4565b5b5f61118484828501610ffe565b91505092915050565b61119681610fd7565b82525050565b5f6020820190506111af5f83018461118d565b92915050565b5f602082840312156111ca576111c9610fb4565b5b5f6111d784828501611031565b91505092915050565b5f5f604083850312156111f6576111f5610fb4565b5b5f61120385828601610ffe565b925050602061121485828601610ffe565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061126257607f821691505b6020821081036112755761127461121e565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156112fd578086048111156112d9576112d861127b565b5b60018516156112e85780820291505b80810290506112f6856112a8565b94506112bd565b94509492505050565b5f8261131557600190506113d0565b81611322575f90506113d0565b8160018114611338576002811461134257611371565b60019150506113d0565b60ff8411156113545761135361127b565b5b8360020a91508482111561136b5761136a61127b565b5b506113d0565b5060208310610133831016604e8410600b84101617156113a65782820a9050838111156113a1576113a061127b565b5b6113d0565b6113b384848460016112b4565b925090508184048111156113ca576113c961127b565b5b81810290505b9392505050565b5f6113e182611012565b91506113ec8361112e565b92506114197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611306565b905092915050565b5f61142b82611012565b915061143683611012565b925082820261144481611012565b9150828204841483151761145b5761145a61127b565b5b5092915050565b5f6060820190506114755f83018661118d565b61148260208301856110b6565b61148f60408301846110b6565b949350505050565b5f5ffd5b5f5ffd5b5f5f858511156114b2576114b1611497565b5b838611156114c3576114c261149b565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f82821b905092915050565b5f61152583836114d9565b8261153081356114e3565b925060148210156115705761156b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261150e565b831692505b505092915050565b5f61158282611012565b915061158d83611012565b92508282019050808211156115a5576115a461127b565b5b9291505056fea2646970667358221220b34b9b0cb9be1fd831c3372eb134d819f4ea6c50c359ffdfa6ee88332d75581c64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C43 CODESIZE SUB DUP1 PUSH2 0x1C43 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52657761726420546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5257440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x54D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x54D JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x1B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x644 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A1 DUP3 PUSH2 0x278 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1 DUP2 PUSH2 0x297 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CC DUP2 PUSH2 0x2A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E8 JUMPI PUSH2 0x2E7 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F5 DUP6 DUP3 DUP7 ADD PUSH2 0x2BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x306 DUP6 DUP3 DUP7 ADD PUSH2 0x2BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x347 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x400 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x40A DUP7 DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44E PUSH2 0x449 PUSH2 0x444 DUP5 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x467 DUP4 PUSH2 0x434 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x473 DUP3 PUSH2 0x455 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x49D DUP2 DUP5 DUP5 PUSH2 0x45E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4B5 PUSH0 DUP3 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x505 JUMPI PUSH2 0x4D6 DUP2 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x4DF DUP5 PUSH2 0x3B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x502 PUSH2 0x4FA DUP6 PUSH2 0x3B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4A2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x525 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x50A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x53D DUP4 DUP4 PUSH2 0x516 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x556 DUP3 PUSH2 0x310 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56F JUMPI PUSH2 0x56E PUSH2 0x31A JUMP JUMPDEST JUMPDEST PUSH2 0x579 DUP3 SLOAD PUSH2 0x374 JUMP JUMPDEST PUSH2 0x584 DUP3 DUP3 DUP6 PUSH2 0x4C4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5B5 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5A3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5AD DUP6 DUP3 PUSH2 0x532 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5C3 DUP7 PUSH2 0x3A4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5EA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x607 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x603 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x516 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x625 DUP2 PUSH2 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x63E PUSH0 DUP4 ADD DUP5 PUSH2 0x61C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x15E1 PUSH2 0x662 PUSH0 CODECOPY PUSH0 POP POP PUSH0 PUSH2 0x4CA ADD MSTORE PUSH2 0x15E1 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB921E163 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x318 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x4B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x343 SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x391 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3CE PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH2 0x3DB DUP2 DUP6 DUP6 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3F9 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH2 0x406 DUP6 DUP3 DUP6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x411 DUP6 DUP6 DUP6 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x42D PUSH2 0x8B0 JUMP JUMPDEST PUSH0 PUSH2 0x436 PUSH2 0x41D JUMP JUMPDEST PUSH1 0xA PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST DUP3 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 DUP4 DUP3 PUSH2 0x937 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x468 DUP3 PUSH2 0x9B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x4C5 PUSH0 PUSH2 0x9F4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x525 SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x551 SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x573 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B0 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH2 0x5BD DUP2 DUP6 DUP6 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0x8B0 JUMP JUMPDEST PUSH0 PUSH2 0x5D9 PUSH2 0x41D JUMP JUMPDEST PUSH1 0xA PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST DUP3 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP PUSH2 0x603 PUSH2 0x5FD PUSH2 0x4EE JUMP JUMPDEST DUP3 PUSH2 0x937 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x691 PUSH2 0x8B0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70A DUP2 PUSH2 0x9F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x716 PUSH2 0xAB7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x728 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x738 DUP5 DUP5 PUSH2 0x607 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x7BA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7AB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB1F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x830 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AB DUP4 DUP4 DUP4 PUSH2 0xCEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x70D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D6 PUSH2 0x4EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x935 JUMPI PUSH2 0x8F9 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B2 PUSH0 DUP4 DUP4 PUSH2 0xCEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BF PUSH2 0x4C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 CALLDATASIZE SWAP1 POP SWAP1 POP PUSH0 PUSH2 0xAC8 PUSH2 0xF07 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI POP PUSH2 0xADE CALLER PUSH2 0x45E JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0xB0F JUMPI PUSH0 CALLDATASIZE DUP3 DUP5 SUB SWAP1 DUP1 SWAP3 PUSH2 0xAF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP1 PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xF15 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCE8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE0C JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDC7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE9D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF10 PUSH2 0xF1C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF66 DUP3 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xF70 DUP2 DUP6 PUSH2 0xF2E JUMP JUMPDEST SWAP4 POP PUSH2 0xF80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF3E JUMP JUMPDEST PUSH2 0xF89 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAC DUP2 DUP5 PUSH2 0xF5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFE1 DUP3 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF1 DUP2 PUSH2 0xFD7 JUMP JUMPDEST DUP2 EQ PUSH2 0xFFB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100C DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1024 DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103F DUP2 PUSH2 0x101B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105B JUMPI PUSH2 0x105A PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1068 DUP6 DUP3 DUP7 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1079 DUP6 DUP3 DUP7 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1097 DUP2 PUSH2 0x1083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x108E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10BF DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x10B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1102 DUP7 DUP3 DUP8 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1113 DUP7 DUP3 DUP8 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1124 DUP7 DUP3 DUP8 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1143 DUP2 PUSH2 0x112E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115C PUSH0 DUP4 ADD DUP5 PUSH2 0x113A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1177 JUMPI PUSH2 0x1176 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1184 DUP5 DUP3 DUP6 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1196 DUP2 PUSH2 0xFD7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11AF PUSH0 DUP4 ADD DUP5 PUSH2 0x118D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CA JUMPI PUSH2 0x11C9 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D7 DUP5 DUP3 DUP6 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F5 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1203 DUP6 DUP3 DUP7 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1214 DUP6 DUP3 DUP7 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1262 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x12FD JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D8 PUSH2 0x127B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x12E8 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x12F6 DUP6 PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP PUSH2 0x12BD JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1315 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x13D0 JUMP JUMPDEST DUP2 PUSH2 0x1322 JUMPI PUSH0 SWAP1 POP PUSH2 0x13D0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1338 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1342 JUMPI PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1354 JUMPI PUSH2 0x1353 PUSH2 0x127B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136A PUSH2 0x127B JUMP JUMPDEST JUMPDEST POP PUSH2 0x13D0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x13A6 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x13A1 JUMPI PUSH2 0x13A0 PUSH2 0x127B JUMP JUMPDEST JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x13B3 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13C9 PUSH2 0x127B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP PUSH2 0x13EC DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP3 POP PUSH2 0x1419 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP PUSH2 0x1436 DUP4 PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1444 DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x145B JUMPI PUSH2 0x145A PUSH2 0x127B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1475 PUSH0 DUP4 ADD DUP7 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x1482 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x148F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x149B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1525 DUP4 DUP4 PUSH2 0x14D9 JUMP JUMPDEST DUP3 PUSH2 0x1530 DUP2 CALLDATALOAD PUSH2 0x14E3 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x1570 JUMPI PUSH2 0x156B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x150E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1582 DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP4 PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x127B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B SWAP12 0xC 0xB9 0xBE 0x1F 0xD8 BALANCE 0xC3 CALLDATACOPY 0x2E 0xB1 CALLVALUE 0xD8 NOT DELEGATECALL 0xEA PUSH13 0x50C359FFDFA6EE88332D75581C PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "235:1556:7:-:0;;;349:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;506:12;471:16;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1520:17:2;1500:37;;;;;;;;;;1451:93;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;556:16:7::3;536:36;;;;;;;;::::0;::::3;349:231:::0;;235:1556;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3638:1;3631:8;;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;235:1556:7:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_835": {
									"entryPoint": 1819,
									"id": 835,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_895": {
									"entryPoint": 2847,
									"id": 895,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2224,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contextSuffixLength_1126": {
									"entryPoint": 3847,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_contextSuffixLength_428": {
									"entryPoint": 3868,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_784": {
									"entryPoint": 2359,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1060": {
									"entryPoint": 3861,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1139": {
									"entryPoint": 1805,
									"id": 1139,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_376": {
									"entryPoint": 2743,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_943": {
									"entryPoint": 1837,
									"id": 943,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2548,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_674": {
									"entryPoint": 1984,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_751": {
									"entryPoint": 3310,
									"id": 751,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_571": {
									"entryPoint": 1543,
									"id": 571,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_595": {
									"entryPoint": 964,
									"id": 595,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_530": {
									"entryPoint": 1135,
									"id": 530,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_508": {
									"entryPoint": 1053,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseSupply_1214": {
									"entryPoint": 1480,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isTrustedForwarder_1167": {
									"entryPoint": 1118,
									"id": 1167,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isTrustedForwarder_328": {
									"entryPoint": 2486,
									"id": 328,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1191": {
									"entryPoint": 1061,
									"id": 1191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_490": {
									"entryPoint": 820,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1262,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1204,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_499": {
									"entryPoint": 1302,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_517": {
									"entryPoint": 998,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_627": {
									"entryPoint": 1007,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1673,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_554": {
									"entryPoint": 1446,
									"id": 554,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@trustedForwarder_314": {
									"entryPoint": 1223,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_calldata_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_calldata_ptr": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes20": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c": {
									"entryPoint": 5275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12074:8",
										"nodeType": "YulBlock",
										"src": "0:12074:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5499:263:8",
													"nodeType": "YulBlock",
													"src": "5499:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:8",
																"nodeType": "YulBlock",
																"src": "5545:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:8"
																			},
																			"nativeSrc": "5547:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:8"
																		},
																		"nativeSrc": "5547:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:8"
																		},
																		"nativeSrc": "5516:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:8"
																},
																"nativeSrc": "5512:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:8"
															},
															"nativeSrc": "5509:119:8",
															"nodeType": "YulIf",
															"src": "5509:119:8"
														},
														{
															"nativeSrc": "5638:117:8",
															"nodeType": "YulBlock",
															"src": "5638:117:8",
															"statements": [
																{
																	"nativeSrc": "5653:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:8"
																				},
																				"nativeSrc": "5713:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:8"
																		},
																		"nativeSrc": "5692:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:8",
														"nodeType": "YulTypedName",
														"src": "5469:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:8",
														"nodeType": "YulTypedName",
														"src": "5480:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:8",
														"nodeType": "YulTypedName",
														"src": "5492:6:8",
														"type": ""
													}
												],
												"src": "5433:329:8"
											},
											{
												"body": {
													"nativeSrc": "5851:391:8",
													"nodeType": "YulBlock",
													"src": "5851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:8",
																"nodeType": "YulBlock",
																"src": "5897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:8"
																			},
																			"nativeSrc": "5899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:8"
																		},
																		"nativeSrc": "5899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:8"
																		},
																		"nativeSrc": "5868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:8"
																},
																"nativeSrc": "5864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nativeSrc": "5861:119:8",
															"nodeType": "YulIf",
															"src": "5861:119:8"
														},
														{
															"nativeSrc": "5990:117:8",
															"nodeType": "YulBlock",
															"src": "5990:117:8",
															"statements": [
																{
																	"nativeSrc": "6005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:8"
																				},
																				"nativeSrc": "6065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:8"
																		},
																		"nativeSrc": "6044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:8",
															"nodeType": "YulBlock",
															"src": "6117:118:8",
															"statements": [
																{
																	"nativeSrc": "6132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:8",
														"nodeType": "YulTypedName",
														"src": "5813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:8",
														"nodeType": "YulTypedName",
														"src": "5824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:8",
														"nodeType": "YulTypedName",
														"src": "5836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:8",
														"nodeType": "YulTypedName",
														"src": "5844:6:8",
														"type": ""
													}
												],
												"src": "5768:474:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6788:152:8",
													"nodeType": "YulBlock",
													"src": "6788:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6805:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6805:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6808:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6808:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:8"
																},
																"nativeSrc": "6798:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6798:88:8"
															},
															"nativeSrc": "6798:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6798:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6902:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6902:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6905:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6905:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:8"
																},
																"nativeSrc": "6895:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6895:15:8"
															},
															"nativeSrc": "6895:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6895:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6926:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6926:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6929:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6929:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6919:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:8"
																},
																"nativeSrc": "6919:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6919:15:8"
															},
															"nativeSrc": "6919:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6919:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6760:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6760:180:8"
											},
											{
												"body": {
													"nativeSrc": "6997:51:8",
													"nodeType": "YulBlock",
													"src": "6997:51:8",
													"statements": [
														{
															"nativeSrc": "7007:34:8",
															"nodeType": "YulAssignment",
															"src": "7007:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7032:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7032:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7035:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7035:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7028:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7028:3:8"
																},
																"nativeSrc": "7028:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7028:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7007:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7007:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6946:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6978:5:8",
														"nodeType": "YulTypedName",
														"src": "6978:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6988:8:8",
														"nodeType": "YulTypedName",
														"src": "6988:8:8",
														"type": ""
													}
												],
												"src": "6946:102:8"
											},
											{
												"body": {
													"nativeSrc": "7127:775:8",
													"nodeType": "YulBlock",
													"src": "7127:775:8",
													"statements": [
														{
															"nativeSrc": "7137:15:8",
															"nodeType": "YulAssignment",
															"src": "7137:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "7146:6:8",
																"nodeType": "YulIdentifier",
																"src": "7146:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7137:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7137:5:8"
																}
															]
														},
														{
															"nativeSrc": "7161:14:8",
															"nodeType": "YulAssignment",
															"src": "7161:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "7170:5:8",
																"nodeType": "YulIdentifier",
																"src": "7170:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7161:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7219:677:8",
																"nodeType": "YulBlock",
																"src": "7219:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7307:22:8",
																			"nodeType": "YulBlock",
																			"src": "7307:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7309:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "7309:16:8"
																						},
																						"nativeSrc": "7309:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7309:18:8"
																					},
																					"nativeSrc": "7309:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "7309:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7285:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7285:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7295:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7295:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7300:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7300:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7291:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7291:3:8"
																					},
																					"nativeSrc": "7291:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7291:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7282:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7282:2:8"
																			},
																			"nativeSrc": "7282:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7282:24:8"
																		},
																		"nativeSrc": "7279:50:8",
																		"nodeType": "YulIf",
																		"src": "7279:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "7374:419:8",
																			"nodeType": "YulBlock",
																			"src": "7374:419:8",
																			"statements": [
																				{
																					"nativeSrc": "7754:25:8",
																					"nodeType": "YulAssignment",
																					"src": "7754:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7767:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "7767:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7774:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "7774:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7763:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7763:3:8"
																						},
																						"nativeSrc": "7763:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7763:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7754:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "7754:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7349:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7349:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7359:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7359:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7345:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7345:3:8"
																			},
																			"nativeSrc": "7345:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7345:16:8"
																		},
																		"nativeSrc": "7342:451:8",
																		"nodeType": "YulIf",
																		"src": "7342:451:8"
																	},
																	{
																		"nativeSrc": "7806:23:8",
																		"nodeType": "YulAssignment",
																		"src": "7806:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7818:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7818:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7824:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7824:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7814:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7814:3:8"
																			},
																			"nativeSrc": "7814:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7814:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7806:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7806:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7842:44:8",
																		"nodeType": "YulAssignment",
																		"src": "7842:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7877:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7877:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7854:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "7854:22:8"
																			},
																			"nativeSrc": "7854:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7854:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7842:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "7842:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7195:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7195:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7205:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7205:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7192:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7192:2:8"
																},
																"nativeSrc": "7192:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7192:15:8"
															},
															"nativeSrc": "7184:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7208:2:8",
																"nodeType": "YulBlock",
																"src": "7208:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7188:3:8",
																"nodeType": "YulBlock",
																"src": "7188:3:8",
																"statements": []
															},
															"src": "7184:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7054:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7082:6:8",
														"nodeType": "YulTypedName",
														"src": "7082:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7090:5:8",
														"nodeType": "YulTypedName",
														"src": "7090:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7097:8:8",
														"nodeType": "YulTypedName",
														"src": "7097:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7107:3:8",
														"nodeType": "YulTypedName",
														"src": "7107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7115:5:8",
														"nodeType": "YulTypedName",
														"src": "7115:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7122:4:8",
														"nodeType": "YulTypedName",
														"src": "7122:4:8",
														"type": ""
													}
												],
												"src": "7054:848:8"
											},
											{
												"body": {
													"nativeSrc": "7968:1013:8",
													"nodeType": "YulBlock",
													"src": "7968:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8163:20:8",
																"nodeType": "YulBlock",
																"src": "8163:20:8",
																"statements": [
																	{
																		"nativeSrc": "8165:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8165:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8174:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8174:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8165:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8165:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8176:5:8",
																		"nodeType": "YulLeave",
																		"src": "8176:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8153:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8153:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8146:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8146:6:8"
																},
																"nativeSrc": "8146:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8146:16:8"
															},
															"nativeSrc": "8143:40:8",
															"nodeType": "YulIf",
															"src": "8143:40:8"
														},
														{
															"body": {
																"nativeSrc": "8208:20:8",
																"nodeType": "YulBlock",
																"src": "8208:20:8",
																"statements": [
																	{
																		"nativeSrc": "8210:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8210:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8219:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8219:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8210:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8210:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8221:5:8",
																		"nodeType": "YulLeave",
																		"src": "8221:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8202:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8202:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8195:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:8"
																},
																"nativeSrc": "8195:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8195:12:8"
															},
															"nativeSrc": "8192:36:8",
															"nodeType": "YulIf",
															"src": "8192:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8338:20:8",
																		"nodeType": "YulBlock",
																		"src": "8338:20:8",
																		"statements": [
																			{
																				"nativeSrc": "8340:10:8",
																				"nodeType": "YulAssignment",
																				"src": "8340:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8349:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8349:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8340:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8340:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8351:5:8",
																				"nodeType": "YulLeave",
																				"src": "8351:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8331:27:8",
																	"nodeType": "YulCase",
																	"src": "8331:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8336:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8336:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8382:176:8",
																		"nodeType": "YulBlock",
																		"src": "8382:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8417:22:8",
																					"nodeType": "YulBlock",
																					"src": "8417:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8419:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8419:16:8"
																								},
																								"nativeSrc": "8419:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8419:18:8"
																							},
																							"nativeSrc": "8419:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8419:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8402:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8402:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8412:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8412:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8399:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8399:2:8"
																					},
																					"nativeSrc": "8399:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8399:17:8"
																				},
																				"nativeSrc": "8396:43:8",
																				"nodeType": "YulIf",
																				"src": "8396:43:8"
																			},
																			{
																				"nativeSrc": "8452:25:8",
																				"nodeType": "YulAssignment",
																				"src": "8452:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8465:1:8",
																							"nodeType": "YulLiteral",
																							"src": "8465:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8468:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8468:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8461:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8461:3:8"
																					},
																					"nativeSrc": "8461:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8452:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8452:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8508:22:8",
																					"nodeType": "YulBlock",
																					"src": "8508:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8510:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8510:16:8"
																								},
																								"nativeSrc": "8510:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8510:18:8"
																							},
																							"nativeSrc": "8510:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8510:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8496:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8496:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8503:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8503:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8493:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8493:2:8"
																					},
																					"nativeSrc": "8493:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8493:14:8"
																				},
																				"nativeSrc": "8490:40:8",
																				"nodeType": "YulIf",
																				"src": "8490:40:8"
																			},
																			{
																				"nativeSrc": "8543:5:8",
																				"nodeType": "YulLeave",
																				"src": "8543:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8367:191:8",
																	"nodeType": "YulCase",
																	"src": "8367:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8372:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8372:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8288:4:8",
																"nodeType": "YulIdentifier",
																"src": "8288:4:8"
															},
															"nativeSrc": "8281:277:8",
															"nodeType": "YulSwitch",
															"src": "8281:277:8"
														},
														{
															"body": {
																"nativeSrc": "8690:123:8",
																"nodeType": "YulBlock",
																"src": "8690:123:8",
																"statements": [
																	{
																		"nativeSrc": "8704:28:8",
																		"nodeType": "YulAssignment",
																		"src": "8704:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8717:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8717:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8723:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8723:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8713:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8713:3:8"
																			},
																			"nativeSrc": "8713:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8713:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8704:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8704:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8763:22:8",
																			"nodeType": "YulBlock",
																			"src": "8763:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8765:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8765:16:8"
																						},
																						"nativeSrc": "8765:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8765:18:8"
																					},
																					"nativeSrc": "8765:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8765:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8751:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8751:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8758:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8758:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8748:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8748:2:8"
																			},
																			"nativeSrc": "8748:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8748:14:8"
																		},
																		"nativeSrc": "8745:40:8",
																		"nodeType": "YulIf",
																		"src": "8745:40:8"
																	},
																	{
																		"nativeSrc": "8798:5:8",
																		"nodeType": "YulLeave",
																		"src": "8798:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8593:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8593:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8599:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8599:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8590:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8590:2:8"
																				},
																				"nativeSrc": "8590:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8590:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8607:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8607:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8617:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8617:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8604:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8604:2:8"
																				},
																				"nativeSrc": "8604:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8604:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8586:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8586:3:8"
																		},
																		"nativeSrc": "8586:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8586:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8642:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8642:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8648:3:8",
																						"nodeType": "YulLiteral",
																						"src": "8648:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8639:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8639:2:8"
																				},
																				"nativeSrc": "8639:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8639:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8657:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8657:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8667:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8667:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8654:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8654:2:8"
																				},
																				"nativeSrc": "8654:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8654:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8635:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:8"
																		},
																		"nativeSrc": "8635:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8635:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8570:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8570:2:8"
																},
																"nativeSrc": "8570:111:8",
																"nodeType": "YulFunctionCall",
																"src": "8570:111:8"
															},
															"nativeSrc": "8567:246:8",
															"nodeType": "YulIf",
															"src": "8567:246:8"
														},
														{
															"nativeSrc": "8823:57:8",
															"nodeType": "YulAssignment",
															"src": "8823:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8857:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8857:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8860:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8866:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8866:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8876:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8838:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "8838:18:8"
																},
																"nativeSrc": "8838:42:8",
																"nodeType": "YulFunctionCall",
																"src": "8838:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8823:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8823:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "8830:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8830:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8919:22:8",
																"nodeType": "YulBlock",
																"src": "8919:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8921:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8921:16:8"
																			},
																			"nativeSrc": "8921:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8921:18:8"
																		},
																		"nativeSrc": "8921:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8921:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8896:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8896:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8907:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8907:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8912:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8912:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8903:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8903:3:8"
																		},
																		"nativeSrc": "8903:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8903:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8893:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8893:2:8"
																},
																"nativeSrc": "8893:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8893:25:8"
															},
															"nativeSrc": "8890:51:8",
															"nodeType": "YulIf",
															"src": "8890:51:8"
														},
														{
															"nativeSrc": "8950:25:8",
															"nodeType": "YulAssignment",
															"src": "8950:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8963:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8963:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8970:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8970:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8959:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8959:3:8"
																},
																"nativeSrc": "8959:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8959:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8950:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8950:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7908:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7938:4:8",
														"nodeType": "YulTypedName",
														"src": "7938:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7944:8:8",
														"nodeType": "YulTypedName",
														"src": "7944:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7954:3:8",
														"nodeType": "YulTypedName",
														"src": "7954:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7962:5:8",
														"nodeType": "YulTypedName",
														"src": "7962:5:8",
														"type": ""
													}
												],
												"src": "7908:1073:8"
											},
											{
												"body": {
													"nativeSrc": "9051:217:8",
													"nodeType": "YulBlock",
													"src": "9051:217:8",
													"statements": [
														{
															"nativeSrc": "9061:31:8",
															"nodeType": "YulAssignment",
															"src": "9061:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9087:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9087:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9069:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9069:17:8"
																},
																"nativeSrc": "9069:23:8",
																"nodeType": "YulFunctionCall",
																"src": "9069:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9061:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9061:4:8"
																}
															]
														},
														{
															"nativeSrc": "9101:37:8",
															"nodeType": "YulAssignment",
															"src": "9101:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9129:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9129:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9113:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "9113:15:8"
																},
																"nativeSrc": "9113:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9113:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9101:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "9101:8:8"
																}
															]
														},
														{
															"nativeSrc": "9148:113:8",
															"nodeType": "YulAssignment",
															"src": "9148:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9178:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9178:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9184:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9184:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:66:8",
																		"nodeType": "YulLiteral",
																		"src": "9194:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9157:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "9157:20:8"
																},
																"nativeSrc": "9157:104:8",
																"nodeType": "YulFunctionCall",
																"src": "9157:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9148:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9148:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8987:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9026:4:8",
														"nodeType": "YulTypedName",
														"src": "9026:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9032:8:8",
														"nodeType": "YulTypedName",
														"src": "9032:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9045:5:8",
														"nodeType": "YulTypedName",
														"src": "9045:5:8",
														"type": ""
													}
												],
												"src": "8987:281:8"
											},
											{
												"body": {
													"nativeSrc": "9322:362:8",
													"nodeType": "YulBlock",
													"src": "9322:362:8",
													"statements": [
														{
															"nativeSrc": "9332:25:8",
															"nodeType": "YulAssignment",
															"src": "9332:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9355:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9355:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9337:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9337:17:8"
																},
																"nativeSrc": "9337:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9337:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9332:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9332:1:8"
																}
															]
														},
														{
															"nativeSrc": "9366:25:8",
															"nodeType": "YulAssignment",
															"src": "9366:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9389:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9389:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9371:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9371:17:8"
																},
																"nativeSrc": "9371:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9371:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9366:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9366:1:8"
																}
															]
														},
														{
															"nativeSrc": "9400:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9400:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9423:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9423:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9426:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9426:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9419:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:8"
																},
																"nativeSrc": "9419:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9419:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9404:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9404:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9437:41:8",
															"nodeType": "YulAssignment",
															"src": "9437:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9466:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9466:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9448:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9448:17:8"
																},
																"nativeSrc": "9448:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9448:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9437:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9437:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9655:22:8",
																"nodeType": "YulBlock",
																"src": "9655:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9657:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9657:16:8"
																			},
																			"nativeSrc": "9657:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9657:18:8"
																		},
																		"nativeSrc": "9657:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9657:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9588:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9588:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9581:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9581:6:8"
																				},
																				"nativeSrc": "9581:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9581:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9611:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9611:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9618:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9618:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9627:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9627:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9614:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9614:3:8"
																						},
																						"nativeSrc": "9614:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9614:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9608:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9608:2:8"
																				},
																				"nativeSrc": "9608:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9608:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9561:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9561:2:8"
																		},
																		"nativeSrc": "9561:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9561:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9541:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9541:6:8"
																},
																"nativeSrc": "9541:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9541:113:8"
															},
															"nativeSrc": "9538:139:8",
															"nodeType": "YulIf",
															"src": "9538:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9274:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9305:1:8",
														"nodeType": "YulTypedName",
														"src": "9305:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9308:1:8",
														"nodeType": "YulTypedName",
														"src": "9308:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9314:7:8",
														"nodeType": "YulTypedName",
														"src": "9314:7:8",
														"type": ""
													}
												],
												"src": "9274:410:8"
											},
											{
												"body": {
													"nativeSrc": "9844:288:8",
													"nodeType": "YulBlock",
													"src": "9844:288:8",
													"statements": [
														{
															"nativeSrc": "9854:26:8",
															"nodeType": "YulAssignment",
															"src": "9854:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9866:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9866:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9877:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9877:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9862:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9862:3:8"
																},
																"nativeSrc": "9862:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9862:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9854:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9854:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9934:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9934:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9947:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9958:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9958:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9943:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9943:3:8"
																		},
																		"nativeSrc": "9943:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9943:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9890:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9890:43:8"
																},
																"nativeSrc": "9890:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9890:71:8"
															},
															"nativeSrc": "9890:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9890:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10015:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10028:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10028:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10039:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10039:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10024:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:8"
																		},
																		"nativeSrc": "10024:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10024:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9971:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9971:43:8"
																},
																"nativeSrc": "9971:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9971:72:8"
															},
															"nativeSrc": "9971:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9971:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10097:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10097:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10110:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10110:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10121:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10121:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10106:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10106:3:8"
																		},
																		"nativeSrc": "10106:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10106:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10053:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10053:43:8"
																},
																"nativeSrc": "10053:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10053:72:8"
															},
															"nativeSrc": "10053:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10053:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9690:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9800:9:8",
														"nodeType": "YulTypedName",
														"src": "9800:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9812:6:8",
														"nodeType": "YulTypedName",
														"src": "9812:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9820:6:8",
														"nodeType": "YulTypedName",
														"src": "9820:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9828:6:8",
														"nodeType": "YulTypedName",
														"src": "9828:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9839:4:8",
														"nodeType": "YulTypedName",
														"src": "9839:4:8",
														"type": ""
													}
												],
												"src": "9690:442:8"
											},
											{
												"body": {
													"nativeSrc": "10227:28:8",
													"nodeType": "YulBlock",
													"src": "10227:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10244:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10244:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10247:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10247:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10237:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10237:6:8"
																},
																"nativeSrc": "10237:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10237:12:8"
															},
															"nativeSrc": "10237:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "10237:12:8"
														}
													]
												},
												"name": "revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a",
												"nativeSrc": "10138:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10138:117:8"
											},
											{
												"body": {
													"nativeSrc": "10350:28:8",
													"nodeType": "YulBlock",
													"src": "10350:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10367:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10367:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10370:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10360:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10360:6:8"
																},
																"nativeSrc": "10360:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10360:12:8"
															},
															"nativeSrc": "10360:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "10360:12:8"
														}
													]
												},
												"name": "revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c",
												"nativeSrc": "10261:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10261:117:8"
											},
											{
												"body": {
													"nativeSrc": "10510:343:8",
													"nodeType": "YulBlock",
													"src": "10510:343:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10548:83:8",
																"nodeType": "YulBlock",
																"src": "10548:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a",
																				"nativeSrc": "10550:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10550:77:8"
																			},
																			"nativeSrc": "10550:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10550:79:8"
																		},
																		"nativeSrc": "10550:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10550:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nativeSrc": "10526:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "10526:10:8"
																	},
																	{
																		"name": "endIndex",
																		"nativeSrc": "10538:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10538:8:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10523:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10523:2:8"
																},
																"nativeSrc": "10523:24:8",
																"nodeType": "YulFunctionCall",
																"src": "10523:24:8"
															},
															"nativeSrc": "10520:111:8",
															"nodeType": "YulIf",
															"src": "10520:111:8"
														},
														{
															"body": {
																"nativeSrc": "10664:83:8",
																"nodeType": "YulBlock",
																"src": "10664:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c",
																				"nativeSrc": "10666:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10666:77:8"
																			},
																			"nativeSrc": "10666:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10666:79:8"
																		},
																		"nativeSrc": "10666:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10666:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nativeSrc": "10646:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10646:8:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10656:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10656:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10643:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10643:2:8"
																},
																"nativeSrc": "10643:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10643:20:8"
															},
															"nativeSrc": "10640:107:8",
															"nodeType": "YulIf",
															"src": "10640:107:8"
														},
														{
															"nativeSrc": "10756:44:8",
															"nodeType": "YulAssignment",
															"src": "10756:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10773:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10773:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nativeSrc": "10785:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "10785:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10797:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10797:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10781:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10781:3:8"
																		},
																		"nativeSrc": "10781:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10781:18:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10769:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10769:3:8"
																},
																"nativeSrc": "10769:31:8",
																"nodeType": "YulFunctionCall",
																"src": "10769:31:8"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nativeSrc": "10756:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "10756:9:8"
																}
															]
														},
														{
															"nativeSrc": "10809:38:8",
															"nodeType": "YulAssignment",
															"src": "10809:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nativeSrc": "10826:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10826:8:8"
																	},
																	{
																		"name": "startIndex",
																		"nativeSrc": "10836:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "10836:10:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10822:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10822:3:8"
																},
																"nativeSrc": "10822:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10822:25:8"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nativeSrc": "10809:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "10809:9:8"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nativeSrc": "10384:469:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10448:6:8",
														"nodeType": "YulTypedName",
														"src": "10448:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10456:6:8",
														"nodeType": "YulTypedName",
														"src": "10456:6:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "10464:10:8",
														"nodeType": "YulTypedName",
														"src": "10464:10:8",
														"type": ""
													},
													{
														"name": "endIndex",
														"nativeSrc": "10476:8:8",
														"nodeType": "YulTypedName",
														"src": "10476:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nativeSrc": "10489:9:8",
														"nodeType": "YulTypedName",
														"src": "10489:9:8",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nativeSrc": "10500:9:8",
														"nodeType": "YulTypedName",
														"src": "10500:9:8",
														"type": ""
													}
												],
												"src": "10384:469:8"
											},
											{
												"body": {
													"nativeSrc": "10924:31:8",
													"nodeType": "YulBlock",
													"src": "10924:31:8",
													"statements": [
														{
															"nativeSrc": "10935:13:8",
															"nodeType": "YulAssignment",
															"src": "10935:13:8",
															"value": {
																"name": "len",
																"nativeSrc": "10945:3:8",
																"nodeType": "YulIdentifier",
																"src": "10945:3:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10935:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_calldata_ptr",
												"nativeSrc": "10859:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10902:5:8",
														"nodeType": "YulTypedName",
														"src": "10902:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10909:3:8",
														"nodeType": "YulTypedName",
														"src": "10909:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10917:6:8",
														"nodeType": "YulTypedName",
														"src": "10917:6:8",
														"type": ""
													}
												],
												"src": "10859:96:8"
											},
											{
												"body": {
													"nativeSrc": "11019:28:8",
													"nodeType": "YulBlock",
													"src": "11019:28:8",
													"statements": [
														{
															"nativeSrc": "11029:11:8",
															"nodeType": "YulAssignment",
															"src": "11029:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "11037:3:8",
																"nodeType": "YulIdentifier",
																"src": "11037:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11029:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11029:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_calldata_ptr",
												"nativeSrc": "10961:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11006:3:8",
														"nodeType": "YulTypedName",
														"src": "11006:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11014:4:8",
														"nodeType": "YulTypedName",
														"src": "11014:4:8",
														"type": ""
													}
												],
												"src": "10961:86:8"
											},
											{
												"body": {
													"nativeSrc": "11098:105:8",
													"nodeType": "YulBlock",
													"src": "11098:105:8",
													"statements": [
														{
															"nativeSrc": "11108:89:8",
															"nodeType": "YulAssignment",
															"src": "11108:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11123:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11123:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11130:66:8",
																		"nodeType": "YulLiteral",
																		"src": "11130:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11119:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11119:3:8"
																},
																"nativeSrc": "11119:78:8",
																"nodeType": "YulFunctionCall",
																"src": "11119:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11108:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "11108:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes20",
												"nativeSrc": "11053:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11080:5:8",
														"nodeType": "YulTypedName",
														"src": "11080:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11090:7:8",
														"nodeType": "YulTypedName",
														"src": "11090:7:8",
														"type": ""
													}
												],
												"src": "11053:150:8"
											},
											{
												"body": {
													"nativeSrc": "11262:54:8",
													"nodeType": "YulBlock",
													"src": "11262:54:8",
													"statements": [
														{
															"nativeSrc": "11272:37:8",
															"nodeType": "YulAssignment",
															"src": "11272:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11297:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11297:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11303:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11303:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11293:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11293:3:8"
																},
																"nativeSrc": "11293:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11293:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11272:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "11272:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "11209:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11237:4:8",
														"nodeType": "YulTypedName",
														"src": "11237:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11243:5:8",
														"nodeType": "YulTypedName",
														"src": "11243:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11253:8:8",
														"nodeType": "YulTypedName",
														"src": "11253:8:8",
														"type": ""
													}
												],
												"src": "11209:107:8"
											},
											{
												"body": {
													"nativeSrc": "11419:455:8",
													"nodeType": "YulBlock",
													"src": "11419:455:8",
													"statements": [
														{
															"nativeSrc": "11430:59:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11430:59:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11478:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11478:5:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "11485:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11485:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_calldata_ptr",
																	"nativeSrc": "11444:33:8",
																	"nodeType": "YulIdentifier",
																	"src": "11444:33:8"
																},
																"nativeSrc": "11444:45:8",
																"nodeType": "YulFunctionCall",
																"src": "11444:45:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11434:6:8",
																	"nodeType": "YulTypedName",
																	"src": "11434:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11498:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11498:21:8",
															"value": {
																"name": "array",
																"nativeSrc": "11514:5:8",
																"nodeType": "YulIdentifier",
																"src": "11514:5:8"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11502:8:8",
																	"nodeType": "YulTypedName",
																	"src": "11502:8:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11529:50:8",
															"nodeType": "YulAssignment",
															"src": "11529:50:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "11569:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "11569:8:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11556:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "11556:12:8"
																		},
																		"nativeSrc": "11556:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11556:22:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes20",
																	"nativeSrc": "11538:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11538:17:8"
																},
																"nativeSrc": "11538:41:8",
																"nodeType": "YulFunctionCall",
																"src": "11538:41:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11529:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11529:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11607:260:8",
																"nodeType": "YulBlock",
																"src": "11607:260:8",
																"statements": [
																	{
																		"nativeSrc": "11621:236:8",
																		"nodeType": "YulAssignment",
																		"src": "11621:236:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11651:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "11651:5:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11718:1:8",
																									"nodeType": "YulLiteral",
																									"src": "11718:1:8",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11725:2:8",
																											"nodeType": "YulLiteral",
																											"src": "11725:2:8",
																											"type": "",
																											"value": "20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "11729:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "11729:6:8"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "11721:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "11721:3:8"
																									},
																									"nativeSrc": "11721:15:8",
																									"nodeType": "YulFunctionCall",
																									"src": "11721:15:8"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11714:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "11714:3:8"
																							},
																							"nativeSrc": "11714:23:8",
																							"nodeType": "YulFunctionCall",
																							"src": "11714:23:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11759:66:8",
																							"nodeType": "YulLiteral",
																							"src": "11759:66:8",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "11674:18:8",
																						"nodeType": "YulIdentifier",
																						"src": "11674:18:8"
																					},
																					"nativeSrc": "11674:169:8",
																					"nodeType": "YulFunctionCall",
																					"src": "11674:169:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11630:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11630:3:8"
																			},
																			"nativeSrc": "11630:227:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11630:227:8"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "11621:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11621:5:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11595:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11595:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11603:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11603:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11592:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11592:2:8"
																},
																"nativeSrc": "11592:14:8",
																"nodeType": "YulFunctionCall",
																"src": "11592:14:8"
															},
															"nativeSrc": "11589:278:8",
															"nodeType": "YulIf",
															"src": "11589:278:8"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20",
												"nativeSrc": "11322:552:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11398:5:8",
														"nodeType": "YulTypedName",
														"src": "11398:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11405:3:8",
														"nodeType": "YulTypedName",
														"src": "11405:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11413:5:8",
														"nodeType": "YulTypedName",
														"src": "11413:5:8",
														"type": ""
													}
												],
												"src": "11322:552:8"
											},
											{
												"body": {
													"nativeSrc": "11924:147:8",
													"nodeType": "YulBlock",
													"src": "11924:147:8",
													"statements": [
														{
															"nativeSrc": "11934:25:8",
															"nodeType": "YulAssignment",
															"src": "11934:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11957:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11957:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11939:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11939:17:8"
																},
																"nativeSrc": "11939:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11939:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11934:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11934:1:8"
																}
															]
														},
														{
															"nativeSrc": "11968:25:8",
															"nodeType": "YulAssignment",
															"src": "11968:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11991:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11991:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11973:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11973:17:8"
																},
																"nativeSrc": "11973:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11973:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11968:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11968:1:8"
																}
															]
														},
														{
															"nativeSrc": "12002:16:8",
															"nodeType": "YulAssignment",
															"src": "12002:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12013:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12013:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12016:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12016:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12009:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12009:3:8"
																},
																"nativeSrc": "12009:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12009:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12002:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12002:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12042:22:8",
																"nodeType": "YulBlock",
																"src": "12042:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12044:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12044:16:8"
																			},
																			"nativeSrc": "12044:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12044:18:8"
																		},
																		"nativeSrc": "12044:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12044:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12034:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12034:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12037:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12037:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12031:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12031:2:8"
																},
																"nativeSrc": "12031:10:8",
																"nodeType": "YulFunctionCall",
																"src": "12031:10:8"
															},
															"nativeSrc": "12028:36:8",
															"nodeType": "YulIf",
															"src": "12028:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11880:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11911:1:8",
														"nodeType": "YulTypedName",
														"src": "11911:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11914:1:8",
														"nodeType": "YulTypedName",
														"src": "11914:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11920:3:8",
														"nodeType": "YulTypedName",
														"src": "11920:3:8",
														"type": ""
													}
												],
												"src": "11880:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes20(calldataload(dataArea))\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"294": [
									{
										"length": 32,
										"start": 1226
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb1461029c578063b921e163146102cc578063dd62ed3e146102e8578063f2fde38b14610318576100fe565b8063715018a6146102385780637da0a877146102425780638da5cb5b1461026057806395d89b411461027e576100fe565b8063313ce567116100d1578063313ce5671461019e57806340c10f19146101bc578063572b6c05146101d857806370a0823114610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a610334565b6040516101179190610f94565b60405180910390f35b61013a60048036038101906101359190611045565b6103c4565b604051610147919061109d565b60405180910390f35b6101586103e6565b60405161016591906110c5565b60405180910390f35b610188600480360381019061018391906110de565b6103ef565b604051610195919061109d565b60405180910390f35b6101a661041d565b6040516101b39190611149565b60405180910390f35b6101d660048036038101906101d19190611045565b610425565b005b6101f260048036038101906101ed9190611162565b61045e565b6040516101ff919061109d565b60405180910390f35b610222600480360381019061021d9190611162565b61046f565b60405161022f91906110c5565b60405180910390f35b6102406104b4565b005b61024a6104c7565b604051610257919061119c565b60405180910390f35b6102686104ee565b604051610275919061119c565b60405180910390f35b610286610516565b6040516102939190610f94565b60405180910390f35b6102b660048036038101906102b19190611045565b6105a6565b6040516102c3919061109d565b60405180910390f35b6102e660048036038101906102e191906111b5565b6105c8565b005b61030260048036038101906102fd91906111e0565b610607565b60405161030f91906110c5565b60405180910390f35b610332600480360381019061032d9190611162565b610689565b005b6060600380546103439061124b565b80601f016020809104026020016040519081016040528092919081815260200182805461036f9061124b565b80156103ba5780601f10610391576101008083540402835291602001916103ba565b820191905f5260205f20905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b5f5f6103ce61070d565b90506103db81858561071b565b600191505092915050565b5f600254905090565b5f5f6103f961070d565b905061040685828561072d565b6104118585856107c0565b60019150509392505050565b5f6012905090565b61042d6108b0565b5f61043661041d565b600a61044291906113d7565b8261044d9190611421565b90506104598382610937565b505050565b5f610468826109b6565b9050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104bc6108b0565b6104c55f6109f4565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105259061124b565b80601f01602080910402602001604051908101604052809291908181526020018280546105519061124b565b801561059c5780601f106105735761010080835404028352916020019161059c565b820191905f5260205f20905b81548152906001019060200180831161057f57829003601f168201915b5050505050905090565b5f5f6105b061070d565b90506105bd8185856107c0565b600191505092915050565b6105d06108b0565b5f6105d961041d565b600a6105e591906113d7565b826105f09190611421565b90506106036105fd6104ee565b82610937565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6106916108b0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610701575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f8919061119c565b60405180910390fd5b61070a816109f4565b50565b5f610716610ab7565b905090565b6107288383836001610b1f565b505050565b5f6107388484610607565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107ba57818110156107ab578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107a293929190611462565b60405180910390fd5b6107b984848484035f610b1f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610830575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610827919061119c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610897919061119c565b60405180910390fd5b6108ab838383610cee565b505050565b6108b861070d565b73ffffffffffffffffffffffffffffffffffffffff166108d66104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610935576108f961070d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161092c919061119c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161099e919061119c565b60405180910390fd5b6109b25f8383610cee565b5050565b5f6109bf6104c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f5f36905090505f610ac8610f07565b9050808210158015610adf5750610ade3361045e565b5b15610b0f575f36828403908092610af89392919061149f565b90610b03919061151a565b60601c92505050610b1c565b610b17610f15565b925050505b90565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b8f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b86919061119c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bff575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bf6919061119c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610ce8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cdf91906110c5565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3e578060025f828254610d329190611578565b92505081905550610e0c565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dc7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dbe93929190611462565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e53578060025f8282540392505081905550610e9d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610efa91906110c5565b60405180910390a3505050565b5f610f10610f1c565b905090565b5f33905090565b5f6014905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f6682610f24565b610f708185610f2e565b9350610f80818560208601610f3e565b610f8981610f4c565b840191505092915050565b5f6020820190508181035f830152610fac8184610f5c565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fe182610fb8565b9050919050565b610ff181610fd7565b8114610ffb575f5ffd5b50565b5f8135905061100c81610fe8565b92915050565b5f819050919050565b61102481611012565b811461102e575f5ffd5b50565b5f8135905061103f8161101b565b92915050565b5f5f6040838503121561105b5761105a610fb4565b5b5f61106885828601610ffe565b925050602061107985828601611031565b9150509250929050565b5f8115159050919050565b61109781611083565b82525050565b5f6020820190506110b05f83018461108e565b92915050565b6110bf81611012565b82525050565b5f6020820190506110d85f8301846110b6565b92915050565b5f5f5f606084860312156110f5576110f4610fb4565b5b5f61110286828701610ffe565b935050602061111386828701610ffe565b925050604061112486828701611031565b9150509250925092565b5f60ff82169050919050565b6111438161112e565b82525050565b5f60208201905061115c5f83018461113a565b92915050565b5f6020828403121561117757611176610fb4565b5b5f61118484828501610ffe565b91505092915050565b61119681610fd7565b82525050565b5f6020820190506111af5f83018461118d565b92915050565b5f602082840312156111ca576111c9610fb4565b5b5f6111d784828501611031565b91505092915050565b5f5f604083850312156111f6576111f5610fb4565b5b5f61120385828601610ffe565b925050602061121485828601610ffe565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061126257607f821691505b6020821081036112755761127461121e565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156112fd578086048111156112d9576112d861127b565b5b60018516156112e85780820291505b80810290506112f6856112a8565b94506112bd565b94509492505050565b5f8261131557600190506113d0565b81611322575f90506113d0565b8160018114611338576002811461134257611371565b60019150506113d0565b60ff8411156113545761135361127b565b5b8360020a91508482111561136b5761136a61127b565b5b506113d0565b5060208310610133831016604e8410600b84101617156113a65782820a9050838111156113a1576113a061127b565b5b6113d0565b6113b384848460016112b4565b925090508184048111156113ca576113c961127b565b5b81810290505b9392505050565b5f6113e182611012565b91506113ec8361112e565b92506114197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611306565b905092915050565b5f61142b82611012565b915061143683611012565b925082820261144481611012565b9150828204841483151761145b5761145a61127b565b5b5092915050565b5f6060820190506114755f83018661118d565b61148260208301856110b6565b61148f60408301846110b6565b949350505050565b5f5ffd5b5f5ffd5b5f5f858511156114b2576114b1611497565b5b838611156114c3576114c261149b565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f82821b905092915050565b5f61152583836114d9565b8261153081356114e3565b925060148210156115705761156b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261150e565b831692505b505092915050565b5f61158282611012565b915061158d83611012565b92508282019050808211156115a5576115a461127b565b5b9291505056fea2646970667358221220b34b9b0cb9be1fd831c3372eb134d819f4ea6c50c359ffdfa6ee88332d75581c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB921E163 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x318 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x4B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x343 SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x391 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3CE PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH2 0x3DB DUP2 DUP6 DUP6 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3F9 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH2 0x406 DUP6 DUP3 DUP6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x411 DUP6 DUP6 DUP6 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x42D PUSH2 0x8B0 JUMP JUMPDEST PUSH0 PUSH2 0x436 PUSH2 0x41D JUMP JUMPDEST PUSH1 0xA PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST DUP3 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 DUP4 DUP3 PUSH2 0x937 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x468 DUP3 PUSH2 0x9B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x4C5 PUSH0 PUSH2 0x9F4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x525 SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x551 SWAP1 PUSH2 0x124B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x573 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B0 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH2 0x5BD DUP2 DUP6 DUP6 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0x8B0 JUMP JUMPDEST PUSH0 PUSH2 0x5D9 PUSH2 0x41D JUMP JUMPDEST PUSH1 0xA PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST DUP3 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP PUSH2 0x603 PUSH2 0x5FD PUSH2 0x4EE JUMP JUMPDEST DUP3 PUSH2 0x937 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x691 PUSH2 0x8B0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70A DUP2 PUSH2 0x9F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x716 PUSH2 0xAB7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x728 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x738 DUP5 DUP5 PUSH2 0x607 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x7BA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7AB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB1F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x830 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AB DUP4 DUP4 DUP4 PUSH2 0xCEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x70D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D6 PUSH2 0x4EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x935 JUMPI PUSH2 0x8F9 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B2 PUSH0 DUP4 DUP4 PUSH2 0xCEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BF PUSH2 0x4C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 CALLDATASIZE SWAP1 POP SWAP1 POP PUSH0 PUSH2 0xAC8 PUSH2 0xF07 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI POP PUSH2 0xADE CALLER PUSH2 0x45E JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0xB0F JUMPI PUSH0 CALLDATASIZE DUP3 DUP5 SUB SWAP1 DUP1 SWAP3 PUSH2 0xAF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP1 PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xF15 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCE8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE0C JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDC7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE9D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF10 PUSH2 0xF1C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF66 DUP3 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xF70 DUP2 DUP6 PUSH2 0xF2E JUMP JUMPDEST SWAP4 POP PUSH2 0xF80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF3E JUMP JUMPDEST PUSH2 0xF89 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAC DUP2 DUP5 PUSH2 0xF5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFE1 DUP3 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF1 DUP2 PUSH2 0xFD7 JUMP JUMPDEST DUP2 EQ PUSH2 0xFFB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100C DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1024 DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP2 EQ PUSH2 0x102E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103F DUP2 PUSH2 0x101B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105B JUMPI PUSH2 0x105A PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1068 DUP6 DUP3 DUP7 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1079 DUP6 DUP3 DUP7 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1097 DUP2 PUSH2 0x1083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x108E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10BF DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x10B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1102 DUP7 DUP3 DUP8 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1113 DUP7 DUP3 DUP8 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1124 DUP7 DUP3 DUP8 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1143 DUP2 PUSH2 0x112E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115C PUSH0 DUP4 ADD DUP5 PUSH2 0x113A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1177 JUMPI PUSH2 0x1176 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1184 DUP5 DUP3 DUP6 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1196 DUP2 PUSH2 0xFD7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11AF PUSH0 DUP4 ADD DUP5 PUSH2 0x118D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CA JUMPI PUSH2 0x11C9 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D7 DUP5 DUP3 DUP6 ADD PUSH2 0x1031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F5 PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1203 DUP6 DUP3 DUP7 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1214 DUP6 DUP3 DUP7 ADD PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1262 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x121E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x12FD JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D8 PUSH2 0x127B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x12E8 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x12F6 DUP6 PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP PUSH2 0x12BD JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1315 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x13D0 JUMP JUMPDEST DUP2 PUSH2 0x1322 JUMPI PUSH0 SWAP1 POP PUSH2 0x13D0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1338 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1342 JUMPI PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1354 JUMPI PUSH2 0x1353 PUSH2 0x127B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136A PUSH2 0x127B JUMP JUMPDEST JUMPDEST POP PUSH2 0x13D0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x13A6 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x13A1 JUMPI PUSH2 0x13A0 PUSH2 0x127B JUMP JUMPDEST JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x13B3 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13C9 PUSH2 0x127B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP PUSH2 0x13EC DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP3 POP PUSH2 0x1419 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP PUSH2 0x1436 DUP4 PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1444 DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x145B JUMPI PUSH2 0x145A PUSH2 0x127B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1475 PUSH0 DUP4 ADD DUP7 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x1482 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x148F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x149B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1525 DUP4 DUP4 PUSH2 0x14D9 JUMP JUMPDEST DUP3 PUSH2 0x1530 DUP2 CALLDATALOAD PUSH2 0x14E3 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x1570 JUMPI PUSH2 0x156B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x150E JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1582 DUP3 PUSH2 0x1012 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP4 PUSH2 0x1012 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x127B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B SWAP12 0xC 0xB9 0xBE 0x1F 0xD8 BALANCE 0xC3 CALLDATACOPY 0x2E 0xB1 CALLVALUE 0xD8 NOT DELEGATECALL 0xEA PUSH13 0x50C359FFDFA6EE88332D75581C PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "235:1556:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1419:184:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1207:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1624:107:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1611:177:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1419:184:7:-;1531:13:0;:11;:13::i;:::-;1494:28:7::1;1538:10;:8;:10::i;:::-;1534:2;:14;;;;:::i;:::-;1525:6;:23;;;;:::i;:::-;1494:54;;1559:36;1565:7;1574:20;1559:5;:36::i;:::-;1483:120;1419:184:::0;;:::o;1207:204::-;1338:4;1368:35;1393:9;1368:24;:35::i;:::-;1361:42;;1207:204;;;:::o;2933:116:3:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1624:107:2:-;1681:7;1707:17;1700:24;;1624:107;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1611:177:7:-;1531:13:0;:11;:13::i;:::-;1679:28:7::1;1723:10;:8;:10::i;:::-;1719:2;:14;;;;:::i;:::-;1710:6;:23;;;;:::i;:::-;1679:54;;1744:36;1750:7;:5;:7::i;:::-;1759:20;1744:5;:36::i;:::-;1668:120;1611:177:::0;:::o;3455:140:3:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;832:178:7:-;951:7;984:18;:16;:18::i;:::-;977:25;;832:178;:::o;8630:128:3:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:3:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;1832:137:2:-;1908:4;1944:18;:16;:18::i;:::-;1931:31;;:9;:31;;;1924:38;;1832:137;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2206:471:2:-;2268:7;2287:22;2312:8;;:15;;2287:40;;2337:27;2367:22;:20;:22::i;:::-;2337:52;;2421:19;2403:14;:37;;:71;;;;;2444:30;2463:10;2444:18;:30::i;:::-;2403:71;2399:272;;;2541:8;;2567:19;2550:14;:36;2541:47;;;;;;;;;:::i;:::-;2533:56;;;;;:::i;:::-;2525:65;;2518:72;;;;;;2399:272;2642:18;:16;:18::i;:::-;2635:25;;;;2206:471;;:::o;9605:432:3:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;626:198:7:-;755:7;788:28;:26;:28::i;:::-;781:35;;626:198;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;3469:107:2:-;3541:7;3567:2;3560:9;;3469:107;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:180::-;6808:77;6805:1;6798:88;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6946:102;6988:8;7035:5;7032:1;7028:13;7007:34;;6946:102;;;:::o;7054:848::-;7115:5;7122:4;7146:6;7137:15;;7170:5;7161:14;;7184:712;7205:1;7195:8;7192:15;7184:712;;;7300:4;7295:3;7291:14;7285:4;7282:24;7279:50;;;7309:18;;:::i;:::-;7279:50;7359:1;7349:8;7345:16;7342:451;;;7774:4;7767:5;7763:16;7754:25;;7342:451;7824:4;7818;7814:15;7806:23;;7854:32;7877:8;7854:32;:::i;:::-;7842:44;;7184:712;;;7054:848;;;;;;;:::o;7908:1073::-;7962:5;8153:8;8143:40;;8174:1;8165:10;;8176:5;;8143:40;8202:4;8192:36;;8219:1;8210:10;;8221:5;;8192:36;8288:4;8336:1;8331:27;;;;8372:1;8367:191;;;;8281:277;;8331:27;8349:1;8340:10;;8351:5;;;8367:191;8412:3;8402:8;8399:17;8396:43;;;8419:18;;:::i;:::-;8396:43;8468:8;8465:1;8461:16;8452:25;;8503:3;8496:5;8493:14;8490:40;;;8510:18;;:::i;:::-;8490:40;8543:5;;;8281:277;;8667:2;8657:8;8654:16;8648:3;8642:4;8639:13;8635:36;8617:2;8607:8;8604:16;8599:2;8593:4;8590:12;8586:35;8570:111;8567:246;;;8723:8;8717:4;8713:19;8704:28;;8758:3;8751:5;8748:14;8745:40;;;8765:18;;:::i;:::-;8745:40;8798:5;;8567:246;8838:42;8876:3;8866:8;8860:4;8857:1;8838:42;:::i;:::-;8823:57;;;;8912:4;8907:3;8903:14;8896:5;8893:25;8890:51;;;8921:18;;:::i;:::-;8890:51;8970:4;8963:5;8959:16;8950:25;;7908:1073;;;;;;:::o;8987:281::-;9045:5;9069:23;9087:4;9069:23;:::i;:::-;9061:31;;9113:25;9129:8;9113:25;:::i;:::-;9101:37;;9157:104;9194:66;9184:8;9178:4;9157:104;:::i;:::-;9148:113;;8987:281;;;;:::o;9274:410::-;9314:7;9337:20;9355:1;9337:20;:::i;:::-;9332:25;;9371:20;9389:1;9371:20;:::i;:::-;9366:25;;9426:1;9423;9419:9;9448:30;9466:11;9448:30;:::i;:::-;9437:41;;9627:1;9618:7;9614:15;9611:1;9608:22;9588:1;9581:9;9561:83;9538:139;;9657:18;;:::i;:::-;9538:139;9322:362;9274:410;;;;:::o;9690:442::-;9839:4;9877:2;9866:9;9862:18;9854:26;;9890:71;9958:1;9947:9;9943:17;9934:6;9890:71;:::i;:::-;9971:72;10039:2;10028:9;10024:18;10015:6;9971:72;:::i;:::-;10053;10121:2;10110:9;10106:18;10097:6;10053:72;:::i;:::-;9690:442;;;;;;:::o;10138:117::-;10247:1;10244;10237:12;10261:117;10370:1;10367;10360:12;10384:469;10489:9;10500;10538:8;10526:10;10523:24;10520:111;;;10550:79;;:::i;:::-;10520:111;10656:6;10646:8;10643:20;10640:107;;;10666:79;;:::i;:::-;10640:107;10797:1;10785:10;10781:18;10773:6;10769:31;10756:44;;10836:10;10826:8;10822:25;10809:38;;10384:469;;;;;;;:::o;10859:96::-;10917:6;10945:3;10935:13;;10859:96;;;;:::o;11053:150::-;11090:7;11130:66;11123:5;11119:78;11108:89;;11053:150;;;:::o;11209:107::-;11253:8;11303:5;11297:4;11293:16;11272:37;;11209:107;;;;:::o;11322:552::-;11413:5;11444:45;11485:3;11478:5;11444:45;:::i;:::-;11514:5;11538:41;11569:8;11556:22;11538:41;:::i;:::-;11529:50;;11603:2;11595:6;11592:14;11589:278;;;11674:169;11759:66;11729:6;11725:2;11721:15;11718:1;11714:23;11674:169;:::i;:::-;11651:5;11630:227;11621:236;;11589:278;11419:455;;11322:552;;;;:::o;11880:191::-;11920:3;11939:20;11957:1;11939:20;:::i;:::-;11934:25;;11973:20;11991:1;11973:20;:::i;:::-;11968:25;;12016:1;12013;12009:9;12002:16;;12037:3;12034:1;12031:10;12028:36;;;12044:18;;:::i;:::-;12028:36;11880:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1120200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"decimals()": "361",
								"increaseSupply(uint256)": "infinite",
								"isTrustedForwarder(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"trustedForwarder()": "infinite"
							},
							"internal": {
								"_contextSuffixLength()": "56",
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 349,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 506,
									"end": 518,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 471,
									"end": 487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "52657761726420546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "5257440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1520,
									"end": 1537,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1451,
									"end": 1544,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 572,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 536,
									"end": 572,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 580,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3638,
									"end": 3639,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1091"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "294"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1791,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34b9b0cb9be1fd831c3372eb134d819f4ea6c50c359ffdfa6ee88332d75581c64736f6c634300081e0033",
									".code": [
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "B921E163"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "7DA0A877"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "572B6C05"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1419,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1419,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1207,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1207,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1624,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1624,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1611,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1611,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1538,
											"end": 1548,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1538,
											"end": 1548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1534,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1534,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1534,
											"end": 1548,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1534,
											"end": 1548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1531,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1525,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1525,
											"end": 1548,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1525,
											"end": 1548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1548,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1565,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1594,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1559,
											"end": 1595,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1559,
											"end": 1595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1368,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1403,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1368,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1723,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1723,
											"end": 1733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1723,
											"end": 1733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1719,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1719,
											"end": 1733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1719,
											"end": 1733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1719,
											"end": 1733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1716,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1710,
											"end": 1733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1710,
											"end": 1733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1710,
											"end": 1733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1750,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1750,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1750,
											"end": 1757,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 1757,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1750,
											"end": 1757,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1779,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1744,
											"end": 1780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1744,
											"end": 1780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 1010,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 832,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 951,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 984,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 984,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1944,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1944,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2367,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2440,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2463,
											"end": 2473,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2444,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2474,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2444,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2586,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2541,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2533,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2525,
											"end": 2590,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2642,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 626,
											"end": 824,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 626,
											"end": 824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 755,
											"end": 762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 788,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 788,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 788,
											"end": 816,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 788,
											"end": 816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 781,
											"end": 816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 781,
											"end": 816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 626,
											"end": 824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 626,
											"end": 824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3576,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 3469,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6885,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6934,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6988,
											"end": 6996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7040,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7028,
											"end": 7041,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7175,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7161,
											"end": 7175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7161,
											"end": 7175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7195,
											"end": 7203,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7207,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7300,
											"end": 7304,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7298,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7305,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7282,
											"end": 7306,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7309,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 7279,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7349,
											"end": 7357,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 7361,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7767,
											"end": 7772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7779,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7754,
											"end": 7779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7754,
											"end": 7779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7342,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7824,
											"end": 7828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7829,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7877,
											"end": 7885,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7854,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7854,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7886,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 7184,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7054,
											"end": 7902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8175,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8176,
											"end": 8181,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8221,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8221,
											"end": 8226,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8331,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8340,
											"end": 8350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8367,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8402,
											"end": 8410,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8416,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8419,
											"end": 8437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8396,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8476,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8452,
											"end": 8477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8452,
											"end": 8477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8493,
											"end": 8507,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8510,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8490,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8543,
											"end": 8548,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8667,
											"end": 8669,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8654,
											"end": 8670,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8648,
											"end": 8651,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8652,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8635,
											"end": 8671,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8617,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 8607,
											"end": 8615,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8604,
											"end": 8620,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8599,
											"end": 8601,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8681,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8713,
											"end": 8732,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8704,
											"end": 8732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8704,
											"end": 8732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8751,
											"end": 8756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8762,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8765,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 8765,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8745,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 8798,
											"end": 8803,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8567,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8874,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 8838,
											"end": 8880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8838,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8823,
											"end": 8880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8912,
											"end": 8916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8907,
											"end": 8910,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8917,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 8918,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 8921,
											"end": 8939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8890,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8963,
											"end": 8968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 8975,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 8981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9069,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9069,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9129,
											"end": 9137,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9113,
											"end": 9138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9113,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9101,
											"end": 9138,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9101,
											"end": 9138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9194,
											"end": 9260,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9184,
											"end": 9192,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9178,
											"end": 9182,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 9157,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9157,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9148,
											"end": 9261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9148,
											"end": 9261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9355,
											"end": 9356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9337,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9337,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9332,
											"end": 9357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9332,
											"end": 9357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9371,
											"end": 9391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 9371,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9391,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 9466,
											"end": 9477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9448,
											"end": 9478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 9448,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9627,
											"end": 9628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9618,
											"end": 9625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9614,
											"end": 9629,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9588,
											"end": 9589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9644,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 9657,
											"end": 9675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9877,
											"end": 9879,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9866,
											"end": 9875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9854,
											"end": 9880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9854,
											"end": 9880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9934,
											"end": 9940,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 9890,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9971,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10015,
											"end": 10021,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9971,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 9971,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9971,
											"end": 10043,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 9971,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10119,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 10053,
											"end": 10125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10053,
											"end": 10125,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10053,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10255,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10138,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10249,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10261,
											"end": 10378,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10261,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10370,
											"end": 10371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10367,
											"end": 10368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10372,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10489,
											"end": 10498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10509,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10546,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10523,
											"end": 10547,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10520,
											"end": 10631,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10520,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 10520,
											"end": 10631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 10550,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10550,
											"end": 10629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10629,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 10550,
											"end": 10629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10520,
											"end": 10631,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 10520,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10656,
											"end": 10662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10646,
											"end": 10654,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10643,
											"end": 10663,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10747,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10640,
											"end": 10747,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10666,
											"end": 10745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10747,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10640,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10797,
											"end": 10798,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10785,
											"end": 10795,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10836,
											"end": 10846,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 10834,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10384,
											"end": 10853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10955,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 10859,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10945,
											"end": 10948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10955,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10955,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11053,
											"end": 11203,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 11053,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11090,
											"end": 11097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11130,
											"end": 11196,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 11123,
											"end": 11128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11119,
											"end": 11197,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11053,
											"end": 11203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11053,
											"end": 11203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11053,
											"end": 11203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11053,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11316,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 11209,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11303,
											"end": 11308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11297,
											"end": 11301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11293,
											"end": 11309,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 11272,
											"end": 11309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11272,
											"end": 11309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11874,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 11322,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11413,
											"end": 11418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11444,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11485,
											"end": 11488,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11483,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11444,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11489,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11444,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11514,
											"end": 11519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11538,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11569,
											"end": 11577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11538,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 11538,
											"end": 11579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11538,
											"end": 11579,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11538,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11579,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11603,
											"end": 11605,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11595,
											"end": 11601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11867,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11589,
											"end": 11867,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11759,
											"end": 11825,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 11729,
											"end": 11735,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11725,
											"end": 11727,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11721,
											"end": 11736,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 11719,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 11714,
											"end": 11737,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 11674,
											"end": 11843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11843,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11674,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11656,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11857,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11621,
											"end": 11857,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11621,
											"end": 11857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11867,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11589,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11874,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12071,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 11880,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11957,
											"end": 11958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11939,
											"end": 11959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 11959,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11939,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 11959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 11959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11991,
											"end": 11992,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11973,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11973,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12013,
											"end": 12014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12002,
											"end": 12018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12002,
											"end": 12018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12037,
											"end": 12040,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12031,
											"end": 12041,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12028,
											"end": 12064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 12044,
											"end": 12062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 12044,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12064,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12028,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12071,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12071,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11880,
											"end": 12071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/metatx/ERC2771Context.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/reward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"increaseSupply(uint256)": "b921e163",
							"isTrustedForwarder(address)": "572b6c05",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"trustedForwarder()": "7da0a877"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reward.sol\":\"RewardToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/reward.sol\":{\"keccak256\":\"0xb6110c8b0b2499f8ccf3c963ea16a22e7949f8528ca94b866fc3f9265ddb48ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a671a45ef96b8f76e93040ed31d9d87dfef94f761d00b931ece6261e5a0f60\",\"dweb:/ipfs/QmejgmogtRt8PUoxPv45sXQikQPNbdXTyDXXCZu45yED1f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 452,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 458,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 460,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 462,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1079,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1078
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/metatx/ERC2771Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC2771Context": [
							429
						]
					},
					"id": 430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 430,
							"sourceUnit": 1079,
							"src": "135:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "143:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 290,
										"name": "Context",
										"nameLocations": [
											"1005:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "1005:7:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "1005:7:2"
								}
							],
							"canonicalName": "ERC2771Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 289,
								"nodeType": "StructuredDocumentation",
								"src": "182:786:2",
								"text": " @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."
							},
							"fullyImplemented": true,
							"id": 429,
							"linearizedBaseContracts": [
								429,
								1078
							],
							"name": "ERC2771Context",
							"nameLocation": "987:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "1019:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 294,
									"mutability": "immutable",
									"name": "_trustedForwarder",
									"nameLocation": "1111:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "1085:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1085:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1490:54:2",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "_trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1500:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "trustedForwarder_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1520:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1500:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1500:37:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1398:48:2",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 305,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "trustedForwarder_",
												"nameLocation": "1471:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1463:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:27:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:2"
									},
									"scope": 429,
									"src": "1451:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1690:41:2",
										"statements": [
											{
												"expression": {
													"id": 311,
													"name": "_trustedForwarder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 294,
													"src": "1707:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 310,
												"id": 312,
												"nodeType": "Return",
												"src": "1700:24:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1550:69:2",
										"text": " @dev Returns the address of the trusted forwarder."
									},
									"functionSelector": "7da0a877",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trustedForwarder",
									"nameLocation": "1633:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:2:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1681:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:2"
									},
									"scope": 429,
									"src": "1624:107:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1914:55:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 322,
														"name": "forwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1931:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 323,
															"name": "trustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "1944:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1944:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1931:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 326,
												"nodeType": "Return",
												"src": "1924:38:2"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1737:90:2",
										"text": " @dev Indicates whether any particular address is the trusted forwarder."
									},
									"functionSelector": "572b6c05",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "1841:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "1868:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1860:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:19:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1908:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:6:2"
									},
									"scope": 429,
									"src": "1832:137:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1060
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2277:400:2",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "calldataLength",
														"nameLocation": "2295:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2287:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2287:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 337,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2312:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2316:4:2",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"src": "2312:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2321:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2312:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:40:2"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "contextSuffixLength",
														"nameLocation": "2345:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2337:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2337:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 343,
														"name": "_contextSuffixLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															428
														],
														"referencedDeclaration": 428,
														"src": "2367:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2337:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 346,
															"name": "calldataLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "2403:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 347,
															"name": "contextSuffixLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2421:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2403:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 350,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2463:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2467:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2463:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 349,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "2444:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2444:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2403:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "2621:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 369,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2642:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_ERC2771Context_$429_$",
																			"typeString": "type(contract super ERC2771Context)"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2648:10:2",
																	"memberName": "_msgSender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1060,
																	"src": "2642:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2642:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 334,
															"id": 372,
															"nodeType": "Return",
															"src": "2635:25:2"
														}
													]
												},
												"id": 374,
												"nodeType": "IfStatement",
												"src": "2399:272:2",
												"trueBody": {
													"id": 368,
													"nodeType": "Block",
													"src": "2476:139:2",
													"statements": [
														{
															"id": 367,
															"nodeType": "UncheckedBlock",
															"src": "2490:115:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"baseExpression": {
																							"expression": {
																								"id": 358,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "2541:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 359,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2545:4:2",
																							"memberName": "data",
																							"nodeType": "MemberAccess",
																							"src": "2541:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						},
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexRangeAccess",
																						"src": "2541:47:2",
																						"startExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 362,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 360,
																								"name": "calldataLength",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 336,
																								"src": "2550:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 361,
																								"name": "contextSuffixLength",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 342,
																								"src": "2567:19:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2550:36:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr_slice",
																							"typeString": "bytes calldata slice"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_calldata_ptr_slice",
																							"typeString": "bytes calldata slice"
																						}
																					],
																					"id": 357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2533:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 356,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "2533:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2533:56:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			],
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2525:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 354,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2525:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2525:65:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"functionReturnParameters": 334,
																	"id": 366,
																	"nodeType": "Return",
																	"src": "2518:72:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1975:226:2",
										"text": " @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "2215:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2250:8:2"
									},
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2268:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:9:2"
									},
									"scope": 429,
									"src": "2206:471:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2986:380:2",
										"statements": [
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "calldataLength",
														"nameLocation": "3004:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2996:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2996:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 385,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3021:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3025:4:2",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"src": "3021:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3030:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3021:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2996:40:2"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "contextSuffixLength",
														"nameLocation": "3054:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "3046:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 391,
														"name": "_contextSuffixLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															428
														],
														"referencedDeclaration": 428,
														"src": "3076:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3076:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3046:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 394,
															"name": "calldataLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3112:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 395,
															"name": "contextSuffixLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3130:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3112:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3172:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3176:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3172:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 397,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3153:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3153:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3112:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "3312:48:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 411,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3333:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_ERC2771Context_$429_$",
																			"typeString": "type(contract super ERC2771Context)"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3339:8:2",
																	"memberName": "_msgData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1069,
																	"src": "3333:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
																		"typeString": "function () view returns (bytes calldata)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3333:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"functionReturnParameters": 382,
															"id": 414,
															"nodeType": "Return",
															"src": "3326:23:2"
														}
													]
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "3108:252:2",
												"trueBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "3185:121:2",
													"statements": [
														{
															"id": 409,
															"nodeType": "UncheckedBlock",
															"src": "3199:97:2",
															"statements": [
																{
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 402,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3234:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3238:4:2",
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"src": "3234:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"endExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 404,
																				"name": "calldataLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "3244:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 405,
																				"name": "contextSuffixLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "3261:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3244:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexRangeAccess",
																		"src": "3234:47:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr_slice",
																			"typeString": "bytes calldata slice"
																		}
																	},
																	"functionReturnParameters": 382,
																	"id": 408,
																	"nodeType": "Return",
																	"src": "3227:54:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2683:222:2",
										"text": " @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2919:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 379,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2952:8:2"
									},
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:2:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2970:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2970:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:16:2"
									},
									"scope": 429,
									"src": "2910:456:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1077
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "3550:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3230",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3567:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_20_by_1",
														"typeString": "int_const 20"
													},
													"value": "20"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "3560:9:2"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3372:92:2",
										"text": " @dev ERC-2771 specifies the context as being a single address (20 bytes)."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "3478:20:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 421,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3523:8:2"
									},
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3541:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:9:2"
									},
									"scope": 429,
									"src": "3469:107:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 430,
							"src": "969:2609:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:3470:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							944
						],
						"IERC20": [
							1022
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1048
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1023,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 432,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1022,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1049,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 434,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1048,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1079,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 436,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 438,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 441,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "1133:7:3"
									},
									"id": 442,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 443,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1022,
										"src": "1142:6:3"
									},
									"id": 444,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 445,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "1150:14:3"
									},
									"id": 446,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 447,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 448,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944,
								189,
								1048,
								1022,
								1078
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 451,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 449,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 450,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 457,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 456,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 454,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 464,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 463,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 473,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 481,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 944,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 487,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 486,
												"id": 488,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 944,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 496,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 495,
												"id": 497,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 944,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1047
									],
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 502,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 944,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										971
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2864:36:3",
										"statements": [
											{
												"expression": {
													"id": 514,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "2881:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 513,
												"id": 515,
												"nodeType": "Return",
												"src": "2874:19:3"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:3"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2855:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:3"
									},
									"scope": 944,
									"src": "2803:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										979
									],
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "3007:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 525,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3024:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 527,
													"indexExpression": {
														"id": 526,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3034:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 528,
												"nodeType": "Return",
												"src": "3017:25:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2998:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:3"
									},
									"scope": 944,
									"src": "2933:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										989
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3319:103:3",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 553,
														"src": "3329:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 540,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 542,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "3345:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "3377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3384:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3367:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 539,
												"id": 552,
												"nodeType": "Return",
												"src": "3404:11:3"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3262:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3313:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:3"
									},
									"scope": 944,
									"src": "3244:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "3544:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 564,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3561:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 566,
														"indexExpression": {
															"id": 565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3573:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 568,
													"indexExpression": {
														"id": 567,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "3580:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 563,
												"id": 569,
												"nodeType": "Return",
												"src": "3554:34:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3474:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3489:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3535:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:3"
									},
									"scope": 944,
									"src": "3455:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "3981:107:3",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "3991:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4007:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4038:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4045:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4054:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															835,
															895
														],
														"referencedDeclaration": 835,
														"src": "4029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 580,
												"id": 593,
												"nodeType": "Return",
												"src": "4070:11:3"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3919:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3975:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:3"
									},
									"scope": 944,
									"src": "3902:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1021
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4773:151:3",
										"statements": [
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "4783:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 607,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 609,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4801:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4839:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4854:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "4823:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4880:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4886:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4890:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "4870:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 606,
												"id": 625,
												"nodeType": "Return",
												"src": "4906:11:3"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4702:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4716:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4728:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:3"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4767:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:3"
									},
									"scope": 944,
									"src": "4680:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "5366:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 637,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "5380:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 638,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "5376:86:3",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "5400:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 644,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 643,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 649,
															"nodeType": "RevertStatement",
															"src": "5414:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "5475:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 653,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "5471:86:3",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "5493:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 659,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 658,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 664,
															"nodeType": "RevertStatement",
															"src": "5507:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5580:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5584:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5566:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:3"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5330:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:3"
									},
									"scope": 944,
									"src": "5297:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "5987:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "6001:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 721,
													"nodeType": "Block",
													"src": "6175:362:3",
													"statements": [
														{
															"assignments": [
																696
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 696,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 721,
																	"src": "6189:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 695,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 700,
															"initialValue": {
																"baseExpression": {
																	"id": 697,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6211:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 699,
																"indexExpression": {
																	"id": 698,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6221:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 701,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "6244:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6258:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 711,
															"nodeType": "IfStatement",
															"src": "6240:115:3",
															"trueBody": {
																"id": 710,
																"nodeType": "Block",
																"src": "6265:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 705,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 677,
																					"src": "6315:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 706,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "6321:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 707,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 681,
																					"src": "6334:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 704,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 709,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:3"
																	}
																]
															}
														},
														{
															"id": 720,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 712,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6475:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 714,
																			"indexExpression": {
																				"id": 713,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 677,
																				"src": "6485:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 715,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "6493:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 716,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 681,
																				"src": "6507:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 719,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:3"
																}
															]
														}
													]
												},
												"id": 722,
												"nodeType": "IfStatement",
												"src": "5997:540:3",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "6021:148:3",
													"statements": [
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 690,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6137:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6153:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6551:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "6766:206:3",
													"statements": [
														{
															"id": 741,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 735,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6925:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 737,
																			"indexExpression": {
																				"id": 736,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "6935:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "6942:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 740,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:3"
																}
															]
														}
													]
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "6547:425:3",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "6569:191:3",
													"statements": [
														{
															"id": 733,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 729,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "6714:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "6730:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 732,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 745,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6996:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7002:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7006:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 744,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "6987:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "EmitStatement",
												"src": "6982:30:3"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5929:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5943:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5955:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:3"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:3"
									},
									"scope": 944,
									"src": "5912:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "7418:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 759,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "7432:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 760,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "7428:91:3",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "7455:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 765,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 771,
															"nodeType": "RevertStatement",
															"src": "7469:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 775,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "7548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "7557:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:3"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "7377:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "7394:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:3"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:3"
									},
									"scope": 944,
									"src": "7362:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "7944:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "7958:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"nodeType": "IfStatement",
												"src": "7954:89:3",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "7981:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 798,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 804,
															"nodeType": "RevertStatement",
															"src": "7995:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "8060:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "8081:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "8052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:3"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "7903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "7920:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:3"
									},
									"scope": 944,
									"src": "7888:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "8704:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "8723:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "8730:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "8739:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 827,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															835,
															895
														],
														"referencedDeclaration": 895,
														"src": "8714:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:3"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "8648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "8663:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "8680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:3"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:3"
									},
									"scope": 944,
									"src": "8630:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "9703:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 847,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "9717:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 848,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "9713:89:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "9738:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 854,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 853,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 859,
															"nodeType": "RevertStatement",
															"src": "9752:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9815:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "9811:90:3",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "9838:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 868,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "9852:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 877,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "9910:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 880,
															"indexExpression": {
																"id": 878,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "9922:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 881,
														"indexExpression": {
															"id": 879,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9929:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "9940:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:3"
											},
											{
												"condition": {
													"id": 885,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "9959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "9955:76:3",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "9970:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 887,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "9998:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 888,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "10005:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 889,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "10014:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 886,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "9989:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "EmitStatement",
															"src": "9984:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9623:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9638:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:3"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:3"
									},
									"scope": 944,
									"src": "9605:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "10408:387:3",
										"statements": [
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "10418:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "10455:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "10462:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "10445:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10484:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 914,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 913,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "10480:309:3",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "10522:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "10540:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "10559:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 929,
															"nodeType": "IfStatement",
															"src": "10536:130:3",
															"trueBody": {
																"id": 928,
																"nodeType": "Block",
																"src": "10566:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 923,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "10618:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 924,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "10627:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 925,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "10645:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 922,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 927,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:3"
																	}
																]
															}
														},
														{
															"id": 939,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 931,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 898,
																				"src": "10716:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 932,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 900,
																				"src": "10723:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 933,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "10732:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 934,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "10751:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 930,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				835,
																				895
																			],
																			"referencedDeclaration": 895,
																			"src": "10707:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 938,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "10344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "10359:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "10376:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:3"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:3"
									},
									"scope": 944,
									"src": "10319:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 945,
							"src": "1106:9691:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								956,
								965
							]
						}
					],
					"src": "105:10693:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1022
						]
					},
					"id": 1023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1022,
							"linearizedBaseContracts": [
								1022
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 956,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 965,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 1022,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 1022,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 1022,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 1022,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 1022,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 1022,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1023,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								956,
								965
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1022
						],
						"IERC20Metadata": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1024,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1023,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1025,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1022,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1028,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1022,
										"src": "306:6:5"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								1022
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1048,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1048,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1044,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1048,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								956,
								965
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1056,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1058,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1078,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1065,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1067,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1078,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1073,
												"id": 1075,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1078,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1079,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/reward.sol": {
				"ast": {
					"absolutePath": "contracts/reward.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							944
						],
						"ERC2771Context": [
							429
						],
						"IERC20": [
							1022
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1048
						],
						"Ownable": [
							147
						],
						"RewardToken": [
							1215
						]
					},
					"id": 1216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 945,
							"src": "61:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
							"file": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 430,
							"src": "118:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 148,
							"src": "179:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1084,
										"name": "ERC20",
										"nameLocations": [
											"259:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "259:5:7"
									},
									"id": 1085,
									"nodeType": "InheritanceSpecifier",
									"src": "259:5:7"
								},
								{
									"baseName": {
										"id": 1086,
										"name": "ERC2771Context",
										"nameLocations": [
											"266:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "266:14:7"
									},
									"id": 1087,
									"nodeType": "InheritanceSpecifier",
									"src": "266:14:7"
								},
								{
									"baseName": {
										"id": 1088,
										"name": "Ownable",
										"nameLocations": [
											"282:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "282:7:7"
									},
									"id": 1089,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:7"
								}
							],
							"canonicalName": "RewardToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215,
								147,
								429,
								944,
								189,
								1048,
								1022,
								1078
							],
							"name": "RewardToken",
							"nameLocation": "244:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1091,
									"mutability": "immutable",
									"name": "FORWARDER_ADDRESS",
									"nameLocation": "323:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "297:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1090,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "525:55:7",
										"statements": [
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1108,
														"name": "FORWARDER_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "536:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1109,
														"name": "trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "556:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "536:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "536:36:7"
											}
										]
									},
									"id": 1113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "52657761726420546f6b656e",
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "424:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1213d4f7ac0647782d63d8cf019fbd86af265826510d422f8e3c9233f7ebc10f",
														"typeString": "literal_string \"Reward Token\""
													},
													"value": "Reward Token"
												},
												{
													"hexValue": "525744",
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "440:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
														"typeString": "literal_string \"RWD\""
													},
													"value": "RWD"
												}
											],
											"id": 1100,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1097,
												"name": "ERC20",
												"nameLocations": [
													"418:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 944,
												"src": "418:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "418:28:7"
										},
										{
											"arguments": [
												{
													"id": 1102,
													"name": "trustedForwarder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1093,
													"src": "471:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1103,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1101,
												"name": "ERC2771Context",
												"nameLocations": [
													"456:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "456:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "456:32:7"
										},
										{
											"arguments": [
												{
													"id": 1105,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "506:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1106,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1104,
												"name": "Ownable",
												"nameLocations": [
													"498:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "498:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "498:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "trustedForwarder",
												"nameLocation": "369:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "361:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "395:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "387:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:48:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:7"
									},
									"scope": 1215,
									"src": "349:231:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										428,
										1077
									],
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "770:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1121,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "788:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1215_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "794:20:7",
														"memberName": "_contextSuffixLength",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 428,
														"src": "788:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "788:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1120,
												"id": 1124,
												"nodeType": "Return",
												"src": "781:35:7"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "635:20:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1117,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1115,
												"name": "ERC2771Context",
												"nameLocations": [
													"711:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "711:14:7"
											},
											{
												"id": 1116,
												"name": "Context",
												"nameLocations": [
													"727:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "727:7:7"
											}
										],
										"src": "702:33:7"
									},
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "755:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:9:7"
									},
									"scope": 1215,
									"src": "626:198:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										376,
										1060
									],
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "966:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1134,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "984:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1215_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "990:10:7",
														"memberName": "_msgSender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "984:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1137,
												"nodeType": "Return",
												"src": "977:25:7"
											}
										]
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "841:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1130,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1128,
												"name": "ERC2771Context",
												"nameLocations": [
													"907:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "907:14:7"
											},
											{
												"id": 1129,
												"name": "Context",
												"nameLocations": [
													"923:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "923:7:7"
											}
										],
										"src": "898:33:7"
									},
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:2:7"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "951:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:9:7"
									},
									"scope": 1215,
									"src": "832:178:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										418,
										1069
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "1157:42:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1147,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1175:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1215_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1181:8:7",
														"memberName": "_msgData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 418,
														"src": "1175:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
															"typeString": "function () view returns (bytes calldata)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1175:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1150,
												"nodeType": "Return",
												"src": "1168:23:7"
											}
										]
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1027:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1143,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1141,
												"name": "ERC2771Context",
												"nameLocations": [
													"1091:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "1091:14:7"
											},
											{
												"id": 1142,
												"name": "Context",
												"nameLocations": [
													"1107:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "1107:7:7"
											}
										],
										"src": "1082:33:7"
									},
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:2:7"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1135:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1135:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:16:7"
									},
									"scope": 1215,
									"src": "1018:181:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										328
									],
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "1350:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1163,
															"name": "forwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1393:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1161,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1368:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1215_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1374:18:7",
														"memberName": "isTrustedForwarder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 328,
														"src": "1368:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1165,
												"nodeType": "Return",
												"src": "1361:42:7"
											}
										]
									},
									"functionSelector": "572b6c05",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "1216:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1157,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1156,
												"name": "ERC2771Context",
												"nameLocations": [
													"1304:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "1304:14:7"
											}
										],
										"src": "1295:24:7"
									},
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "1243:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1235:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:19:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1338:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:7"
									},
									"scope": 1215,
									"src": "1207:204:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "1483:120:7",
										"statements": [
											{
												"assignments": [
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "amountInSmallestUnit",
														"nameLocation": "1502:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "1494:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1176,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1494:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1178,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "1525:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1534:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1180,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "1538:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1538:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1534:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1525:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1494:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "1565:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "amountInSmallestUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "1574:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1185,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1559:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1559:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "1559:36:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1173,
												"name": "onlyOwner",
												"nameLocations": [
													"1473:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1473:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1473:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "1428:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1441:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1433:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1458:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1450:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:33:7"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1483:0:7"
									},
									"scope": 1215,
									"src": "1419:184:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "1668:120:7",
										"statements": [
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "amountInSmallestUnit",
														"nameLocation": "1687:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "1679:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1679:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "1710:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1719:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1202,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "1723:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1723:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1719:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1710:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1679:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1208,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1750:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1750:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "amountInSmallestUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "1759:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1207,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1744:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "1744:36:7"
											}
										]
									},
									"functionSelector": "b921e163",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1195,
												"name": "onlyOwner",
												"nameLocations": [
													"1658:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1658:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1658:9:7"
										}
									],
									"name": "increaseSupply",
									"nameLocation": "1620:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1643:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1635:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:16:7"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1668:0:7"
									},
									"scope": 1215,
									"src": "1611:177:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1216,
							"src": "235:1556:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								956,
								965
							]
						}
					],
					"src": "33:1760:7"
				},
				"id": 7
			}
		}
	}
}