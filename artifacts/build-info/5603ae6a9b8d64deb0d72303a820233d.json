{
	"id": "5603ae6a9b8d64deb0d72303a820233d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/reward.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract RewardToken is ERC20, ERC2771Context, Ownable {\r\n    address private immutable FORWARDER_ADDRESS;\r\n\r\n    constructor(address trustedForwarder, address initialOwner, uint256 initialSupply)\r\n        ERC20(\"Reward 1 Token\", \"RWD 1\")\r\n        ERC2771Context(trustedForwarder)\r\n        Ownable(initialOwner)\r\n    {\r\n        uint256 supply = initialSupply * 10**decimals();\r\n        FORWARDER_ADDRESS = trustedForwarder;\r\n        _mint(owner(), supply);\r\n    }\r\n\r\n    // Tambahkan fungsi override ini\r\n    function _contextSuffixLength() \r\n        internal \r\n        view \r\n        override(ERC2771Context, Context) \r\n        returns (uint256) \r\n    {\r\n        return super._contextSuffixLength();\r\n    }\r\n\r\n    function _msgSender() \r\n        internal \r\n        view \r\n        override(ERC2771Context, Context) \r\n        returns (address) \r\n    {\r\n        return super._msgSender();\r\n    }\r\n\r\n    function _msgData() \r\n        internal \r\n        view \r\n        override(ERC2771Context, Context) \r\n        returns (bytes calldata) \r\n    {\r\n        return super._msgData();\r\n    }\r\n\r\n    function isTrustedForwarder(address forwarder)\r\n        public \r\n        view \r\n        override(ERC2771Context)\r\n        returns (bool) \r\n    {\r\n        return super.isTrustedForwarder(forwarder);\r\n    }\r\n\r\n    function convertAmount(uint256 amount) private view returns (uint256) {\r\n        return amount * 10**decimals();\r\n    }\r\n\r\n    function increaseSupply(uint256 amount) public onlyOwner {\r\n        uint256 amountInSmallestUnit = convertAmount(amount);\r\n        _mint(owner(), amountInSmallestUnit);\r\n    }\r\n\r\n    function claimReward(uint256 amount) public {\r\n        require(\r\n            isTrustedForwarder(msg.sender) || _msgSender() == owner(), \r\n            \"RewardToken: Must use a Trusted Forwarder or be the Owner.\"\r\n        );\r\n\r\n        uint256 rewardAmount = convertAmount(amount);\r\n        _transfer(owner(), _msgSender(), rewardAmount);\r\n    }\r\n\r\n    function claimRewardPublic(address user_address, uint256 amount) public onlyOwner {\r\n        require(user_address != address(0), \"New wallet cannot be the zero address\");\r\n        address sender = msg.sender;\r\n\r\n        uint256 rewardAmount = convertAmount(amount);\r\n\r\n        _transfer(sender, user_address, rewardAmount);\r\n    }\r\n\r\n    function decreaseMyToken(uint256 amount) public {\r\n        require(\r\n            isTrustedForwarder(msg.sender) || _msgSender() == owner(), \r\n            \"RewardToken: Must use a Trusted Forwarder or be the Owner.\"\r\n        );\r\n\r\n        uint256 rewardAmount = convertAmount(amount);\r\n        _transfer(_msgSender(), owner(), rewardAmount);\r\n    }\r\n\r\n    function decreaseMyTokenPublic(address user_address, uint256 amount) public {\r\n        require(user_address != address(0), \"New wallet cannot be the zero address\");\r\n        address sender = msg.sender;\r\n\r\n        uint256 rewardAmount = convertAmount(amount);\r\n        _transfer(user_address, sender, rewardAmount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/metatx/ERC2771Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {\n            unchecked {\n                return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n            }\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {\n            unchecked {\n                return msg.data[:calldataLength - contextSuffixLength];\n            }\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/metatx/ERC2771Context.sol": {
				"ERC2771Context": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"isTrustedForwarder(address)": {
								"details": "Indicates whether any particular address is the trusted forwarder."
							},
							"trustedForwarder()": {
								"details": "Returns the address of the trusted forwarder."
							}
						},
						"stateVariables": {
							"_trustedForwarder": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isTrustedForwarder(address)": "572b6c05",
							"trustedForwarder()": "7da0a877"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 452,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 458,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 460,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/reward.sol": {
				"RewardToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "trustedForwarder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimRewardPublic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "decreaseMyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "decreaseMyTokenPublic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "increaseSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"isTrustedForwarder(address)": {
								"details": "Indicates whether any particular address is the trusted forwarder."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"trustedForwarder()": {
								"details": "Returns the address of the trusted forwarder."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/reward.sol\":235:3216  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/reward.sol\":349:698  constructor(address trustedForwarder, address initialOwner, uint256 initialSupply)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/reward.sol\":533:545  initialOwner */\n  dup2\n    /* \"contracts/reward.sol\":498:514  trustedForwarder */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x526577617264203120546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5257442031000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1520:1537  trustedForwarder_ */\n  dup1\n    /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1500:1537  _trustedForwarder = trustedForwarder_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1451:1544  constructor(address trustedForwarder_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/reward.sol\":563:577  uint256 supply */\n  0x00\n    /* \"contracts/reward.sol\":600:610  decimals() */\n  tag_20\n    /* \"contracts/reward.sol\":600:608  decimals */\n  shl(0x20, tag_21)\n    /* \"contracts/reward.sol\":600:610  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/reward.sol\":596:598  10 */\n  0x0a\n    /* \"contracts/reward.sol\":596:610  10**decimals() */\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"contracts/reward.sol\":580:593  initialSupply */\n  dup3\n    /* \"contracts/reward.sol\":580:610  initialSupply * 10**decimals() */\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/reward.sol\":563:610  uint256 supply = initialSupply * 10**decimals() */\n  swap1\n  pop\n    /* \"contracts/reward.sol\":641:657  trustedForwarder */\n  dup4\n    /* \"contracts/reward.sol\":621:657  FORWARDER_ADDRESS = trustedForwarder */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/reward.sol\":668:690  _mint(owner(), supply) */\n  tag_26\n    /* \"contracts/reward.sol\":674:681  owner() */\n  tag_27\n    /* \"contracts/reward.sol\":674:679  owner */\n  shl(0x20, tag_28)\n    /* \"contracts/reward.sol\":674:681  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/reward.sol\":683:689  supply */\n  dup3\n    /* \"contracts/reward.sol\":668:673  _mint */\n  shl(0x20, tag_29)\n    /* \"contracts/reward.sol\":668:690  _mint(owner(), supply) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/reward.sol\":552:698  {... */\n  pop\n    /* \"contracts/reward.sol\":349:698  constructor(address trustedForwarder, address initialOwner, uint256 initialSupply)... */\n  pop\n  pop\n  pop\n    /* \"contracts/reward.sol\":235:3216  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_43)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_48)\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_52:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_54:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_55:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_93\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_54\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_56:\n    /* \"#utility.yul\":641:665   */\n  tag_95\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_55\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_96:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_57:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_98\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_58:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_59:\n    /* \"#utility.yul\":1001:1025   */\n  tag_101\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_58\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_102:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_60:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_104\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_59\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_107\n  tag_52\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1326:1445   */\ntag_106:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_108\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_57\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_109\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_57\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_110\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_60\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1973   */\ntag_61:\n    /* \"#utility.yul\":1926:1932   */\n  0x00\n    /* \"#utility.yul\":1960:1965   */\n  dup2\n    /* \"#utility.yul\":1954:1966   */\n  mload\n    /* \"#utility.yul\":1944:1966   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1973   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1979:2159   */\ntag_62:\n    /* \"#utility.yul\":2027:2104   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2024:2025   */\n  0x00\n    /* \"#utility.yul\":2017:2105   */\n  mstore\n    /* \"#utility.yul\":2124:2128   */\n  0x41\n    /* \"#utility.yul\":2121:2122   */\n  0x04\n    /* \"#utility.yul\":2114:2129   */\n  mstore\n    /* \"#utility.yul\":2148:2152   */\n  0x24\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2138:2153   */\n  revert\n    /* \"#utility.yul\":2165:2345   */\ntag_63:\n    /* \"#utility.yul\":2213:2290   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2203:2291   */\n  mstore\n    /* \"#utility.yul\":2310:2314   */\n  0x22\n    /* \"#utility.yul\":2307:2308   */\n  0x04\n    /* \"#utility.yul\":2300:2315   */\n  mstore\n    /* \"#utility.yul\":2334:2338   */\n  0x24\n    /* \"#utility.yul\":2331:2332   */\n  0x00\n    /* \"#utility.yul\":2324:2339   */\n  revert\n    /* \"#utility.yul\":2351:2671   */\ntag_64:\n    /* \"#utility.yul\":2395:2401   */\n  0x00\n    /* \"#utility.yul\":2432:2433   */\n  0x02\n    /* \"#utility.yul\":2426:2430   */\n  dup3\n    /* \"#utility.yul\":2422:2434   */\n  div\n    /* \"#utility.yul\":2412:2434   */\n  swap1\n  pop\n    /* \"#utility.yul\":2479:2480   */\n  0x01\n    /* \"#utility.yul\":2473:2477   */\n  dup3\n    /* \"#utility.yul\":2469:2481   */\n  and\n    /* \"#utility.yul\":2500:2518   */\n  dup1\n    /* \"#utility.yul\":2490:2571   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":2556:2560   */\n  0x7f\n    /* \"#utility.yul\":2548:2554   */\n  dup3\n    /* \"#utility.yul\":2544:2561   */\n  and\n    /* \"#utility.yul\":2534:2561   */\n  swap2\n  pop\n    /* \"#utility.yul\":2490:2571   */\ntag_115:\n    /* \"#utility.yul\":2618:2620   */\n  0x20\n    /* \"#utility.yul\":2610:2616   */\n  dup3\n    /* \"#utility.yul\":2607:2621   */\n  lt\n    /* \"#utility.yul\":2587:2605   */\n  dup2\n    /* \"#utility.yul\":2584:2622   */\n  sub\n    /* \"#utility.yul\":2581:2665   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":2637:2655   */\n  tag_117\n  tag_63\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2581:2665   */\ntag_116:\n    /* \"#utility.yul\":2402:2671   */\n  pop\n    /* \"#utility.yul\":2351:2671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2818   */\ntag_65:\n    /* \"#utility.yul\":2726:2730   */\n  0x00\n    /* \"#utility.yul\":2749:2752   */\n  dup2\n    /* \"#utility.yul\":2741:2752   */\n  swap1\n  pop\n    /* \"#utility.yul\":2772:2775   */\n  dup2\n    /* \"#utility.yul\":2769:2770   */\n  0x00\n    /* \"#utility.yul\":2762:2776   */\n  mstore\n    /* \"#utility.yul\":2806:2810   */\n  0x20\n    /* \"#utility.yul\":2803:2804   */\n  0x00\n    /* \"#utility.yul\":2793:2811   */\n  keccak256\n    /* \"#utility.yul\":2785:2811   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2824:2917   */\ntag_66:\n    /* \"#utility.yul\":2861:2867   */\n  0x00\n    /* \"#utility.yul\":2908:2910   */\n  0x20\n    /* \"#utility.yul\":2903:2905   */\n  0x1f\n    /* \"#utility.yul\":2896:2901   */\n  dup4\n    /* \"#utility.yul\":2892:2906   */\n  add\n    /* \"#utility.yul\":2888:2911   */\n  div\n    /* \"#utility.yul\":2878:2911   */\n  swap1\n  pop\n    /* \"#utility.yul\":2824:2917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2923:3030   */\ntag_67:\n    /* \"#utility.yul\":2967:2975   */\n  0x00\n    /* \"#utility.yul\":3017:3022   */\n  dup3\n    /* \"#utility.yul\":3011:3015   */\n  dup3\n    /* \"#utility.yul\":3007:3023   */\n  shl\n    /* \"#utility.yul\":2986:3023   */\n  swap1\n  pop\n    /* \"#utility.yul\":2923:3030   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3036:3429   */\ntag_68:\n    /* \"#utility.yul\":3105:3111   */\n  0x00\n    /* \"#utility.yul\":3155:3156   */\n  0x08\n    /* \"#utility.yul\":3143:3153   */\n  dup4\n    /* \"#utility.yul\":3139:3157   */\n  mul\n    /* \"#utility.yul\":3178:3275   */\n  tag_122\n    /* \"#utility.yul\":3208:3274   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3197:3206   */\n  dup3\n    /* \"#utility.yul\":3178:3275   */\n  tag_67\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3296:3335   */\n  tag_123\n    /* \"#utility.yul\":3326:3334   */\n  dup7\n    /* \"#utility.yul\":3315:3324   */\n  dup4\n    /* \"#utility.yul\":3296:3335   */\n  tag_67\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3284:3335   */\n  swap6\n  pop\n    /* \"#utility.yul\":3368:3372   */\n  dup1\n    /* \"#utility.yul\":3364:3373   */\n  not\n    /* \"#utility.yul\":3357:3362   */\n  dup5\n    /* \"#utility.yul\":3353:3374   */\n  and\n    /* \"#utility.yul\":3344:3374   */\n  swap4\n  pop\n    /* \"#utility.yul\":3417:3421   */\n  dup1\n    /* \"#utility.yul\":3407:3415   */\n  dup7\n    /* \"#utility.yul\":3403:3422   */\n  and\n    /* \"#utility.yul\":3396:3401   */\n  dup5\n    /* \"#utility.yul\":3393:3423   */\n  or\n    /* \"#utility.yul\":3383:3423   */\n  swap3\n  pop\n    /* \"#utility.yul\":3112:3429   */\n  pop\n  pop\n    /* \"#utility.yul\":3036:3429   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3435:3495   */\ntag_69:\n    /* \"#utility.yul\":3463:3466   */\n  0x00\n    /* \"#utility.yul\":3484:3489   */\n  dup2\n    /* \"#utility.yul\":3477:3489   */\n  swap1\n  pop\n    /* \"#utility.yul\":3435:3495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3501:3643   */\ntag_70:\n    /* \"#utility.yul\":3551:3560   */\n  0x00\n    /* \"#utility.yul\":3584:3637   */\n  tag_126\n    /* \"#utility.yul\":3602:3636   */\n  tag_127\n    /* \"#utility.yul\":3611:3635   */\n  tag_128\n    /* \"#utility.yul\":3629:3634   */\n  dup5\n    /* \"#utility.yul\":3611:3635   */\n  tag_58\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3602:3636   */\n  tag_69\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3584:3637   */\n  tag_58\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3571:3637   */\n  swap1\n  pop\n    /* \"#utility.yul\":3501:3643   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3649:3724   */\ntag_71:\n    /* \"#utility.yul\":3692:3695   */\n  0x00\n    /* \"#utility.yul\":3713:3718   */\n  dup2\n    /* \"#utility.yul\":3706:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3649:3724   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3730:3999   */\ntag_72:\n    /* \"#utility.yul\":3840:3879   */\n  tag_131\n    /* \"#utility.yul\":3871:3878   */\n  dup4\n    /* \"#utility.yul\":3840:3879   */\n  tag_70\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3901:3992   */\n  tag_132\n    /* \"#utility.yul\":3950:3991   */\n  tag_133\n    /* \"#utility.yul\":3974:3990   */\n  dup3\n    /* \"#utility.yul\":3950:3991   */\n  tag_71\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3942:3948   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3929:3940   */\n  sload\n    /* \"#utility.yul\":3901:3992   */\n  tag_68\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3895:3899   */\n  dup3\n    /* \"#utility.yul\":3888:3993   */\n  sstore\n    /* \"#utility.yul\":3806:3999   */\n  pop\n    /* \"#utility.yul\":3730:3999   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4005:4078   */\ntag_73:\n    /* \"#utility.yul\":4050:4053   */\n  0x00\n    /* \"#utility.yul\":4071:4072   */\n  0x00\n    /* \"#utility.yul\":4064:4072   */\n  swap1\n  pop\n    /* \"#utility.yul\":4005:4078   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4084:4273   */\ntag_74:\n    /* \"#utility.yul\":4161:4193   */\n  tag_136\n  tag_73\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4202:4267   */\n  tag_137\n    /* \"#utility.yul\":4260:4266   */\n  dup2\n    /* \"#utility.yul\":4252:4258   */\n  dup5\n    /* \"#utility.yul\":4246:4250   */\n  dup5\n    /* \"#utility.yul\":4202:4267   */\n  tag_72\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4137:4273   */\n  pop\n    /* \"#utility.yul\":4084:4273   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4279:4465   */\ntag_75:\n    /* \"#utility.yul\":4339:4459   */\ntag_139:\n    /* \"#utility.yul\":4356:4359   */\n  dup2\n    /* \"#utility.yul\":4349:4354   */\n  dup2\n    /* \"#utility.yul\":4346:4360   */\n  lt\n    /* \"#utility.yul\":4339:4459   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4410:4449   */\n  tag_142\n    /* \"#utility.yul\":4447:4448   */\n  0x00\n    /* \"#utility.yul\":4440:4445   */\n  dup3\n    /* \"#utility.yul\":4410:4449   */\n  tag_74\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4383:4384   */\n  0x01\n    /* \"#utility.yul\":4376:4381   */\n  dup2\n    /* \"#utility.yul\":4372:4385   */\n  add\n    /* \"#utility.yul\":4363:4385   */\n  swap1\n  pop\n    /* \"#utility.yul\":4339:4459   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":4279:4465   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4471:5014   */\ntag_76:\n    /* \"#utility.yul\":4572:4574   */\n  0x1f\n    /* \"#utility.yul\":4567:4570   */\n  dup3\n    /* \"#utility.yul\":4564:4575   */\n  gt\n    /* \"#utility.yul\":4561:5007   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":4606:4644   */\n  tag_145\n    /* \"#utility.yul\":4638:4643   */\n  dup2\n    /* \"#utility.yul\":4606:4644   */\n  tag_65\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4690:4719   */\n  tag_146\n    /* \"#utility.yul\":4708:4718   */\n  dup5\n    /* \"#utility.yul\":4690:4719   */\n  tag_66\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4680:4688   */\n  dup2\n    /* \"#utility.yul\":4676:4720   */\n  add\n    /* \"#utility.yul\":4873:4875   */\n  0x20\n    /* \"#utility.yul\":4861:4871   */\n  dup6\n    /* \"#utility.yul\":4858:4876   */\n  lt\n    /* \"#utility.yul\":4855:4904   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4894:4902   */\n  dup2\n    /* \"#utility.yul\":4879:4902   */\n  swap1\n  pop\n    /* \"#utility.yul\":4855:4904   */\ntag_147:\n    /* \"#utility.yul\":4917:4997   */\n  tag_148\n    /* \"#utility.yul\":4973:4995   */\n  tag_149\n    /* \"#utility.yul\":4991:4994   */\n  dup6\n    /* \"#utility.yul\":4973:4995   */\n  tag_66\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4963:4971   */\n  dup4\n    /* \"#utility.yul\":4959:4996   */\n  add\n    /* \"#utility.yul\":4946:4957   */\n  dup3\n    /* \"#utility.yul\":4917:4997   */\n  tag_75\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4576:5007   */\n  pop\n  pop\n    /* \"#utility.yul\":4561:5007   */\ntag_144:\n    /* \"#utility.yul\":4471:5014   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5020:5137   */\ntag_77:\n    /* \"#utility.yul\":5074:5082   */\n  0x00\n    /* \"#utility.yul\":5124:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5122   */\n  dup3\n    /* \"#utility.yul\":5114:5130   */\n  shr\n    /* \"#utility.yul\":5093:5130   */\n  swap1\n  pop\n    /* \"#utility.yul\":5020:5137   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5143:5312   */\ntag_78:\n    /* \"#utility.yul\":5187:5193   */\n  0x00\n    /* \"#utility.yul\":5220:5271   */\n  tag_152\n    /* \"#utility.yul\":5268:5269   */\n  0x00\n    /* \"#utility.yul\":5264:5270   */\n  not\n    /* \"#utility.yul\":5256:5261   */\n  dup5\n    /* \"#utility.yul\":5253:5254   */\n  0x08\n    /* \"#utility.yul\":5249:5262   */\n  mul\n    /* \"#utility.yul\":5220:5271   */\n  tag_77\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5216:5272   */\n  not\n    /* \"#utility.yul\":5301:5305   */\n  dup1\n    /* \"#utility.yul\":5295:5299   */\n  dup4\n    /* \"#utility.yul\":5291:5306   */\n  and\n    /* \"#utility.yul\":5281:5306   */\n  swap2\n  pop\n    /* \"#utility.yul\":5194:5312   */\n  pop\n    /* \"#utility.yul\":5143:5312   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5317:5612   */\ntag_79:\n    /* \"#utility.yul\":5393:5397   */\n  0x00\n    /* \"#utility.yul\":5539:5568   */\n  tag_154\n    /* \"#utility.yul\":5564:5567   */\n  dup4\n    /* \"#utility.yul\":5558:5562   */\n  dup4\n    /* \"#utility.yul\":5539:5568   */\n  tag_78\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5531:5568   */\n  swap2\n  pop\n    /* \"#utility.yul\":5601:5604   */\n  dup3\n    /* \"#utility.yul\":5598:5599   */\n  0x02\n    /* \"#utility.yul\":5594:5605   */\n  mul\n    /* \"#utility.yul\":5588:5592   */\n  dup3\n    /* \"#utility.yul\":5585:5606   */\n  or\n    /* \"#utility.yul\":5577:5606   */\n  swap1\n  pop\n    /* \"#utility.yul\":5317:5612   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5617:7012   */\ntag_10:\n    /* \"#utility.yul\":5734:5771   */\n  tag_156\n    /* \"#utility.yul\":5767:5770   */\n  dup3\n    /* \"#utility.yul\":5734:5771   */\n  tag_61\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5836:5854   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5828:5834   */\n  dup2\n    /* \"#utility.yul\":5825:5855   */\n  gt\n    /* \"#utility.yul\":5822:5878   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":5858:5876   */\n  tag_158\n  tag_62\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5822:5878   */\ntag_157:\n    /* \"#utility.yul\":5902:5940   */\n  tag_159\n    /* \"#utility.yul\":5934:5938   */\n  dup3\n    /* \"#utility.yul\":5928:5939   */\n  sload\n    /* \"#utility.yul\":5902:5940   */\n  tag_64\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5987:6054   */\n  tag_160\n    /* \"#utility.yul\":6047:6053   */\n  dup3\n    /* \"#utility.yul\":6039:6045   */\n  dup3\n    /* \"#utility.yul\":6033:6037   */\n  dup6\n    /* \"#utility.yul\":5987:6054   */\n  tag_76\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6081:6082   */\n  0x00\n    /* \"#utility.yul\":6105:6109   */\n  0x20\n    /* \"#utility.yul\":6092:6109   */\n  swap1\n  pop\n    /* \"#utility.yul\":6137:6139   */\n  0x1f\n    /* \"#utility.yul\":6129:6135   */\n  dup4\n    /* \"#utility.yul\":6126:6140   */\n  gt\n    /* \"#utility.yul\":6154:6155   */\n  0x01\n    /* \"#utility.yul\":6149:6767   */\n  dup2\n  eq\n  tag_162\n  jumpi\n    /* \"#utility.yul\":6811:6812   */\n  0x00\n    /* \"#utility.yul\":6828:6834   */\n  dup5\n    /* \"#utility.yul\":6825:6902   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6877:6886   */\n  dup3\n    /* \"#utility.yul\":6872:6875   */\n  dup8\n    /* \"#utility.yul\":6868:6887   */\n  add\n    /* \"#utility.yul\":6862:6888   */\n  mload\n    /* \"#utility.yul\":6853:6888   */\n  swap1\n  pop\n    /* \"#utility.yul\":6825:6902   */\ntag_163:\n    /* \"#utility.yul\":6928:6995   */\n  tag_164\n    /* \"#utility.yul\":6988:6994   */\n  dup6\n    /* \"#utility.yul\":6981:6986   */\n  dup3\n    /* \"#utility.yul\":6928:6995   */\n  tag_79\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6922:6926   */\n  dup7\n    /* \"#utility.yul\":6915:6996   */\n  sstore\n    /* \"#utility.yul\":6784:7006   */\n  pop\n    /* \"#utility.yul\":6119:7006   */\n  jump(tag_161)\n    /* \"#utility.yul\":6149:6767   */\ntag_162:\n    /* \"#utility.yul\":6201:6205   */\n  0x1f\n    /* \"#utility.yul\":6197:6206   */\n  not\n    /* \"#utility.yul\":6189:6195   */\n  dup5\n    /* \"#utility.yul\":6185:6207   */\n  and\n    /* \"#utility.yul\":6235:6272   */\n  tag_165\n    /* \"#utility.yul\":6267:6271   */\n  dup7\n    /* \"#utility.yul\":6235:6272   */\n  tag_65\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6294:6295   */\n  0x00\n    /* \"#utility.yul\":6308:6516   */\ntag_166:\n    /* \"#utility.yul\":6322:6329   */\n  dup3\n    /* \"#utility.yul\":6319:6320   */\n  dup2\n    /* \"#utility.yul\":6316:6330   */\n  lt\n    /* \"#utility.yul\":6308:6516   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":6401:6410   */\n  dup5\n    /* \"#utility.yul\":6396:6399   */\n  dup10\n    /* \"#utility.yul\":6392:6411   */\n  add\n    /* \"#utility.yul\":6386:6412   */\n  mload\n    /* \"#utility.yul\":6378:6384   */\n  dup3\n    /* \"#utility.yul\":6371:6413   */\n  sstore\n    /* \"#utility.yul\":6452:6453   */\n  0x01\n    /* \"#utility.yul\":6444:6450   */\n  dup3\n    /* \"#utility.yul\":6440:6454   */\n  add\n    /* \"#utility.yul\":6430:6454   */\n  swap2\n  pop\n    /* \"#utility.yul\":6499:6501   */\n  0x20\n    /* \"#utility.yul\":6488:6497   */\n  dup6\n    /* \"#utility.yul\":6484:6502   */\n  add\n    /* \"#utility.yul\":6471:6502   */\n  swap5\n  pop\n    /* \"#utility.yul\":6345:6349   */\n  0x20\n    /* \"#utility.yul\":6342:6343   */\n  dup2\n    /* \"#utility.yul\":6338:6350   */\n  add\n    /* \"#utility.yul\":6333:6350   */\n  swap1\n  pop\n    /* \"#utility.yul\":6308:6516   */\n  jump(tag_166)\ntag_168:\n    /* \"#utility.yul\":6544:6550   */\n  dup7\n    /* \"#utility.yul\":6535:6542   */\n  dup4\n    /* \"#utility.yul\":6532:6551   */\n  lt\n    /* \"#utility.yul\":6529:6708   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":6602:6611   */\n  dup5\n    /* \"#utility.yul\":6597:6600   */\n  dup10\n    /* \"#utility.yul\":6593:6612   */\n  add\n    /* \"#utility.yul\":6587:6613   */\n  mload\n    /* \"#utility.yul\":6645:6693   */\n  tag_170\n    /* \"#utility.yul\":6687:6691   */\n  0x1f\n    /* \"#utility.yul\":6679:6685   */\n  dup10\n    /* \"#utility.yul\":6675:6692   */\n  and\n    /* \"#utility.yul\":6664:6673   */\n  dup3\n    /* \"#utility.yul\":6645:6693   */\n  tag_78\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6637:6643   */\n  dup4\n    /* \"#utility.yul\":6630:6694   */\n  sstore\n    /* \"#utility.yul\":6552:6708   */\n  pop\n    /* \"#utility.yul\":6529:6708   */\ntag_169:\n    /* \"#utility.yul\":6754:6755   */\n  0x01\n    /* \"#utility.yul\":6750:6751   */\n  0x02\n    /* \"#utility.yul\":6742:6748   */\n  dup9\n    /* \"#utility.yul\":6738:6752   */\n  mul\n    /* \"#utility.yul\":6734:6756   */\n  add\n    /* \"#utility.yul\":6728:6732   */\n  dup9\n    /* \"#utility.yul\":6721:6757   */\n  sstore\n    /* \"#utility.yul\":6156:6767   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6119:7006   */\ntag_161:\n  pop\n    /* \"#utility.yul\":5709:7012   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5617:7012   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7018:7136   */\ntag_80:\n    /* \"#utility.yul\":7105:7129   */\n  tag_172\n    /* \"#utility.yul\":7123:7128   */\n  dup2\n    /* \"#utility.yul\":7105:7129   */\n  tag_55\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7100:7103   */\n  dup3\n    /* \"#utility.yul\":7093:7130   */\n  mstore\n    /* \"#utility.yul\":7018:7136   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7142:7364   */\ntag_16:\n    /* \"#utility.yul\":7235:7239   */\n  0x00\n    /* \"#utility.yul\":7273:7275   */\n  0x20\n    /* \"#utility.yul\":7262:7271   */\n  dup3\n    /* \"#utility.yul\":7258:7276   */\n  add\n    /* \"#utility.yul\":7250:7276   */\n  swap1\n  pop\n    /* \"#utility.yul\":7286:7357   */\n  tag_174\n    /* \"#utility.yul\":7354:7355   */\n  0x00\n    /* \"#utility.yul\":7343:7352   */\n  dup4\n    /* \"#utility.yul\":7339:7356   */\n  add\n    /* \"#utility.yul\":7330:7336   */\n  dup5\n    /* \"#utility.yul\":7286:7357   */\n  tag_80\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7142:7364   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7370:7550   */\ntag_81:\n    /* \"#utility.yul\":7418:7495   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7415:7416   */\n  0x00\n    /* \"#utility.yul\":7408:7496   */\n  mstore\n    /* \"#utility.yul\":7515:7519   */\n  0x11\n    /* \"#utility.yul\":7512:7513   */\n  0x04\n    /* \"#utility.yul\":7505:7520   */\n  mstore\n    /* \"#utility.yul\":7539:7543   */\n  0x24\n    /* \"#utility.yul\":7536:7537   */\n  0x00\n    /* \"#utility.yul\":7529:7544   */\n  revert\n    /* \"#utility.yul\":7556:7658   */\ntag_82:\n    /* \"#utility.yul\":7598:7606   */\n  0x00\n    /* \"#utility.yul\":7645:7650   */\n  dup2\n    /* \"#utility.yul\":7642:7643   */\n  0x01\n    /* \"#utility.yul\":7638:7651   */\n  shr\n    /* \"#utility.yul\":7617:7651   */\n  swap1\n  pop\n    /* \"#utility.yul\":7556:7658   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7664:8512   */\ntag_83:\n    /* \"#utility.yul\":7725:7730   */\n  0x00\n    /* \"#utility.yul\":7732:7736   */\n  0x00\n    /* \"#utility.yul\":7756:7762   */\n  dup3\n    /* \"#utility.yul\":7747:7762   */\n  swap2\n  pop\n    /* \"#utility.yul\":7780:7785   */\n  dup4\n    /* \"#utility.yul\":7771:7785   */\n  swap1\n  pop\n    /* \"#utility.yul\":7794:8506   */\ntag_178:\n    /* \"#utility.yul\":7815:7816   */\n  0x01\n    /* \"#utility.yul\":7805:7813   */\n  dup6\n    /* \"#utility.yul\":7802:7817   */\n  gt\n    /* \"#utility.yul\":7794:8506   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7910:7914   */\n  dup1\n    /* \"#utility.yul\":7905:7908   */\n  dup7\n    /* \"#utility.yul\":7901:7915   */\n  div\n    /* \"#utility.yul\":7895:7899   */\n  dup2\n    /* \"#utility.yul\":7892:7916   */\n  gt\n    /* \"#utility.yul\":7889:7939   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7919:7937   */\n  tag_182\n  tag_81\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7889:7939   */\ntag_181:\n    /* \"#utility.yul\":7969:7970   */\n  0x01\n    /* \"#utility.yul\":7959:7967   */\n  dup6\n    /* \"#utility.yul\":7955:7971   */\n  and\n    /* \"#utility.yul\":7952:8403   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8384:8388   */\n  dup1\n    /* \"#utility.yul\":8377:8382   */\n  dup3\n    /* \"#utility.yul\":8373:8389   */\n  mul\n    /* \"#utility.yul\":8364:8389   */\n  swap2\n  pop\n    /* \"#utility.yul\":7952:8403   */\ntag_183:\n    /* \"#utility.yul\":8434:8438   */\n  dup1\n    /* \"#utility.yul\":8428:8432   */\n  dup2\n    /* \"#utility.yul\":8424:8439   */\n  mul\n    /* \"#utility.yul\":8416:8439   */\n  swap1\n  pop\n    /* \"#utility.yul\":8464:8496   */\n  tag_184\n    /* \"#utility.yul\":8487:8495   */\n  dup6\n    /* \"#utility.yul\":8464:8496   */\n  tag_82\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8452:8496   */\n  swap5\n  pop\n    /* \"#utility.yul\":7794:8506   */\n  jump(tag_178)\ntag_180:\n    /* \"#utility.yul\":7664:8512   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8518:9591   */\ntag_84:\n    /* \"#utility.yul\":8572:8577   */\n  0x00\n    /* \"#utility.yul\":8763:8771   */\n  dup3\n    /* \"#utility.yul\":8753:8793   */\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8784:8785   */\n  0x01\n    /* \"#utility.yul\":8775:8785   */\n  swap1\n  pop\n    /* \"#utility.yul\":8786:8791   */\n  jump(tag_185)\n    /* \"#utility.yul\":8753:8793   */\ntag_186:\n    /* \"#utility.yul\":8812:8816   */\n  dup2\n    /* \"#utility.yul\":8802:8838   */\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8829:8830   */\n  0x00\n    /* \"#utility.yul\":8820:8830   */\n  swap1\n  pop\n    /* \"#utility.yul\":8831:8836   */\n  jump(tag_185)\n    /* \"#utility.yul\":8802:8838   */\ntag_187:\n    /* \"#utility.yul\":8898:8902   */\n  dup2\n    /* \"#utility.yul\":8946:8947   */\n  0x01\n    /* \"#utility.yul\":8941:8968   */\n  dup2\n  eq\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8982:8983   */\n  0x02\n    /* \"#utility.yul\":8977:9168   */\n  dup2\n  eq\n  tag_190\n  jumpi\n    /* \"#utility.yul\":8891:9168   */\n  jump(tag_188)\n    /* \"#utility.yul\":8941:8968   */\ntag_189:\n    /* \"#utility.yul\":8959:8960   */\n  0x01\n    /* \"#utility.yul\":8950:8960   */\n  swap2\n  pop\n    /* \"#utility.yul\":8961:8966   */\n  pop\n  jump(tag_185)\n    /* \"#utility.yul\":8977:9168   */\ntag_190:\n    /* \"#utility.yul\":9022:9025   */\n  0xff\n    /* \"#utility.yul\":9012:9020   */\n  dup5\n    /* \"#utility.yul\":9009:9026   */\n  gt\n    /* \"#utility.yul\":9006:9049   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9029:9047   */\n  tag_192\n  tag_81\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9006:9049   */\ntag_191:\n    /* \"#utility.yul\":9078:9086   */\n  dup4\n    /* \"#utility.yul\":9075:9076   */\n  0x02\n    /* \"#utility.yul\":9071:9087   */\n  exp\n    /* \"#utility.yul\":9062:9087   */\n  swap2\n  pop\n    /* \"#utility.yul\":9113:9116   */\n  dup5\n    /* \"#utility.yul\":9106:9111   */\n  dup3\n    /* \"#utility.yul\":9103:9117   */\n  gt\n    /* \"#utility.yul\":9100:9140   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":9120:9138   */\n  tag_194\n  tag_81\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9100:9140   */\ntag_193:\n    /* \"#utility.yul\":9153:9158   */\n  pop\n  jump(tag_185)\n    /* \"#utility.yul\":8891:9168   */\ntag_188:\n  pop\n    /* \"#utility.yul\":9277:9279   */\n  0x20\n    /* \"#utility.yul\":9267:9275   */\n  dup4\n    /* \"#utility.yul\":9264:9280   */\n  lt\n    /* \"#utility.yul\":9258:9261   */\n  0x0133\n    /* \"#utility.yul\":9252:9256   */\n  dup4\n    /* \"#utility.yul\":9249:9262   */\n  lt\n    /* \"#utility.yul\":9245:9281   */\n  and\n    /* \"#utility.yul\":9227:9229   */\n  0x4e\n    /* \"#utility.yul\":9217:9225   */\n  dup5\n    /* \"#utility.yul\":9214:9230   */\n  lt\n    /* \"#utility.yul\":9209:9211   */\n  0x0b\n    /* \"#utility.yul\":9203:9207   */\n  dup5\n    /* \"#utility.yul\":9200:9212   */\n  lt\n    /* \"#utility.yul\":9196:9231   */\n  and\n    /* \"#utility.yul\":9180:9291   */\n  or\n    /* \"#utility.yul\":9177:9423   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9333:9341   */\n  dup3\n    /* \"#utility.yul\":9327:9331   */\n  dup3\n    /* \"#utility.yul\":9323:9342   */\n  exp\n    /* \"#utility.yul\":9314:9342   */\n  swap1\n  pop\n    /* \"#utility.yul\":9368:9371   */\n  dup4\n    /* \"#utility.yul\":9361:9366   */\n  dup2\n    /* \"#utility.yul\":9358:9372   */\n  gt\n    /* \"#utility.yul\":9355:9395   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9375:9393   */\n  tag_197\n  tag_81\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9355:9395   */\ntag_196:\n    /* \"#utility.yul\":9408:9413   */\n  jump(tag_185)\n    /* \"#utility.yul\":9177:9423   */\ntag_195:\n    /* \"#utility.yul\":9448:9490   */\n  tag_198\n    /* \"#utility.yul\":9486:9489   */\n  dup5\n    /* \"#utility.yul\":9476:9484   */\n  dup5\n    /* \"#utility.yul\":9470:9474   */\n  dup5\n    /* \"#utility.yul\":9467:9468   */\n  0x01\n    /* \"#utility.yul\":9448:9490   */\n  tag_83\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9433:9490   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9522:9526   */\n  dup2\n    /* \"#utility.yul\":9517:9520   */\n  dup5\n    /* \"#utility.yul\":9513:9527   */\n  div\n    /* \"#utility.yul\":9506:9511   */\n  dup2\n    /* \"#utility.yul\":9503:9528   */\n  gt\n    /* \"#utility.yul\":9500:9551   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":9531:9549   */\n  tag_200\n  tag_81\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9500:9551   */\ntag_199:\n    /* \"#utility.yul\":9580:9584   */\n  dup2\n    /* \"#utility.yul\":9573:9578   */\n  dup2\n    /* \"#utility.yul\":9569:9585   */\n  mul\n    /* \"#utility.yul\":9560:9585   */\n  swap1\n  pop\n    /* \"#utility.yul\":8518:9591   */\ntag_185:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9597:9683   */\ntag_85:\n    /* \"#utility.yul\":9632:9639   */\n  0x00\n    /* \"#utility.yul\":9672:9676   */\n  0xff\n    /* \"#utility.yul\":9665:9670   */\n  dup3\n    /* \"#utility.yul\":9661:9677   */\n  and\n    /* \"#utility.yul\":9650:9677   */\n  swap1\n  pop\n    /* \"#utility.yul\":9597:9683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9689:9970   */\ntag_23:\n    /* \"#utility.yul\":9747:9752   */\n  0x00\n    /* \"#utility.yul\":9771:9794   */\n  tag_203\n    /* \"#utility.yul\":9789:9793   */\n  dup3\n    /* \"#utility.yul\":9771:9794   */\n  tag_58\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9763:9794   */\n  swap2\n  pop\n    /* \"#utility.yul\":9815:9840   */\n  tag_204\n    /* \"#utility.yul\":9831:9839   */\n  dup4\n    /* \"#utility.yul\":9815:9840   */\n  tag_85\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9803:9840   */\n  swap3\n  pop\n    /* \"#utility.yul\":9859:9963   */\n  tag_205\n    /* \"#utility.yul\":9896:9962   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9886:9894   */\n  dup5\n    /* \"#utility.yul\":9880:9884   */\n  dup5\n    /* \"#utility.yul\":9859:9963   */\n  tag_84\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9850:9963   */\n  swap1\n  pop\n    /* \"#utility.yul\":9689:9970   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9976:10386   */\ntag_25:\n    /* \"#utility.yul\":10016:10023   */\n  0x00\n    /* \"#utility.yul\":10039:10059   */\n  tag_207\n    /* \"#utility.yul\":10057:10058   */\n  dup3\n    /* \"#utility.yul\":10039:10059   */\n  tag_58\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10034:10059   */\n  swap2\n  pop\n    /* \"#utility.yul\":10073:10093   */\n  tag_208\n    /* \"#utility.yul\":10091:10092   */\n  dup4\n    /* \"#utility.yul\":10073:10093   */\n  tag_58\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10068:10093   */\n  swap3\n  pop\n    /* \"#utility.yul\":10128:10129   */\n  dup3\n    /* \"#utility.yul\":10125:10126   */\n  dup3\n    /* \"#utility.yul\":10121:10130   */\n  mul\n    /* \"#utility.yul\":10150:10180   */\n  tag_209\n    /* \"#utility.yul\":10168:10179   */\n  dup2\n    /* \"#utility.yul\":10150:10180   */\n  tag_58\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10139:10180   */\n  swap2\n  pop\n    /* \"#utility.yul\":10329:10330   */\n  dup3\n    /* \"#utility.yul\":10320:10327   */\n  dup3\n    /* \"#utility.yul\":10316:10331   */\n  div\n    /* \"#utility.yul\":10313:10314   */\n  dup5\n    /* \"#utility.yul\":10310:10332   */\n  eq\n    /* \"#utility.yul\":10290:10291   */\n  dup4\n    /* \"#utility.yul\":10283:10292   */\n  iszero\n    /* \"#utility.yul\":10263:10346   */\n  or\n    /* \"#utility.yul\":10240:10379   */\n  tag_210\n  jumpi\n    /* \"#utility.yul\":10359:10377   */\n  tag_211\n  tag_81\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10240:10379   */\ntag_210:\n    /* \"#utility.yul\":10024:10386   */\n  pop\n    /* \"#utility.yul\":9976:10386   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10392:10583   */\ntag_42:\n    /* \"#utility.yul\":10432:10435   */\n  0x00\n    /* \"#utility.yul\":10451:10471   */\n  tag_213\n    /* \"#utility.yul\":10469:10470   */\n  dup3\n    /* \"#utility.yul\":10451:10471   */\n  tag_58\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10446:10471   */\n  swap2\n  pop\n    /* \"#utility.yul\":10485:10505   */\n  tag_214\n    /* \"#utility.yul\":10503:10504   */\n  dup4\n    /* \"#utility.yul\":10485:10505   */\n  tag_58\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10480:10505   */\n  swap3\n  pop\n    /* \"#utility.yul\":10528:10529   */\n  dup3\n    /* \"#utility.yul\":10525:10526   */\n  dup3\n    /* \"#utility.yul\":10521:10530   */\n  add\n    /* \"#utility.yul\":10514:10530   */\n  swap1\n  pop\n    /* \"#utility.yul\":10549:10552   */\n  dup1\n    /* \"#utility.yul\":10546:10547   */\n  dup3\n    /* \"#utility.yul\":10543:10553   */\n  gt\n    /* \"#utility.yul\":10540:10576   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":10556:10574   */\n  tag_216\n  tag_81\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10540:10576   */\ntag_215:\n    /* \"#utility.yul\":10392:10583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10589:10707   */\ntag_86:\n    /* \"#utility.yul\":10676:10700   */\n  tag_218\n    /* \"#utility.yul\":10694:10699   */\n  dup2\n    /* \"#utility.yul\":10676:10700   */\n  tag_58\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":10671:10674   */\n  dup3\n    /* \"#utility.yul\":10664:10701   */\n  mstore\n    /* \"#utility.yul\":10589:10707   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10713:11155   */\ntag_46:\n    /* \"#utility.yul\":10862:10866   */\n  0x00\n    /* \"#utility.yul\":10900:10902   */\n  0x60\n    /* \"#utility.yul\":10889:10898   */\n  dup3\n    /* \"#utility.yul\":10885:10903   */\n  add\n    /* \"#utility.yul\":10877:10903   */\n  swap1\n  pop\n    /* \"#utility.yul\":10913:10984   */\n  tag_220\n    /* \"#utility.yul\":10981:10982   */\n  0x00\n    /* \"#utility.yul\":10970:10979   */\n  dup4\n    /* \"#utility.yul\":10966:10983   */\n  add\n    /* \"#utility.yul\":10957:10963   */\n  dup7\n    /* \"#utility.yul\":10913:10984   */\n  tag_80\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10994:11066   */\n  tag_221\n    /* \"#utility.yul\":11062:11064   */\n  0x20\n    /* \"#utility.yul\":11051:11060   */\n  dup4\n    /* \"#utility.yul\":11047:11065   */\n  add\n    /* \"#utility.yul\":11038:11044   */\n  dup6\n    /* \"#utility.yul\":10994:11066   */\n  tag_86\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11076:11148   */\n  tag_222\n    /* \"#utility.yul\":11144:11146   */\n  0x40\n    /* \"#utility.yul\":11133:11142   */\n  dup4\n    /* \"#utility.yul\":11129:11147   */\n  add\n    /* \"#utility.yul\":11120:11126   */\n  dup5\n    /* \"#utility.yul\":11076:11148   */\n  tag_86\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10713:11155   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11161:11383   */\ntag_50:\n    /* \"#utility.yul\":11254:11258   */\n  0x00\n    /* \"#utility.yul\":11292:11294   */\n  0x20\n    /* \"#utility.yul\":11281:11290   */\n  dup3\n    /* \"#utility.yul\":11277:11295   */\n  add\n    /* \"#utility.yul\":11269:11295   */\n  swap1\n  pop\n    /* \"#utility.yul\":11305:11376   */\n  tag_224\n    /* \"#utility.yul\":11373:11374   */\n  0x00\n    /* \"#utility.yul\":11362:11371   */\n  dup4\n    /* \"#utility.yul\":11358:11375   */\n  add\n    /* \"#utility.yul\":11349:11355   */\n  dup5\n    /* \"#utility.yul\":11305:11376   */\n  tag_86\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11161:11383   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/reward.sol\":235:3216  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\ntag_30:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcc1cf32daa775edd624f71ddb0d100d39c31c65becb67e6d2e7789fa58c10fe0\")\n  0x00\n  assignImmutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/reward.sol\":235:3216  contract RewardToken is ERC20, ERC2771Context, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xae169a50\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb921e163\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xff010f5b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7da0a877\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x301aecb9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x572b6c05\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1bfdcd9d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reward.sol\":2891:3213  function decreaseMyTokenPublic(address user_address, uint256 amount) public {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reward.sol\":2536:2883  function decreaseMyToken(uint256 amount) public {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reward.sol\":1325:1529  function isTrustedForwarder(address forwarder)... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reward.sol\":1847:2190  function claimReward(uint256 amount) public {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/reward.sol\":1664:1839  function increaseSupply(uint256 amount) public onlyOwner {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/reward.sol\":2198:2528  function claimRewardPublic(address user_address, uint256 amount) public onlyOwner {... */\n    tag_21:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/reward.sol\":2891:3213  function decreaseMyTokenPublic(address user_address, uint256 amount) public {... */\n    tag_41:\n        /* \"contracts/reward.sol\":3010:3011  0 */\n      0x00\n        /* \"contracts/reward.sol\":2986:3012  user_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/reward.sol\":2986:2998  user_address */\n      dup3\n        /* \"contracts/reward.sol\":2986:3012  user_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/reward.sol\":2978:3054  require(user_address != address(0), \"New wallet cannot be the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/reward.sol\":3065:3079  address sender */\n      0x00\n        /* \"contracts/reward.sol\":3082:3092  msg.sender */\n      caller\n        /* \"contracts/reward.sol\":3065:3092  address sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":3105:3125  uint256 rewardAmount */\n      0x00\n        /* \"contracts/reward.sol\":3128:3149  convertAmount(amount) */\n      tag_114\n        /* \"contracts/reward.sol\":3142:3148  amount */\n      dup4\n        /* \"contracts/reward.sol\":3128:3141  convertAmount */\n      tag_115\n        /* \"contracts/reward.sol\":3128:3149  convertAmount(amount) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/reward.sol\":3105:3149  uint256 rewardAmount = convertAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":3160:3205  _transfer(user_address, sender, rewardAmount) */\n      tag_116\n        /* \"contracts/reward.sol\":3170:3182  user_address */\n      dup5\n        /* \"contracts/reward.sol\":3184:3190  sender */\n      dup4\n        /* \"contracts/reward.sol\":3192:3204  rewardAmount */\n      dup4\n        /* \"contracts/reward.sol\":3160:3169  _transfer */\n      tag_117\n        /* \"contracts/reward.sol\":3160:3205  _transfer(user_address, sender, rewardAmount) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/reward.sol\":2967:3213  {... */\n      pop\n      pop\n        /* \"contracts/reward.sol\":2891:3213  function decreaseMyTokenPublic(address user_address, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":2536:2883  function decreaseMyToken(uint256 amount) public {... */\n    tag_50:\n        /* \"contracts/reward.sol\":2617:2647  isTrustedForwarder(msg.sender) */\n      tag_124\n        /* \"contracts/reward.sol\":2636:2646  msg.sender */\n      caller\n        /* \"contracts/reward.sol\":2617:2635  isTrustedForwarder */\n      tag_58\n        /* \"contracts/reward.sol\":2617:2647  isTrustedForwarder(msg.sender) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/reward.sol\":2617:2674  isTrustedForwarder(msg.sender) || _msgSender() == owner() */\n      dup1\n      tag_125\n      jumpi\n      pop\n        /* \"contracts/reward.sol\":2667:2674  owner() */\n      tag_126\n        /* \"contracts/reward.sol\":2667:2672  owner */\n      tag_71\n        /* \"contracts/reward.sol\":2667:2674  owner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/reward.sol\":2651:2674  _msgSender() == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/reward.sol\":2651:2663  _msgSender() */\n      tag_127\n        /* \"contracts/reward.sol\":2651:2661  _msgSender */\n      tag_106\n        /* \"contracts/reward.sol\":2651:2663  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/reward.sol\":2651:2674  _msgSender() == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/reward.sol\":2617:2674  isTrustedForwarder(msg.sender) || _msgSender() == owner() */\n    tag_125:\n        /* \"contracts/reward.sol\":2595:2761  require(... */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/reward.sol\":2774:2794  uint256 rewardAmount */\n      0x00\n        /* \"contracts/reward.sol\":2797:2818  convertAmount(amount) */\n      tag_131\n        /* \"contracts/reward.sol\":2811:2817  amount */\n      dup3\n        /* \"contracts/reward.sol\":2797:2810  convertAmount */\n      tag_115\n        /* \"contracts/reward.sol\":2797:2818  convertAmount(amount) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/reward.sol\":2774:2818  uint256 rewardAmount = convertAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":2829:2875  _transfer(_msgSender(), owner(), rewardAmount) */\n      tag_132\n        /* \"contracts/reward.sol\":2839:2851  _msgSender() */\n      tag_133\n        /* \"contracts/reward.sol\":2839:2849  _msgSender */\n      tag_106\n        /* \"contracts/reward.sol\":2839:2851  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/reward.sol\":2853:2860  owner() */\n      tag_134\n        /* \"contracts/reward.sol\":2853:2858  owner */\n      tag_71\n        /* \"contracts/reward.sol\":2853:2860  owner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/reward.sol\":2862:2874  rewardAmount */\n      dup4\n        /* \"contracts/reward.sol\":2829:2838  _transfer */\n      tag_117\n        /* \"contracts/reward.sol\":2829:2875  _transfer(_msgSender(), owner(), rewardAmount) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/reward.sol\":2584:2883  {... */\n      pop\n        /* \"contracts/reward.sol\":2536:2883  function decreaseMyToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/reward.sol\":1325:1529  function isTrustedForwarder(address forwarder)... */\n    tag_58:\n        /* \"contracts/reward.sol\":1456:1460  bool */\n      0x00\n        /* \"contracts/reward.sol\":1486:1521  super.isTrustedForwarder(forwarder) */\n      tag_137\n        /* \"contracts/reward.sol\":1511:1520  forwarder */\n      dup3\n        /* \"contracts/reward.sol\":1486:1510  super.isTrustedForwarder */\n      tag_138\n        /* \"contracts/reward.sol\":1486:1521  super.isTrustedForwarder(forwarder) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/reward.sol\":1479:1521  return super.isTrustedForwarder(forwarder) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":1325:1529  function isTrustedForwarder(address forwarder)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1681:1688  address */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1707:1724  _trustedForwarder */\n      immutable(\"0x676d59fa2ffd6582a027f46129ae51e30d87ee3393d1d463bdc959072b6c2109\")\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1700:1724  return _trustedForwarder */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1624:1731  function trustedForwarder() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_99\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_99\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":1847:2190  function claimReward(uint256 amount) public {... */\n    tag_82:\n        /* \"contracts/reward.sol\":1924:1954  isTrustedForwarder(msg.sender) */\n      tag_158\n        /* \"contracts/reward.sol\":1943:1953  msg.sender */\n      caller\n        /* \"contracts/reward.sol\":1924:1942  isTrustedForwarder */\n      tag_58\n        /* \"contracts/reward.sol\":1924:1954  isTrustedForwarder(msg.sender) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/reward.sol\":1924:1981  isTrustedForwarder(msg.sender) || _msgSender() == owner() */\n      dup1\n      tag_159\n      jumpi\n      pop\n        /* \"contracts/reward.sol\":1974:1981  owner() */\n      tag_160\n        /* \"contracts/reward.sol\":1974:1979  owner */\n      tag_71\n        /* \"contracts/reward.sol\":1974:1981  owner() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/reward.sol\":1958:1981  _msgSender() == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/reward.sol\":1958:1970  _msgSender() */\n      tag_161\n        /* \"contracts/reward.sol\":1958:1968  _msgSender */\n      tag_106\n        /* \"contracts/reward.sol\":1958:1970  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/reward.sol\":1958:1981  _msgSender() == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/reward.sol\":1924:1981  isTrustedForwarder(msg.sender) || _msgSender() == owner() */\n    tag_159:\n        /* \"contracts/reward.sol\":1902:2068  require(... */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_130\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/reward.sol\":2081:2101  uint256 rewardAmount */\n      0x00\n        /* \"contracts/reward.sol\":2104:2125  convertAmount(amount) */\n      tag_164\n        /* \"contracts/reward.sol\":2118:2124  amount */\n      dup3\n        /* \"contracts/reward.sol\":2104:2117  convertAmount */\n      tag_115\n        /* \"contracts/reward.sol\":2104:2125  convertAmount(amount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/reward.sol\":2081:2125  uint256 rewardAmount = convertAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":2136:2182  _transfer(owner(), _msgSender(), rewardAmount) */\n      tag_165\n        /* \"contracts/reward.sol\":2146:2153  owner() */\n      tag_166\n        /* \"contracts/reward.sol\":2146:2151  owner */\n      tag_71\n        /* \"contracts/reward.sol\":2146:2153  owner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/reward.sol\":2155:2167  _msgSender() */\n      tag_167\n        /* \"contracts/reward.sol\":2155:2165  _msgSender */\n      tag_106\n        /* \"contracts/reward.sol\":2155:2167  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/reward.sol\":2169:2181  rewardAmount */\n      dup4\n        /* \"contracts/reward.sol\":2136:2145  _transfer */\n      tag_117\n        /* \"contracts/reward.sol\":2136:2182  _transfer(owner(), _msgSender(), rewardAmount) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/reward.sol\":1891:2190  {... */\n      pop\n        /* \"contracts/reward.sol\":1847:2190  function claimReward(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":1664:1839  function increaseSupply(uint256 amount) public onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/reward.sol\":1732:1760  uint256 amountInSmallestUnit */\n      0x00\n        /* \"contracts/reward.sol\":1763:1784  convertAmount(amount) */\n      tag_171\n        /* \"contracts/reward.sol\":1777:1783  amount */\n      dup3\n        /* \"contracts/reward.sol\":1763:1776  convertAmount */\n      tag_115\n        /* \"contracts/reward.sol\":1763:1784  convertAmount(amount) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/reward.sol\":1732:1784  uint256 amountInSmallestUnit = convertAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":1795:1831  _mint(owner(), amountInSmallestUnit) */\n      tag_172\n        /* \"contracts/reward.sol\":1801:1808  owner() */\n      tag_173\n        /* \"contracts/reward.sol\":1801:1806  owner */\n      tag_71\n        /* \"contracts/reward.sol\":1801:1808  owner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/reward.sol\":1810:1830  amountInSmallestUnit */\n      dup3\n        /* \"contracts/reward.sol\":1795:1800  _mint */\n      tag_174\n        /* \"contracts/reward.sol\":1795:1831  _mint(owner(), amountInSmallestUnit) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/reward.sol\":1721:1839  {... */\n      pop\n        /* \"contracts/reward.sol\":1664:1839  function increaseSupply(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":2198:2528  function claimRewardPublic(address user_address, uint256 amount) public onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/reward.sol\":2323:2324  0 */\n      0x00\n        /* \"contracts/reward.sol\":2299:2325  user_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/reward.sol\":2299:2311  user_address */\n      dup3\n        /* \"contracts/reward.sol\":2299:2325  user_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/reward.sol\":2291:2367  require(user_address != address(0), \"New wallet cannot be the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_113\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/reward.sol\":2378:2392  address sender */\n      0x00\n        /* \"contracts/reward.sol\":2395:2405  msg.sender */\n      caller\n        /* \"contracts/reward.sol\":2378:2405  address sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":2418:2438  uint256 rewardAmount */\n      0x00\n        /* \"contracts/reward.sol\":2441:2462  convertAmount(amount) */\n      tag_187\n        /* \"contracts/reward.sol\":2455:2461  amount */\n      dup4\n        /* \"contracts/reward.sol\":2441:2454  convertAmount */\n      tag_115\n        /* \"contracts/reward.sol\":2441:2462  convertAmount(amount) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/reward.sol\":2418:2462  uint256 rewardAmount = convertAmount(amount) */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":2475:2520  _transfer(sender, user_address, rewardAmount) */\n      tag_188\n        /* \"contracts/reward.sol\":2485:2491  sender */\n      dup3\n        /* \"contracts/reward.sol\":2493:2505  user_address */\n      dup6\n        /* \"contracts/reward.sol\":2507:2519  rewardAmount */\n      dup4\n        /* \"contracts/reward.sol\":2475:2484  _transfer */\n      tag_117\n        /* \"contracts/reward.sol\":2475:2520  _transfer(sender, user_address, rewardAmount) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/reward.sol\":2280:2528  {... */\n      pop\n      pop\n        /* \"contracts/reward.sol\":2198:2528  function claimRewardPublic(address user_address, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":950:1128  function _msgSender() ... */\n    tag_106:\n        /* \"contracts/reward.sol\":1069:1076  address */\n      0x00\n        /* \"contracts/reward.sol\":1102:1120  super._msgSender() */\n      tag_190\n        /* \"contracts/reward.sol\":1102:1118  super._msgSender */\n      tag_191\n        /* \"contracts/reward.sol\":1102:1120  super._msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/reward.sol\":1095:1120  return super._msgSender() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":950:1128  function _msgSender() ... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":1537:1656  function convertAmount(uint256 amount) private view returns (uint256) {... */\n    tag_115:\n        /* \"contracts/reward.sol\":1598:1605  uint256 */\n      0x00\n        /* \"contracts/reward.sol\":1638:1648  decimals() */\n      tag_196\n        /* \"contracts/reward.sol\":1638:1646  decimals */\n      tag_52\n        /* \"contracts/reward.sol\":1638:1648  decimals() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/reward.sol\":1634:1636  10 */\n      0x0a\n        /* \"contracts/reward.sol\":1634:1648  10**decimals() */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"contracts/reward.sol\":1625:1631  amount */\n      dup3\n        /* \"contracts/reward.sol\":1625:1648  amount * 10**decimals() */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/reward.sol\":1618:1648  return amount * 10**decimals() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":1537:1656  function convertAmount(uint256 amount) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1908:1912  bool */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1962  trustedForwarder() */\n      tag_216\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1960  trustedForwarder */\n      tag_67\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1944:1962  trustedForwarder() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1940  forwarder */\n      dup3\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1931:1962  forwarder == trustedForwarder() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1924:1962  return forwarder == trustedForwarder() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":1832:1969  function isTrustedForwarder(address forwarder) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2677  function _msgSender() internal view virtual override returns (address) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2268:2275  address */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2287:2309  uint256 calldataLength */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2312:2320  msg.data */\n      0x00\n      calldatasize\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2312:2327  msg.data.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2287:2327  uint256 calldataLength = msg.data.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2337:2364  uint256 contextSuffixLength */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2367:2389  _contextSuffixLength() */\n      tag_229\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2367:2387  _contextSuffixLength */\n      tag_230\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2367:2389  _contextSuffixLength() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2337:2389  uint256 contextSuffixLength = _contextSuffixLength() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2421:2440  contextSuffixLength */\n      dup1\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2417  calldataLength */\n      dup3\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2440  calldataLength >= contextSuffixLength */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender) */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2444:2474  isTrustedForwarder(msg.sender) */\n      tag_232\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2463:2473  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2444:2462  isTrustedForwarder */\n      tag_58\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2444:2474  isTrustedForwarder(msg.sender) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2403:2474  calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender) */\n    tag_231:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2671  if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2541:2549  msg.data */\n      0x00\n      calldatasize\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2567:2586  contextSuffixLength */\n      dup3\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2550:2564  calldataLength */\n      dup5\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2550:2586  calldataLength - contextSuffixLength */\n      sub\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2541:2588  msg.data[calldataLength - contextSuffixLength:] */\n      swap1\n      dup1\n      swap3\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2533:2589  bytes20(msg.data[calldataLength - contextSuffixLength:]) */\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2525:2590  address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n      0x60\n      shr\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2518:2590  return address(bytes20(msg.data[calldataLength - contextSuffixLength:])) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_228)\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2399:2671  if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2642:2660  super._msgSender() */\n      tag_239\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2642:2658  super._msgSender */\n      tag_240\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2642:2660  super._msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2635:2660  return super._msgSender() */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":2206:2677  function _msgSender() internal view virtual override returns (address) {... */\n    tag_228:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_247\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_252)\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_256)\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reward.sol\":744:942  function _contextSuffixLength() ... */\n    tag_230:\n        /* \"contracts/reward.sol\":873:880  uint256 */\n      0x00\n        /* \"contracts/reward.sol\":906:934  super._contextSuffixLength() */\n      tag_259\n        /* \"contracts/reward.sol\":906:932  super._contextSuffixLength */\n      tag_260\n        /* \"contracts/reward.sol\":906:934  super._contextSuffixLength() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/reward.sol\":899:934  return super._contextSuffixLength() */\n      swap1\n      pop\n        /* \"contracts/reward.sol\":744:942  function _contextSuffixLength() ... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3469:3576  function _contextSuffixLength() internal view virtual override returns (uint256) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3541:3548  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3567:3569  20 */\n      0x14\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3560:3569  return 20 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/metatx/ERC2771Context.sol\":3469:3576  function _contextSuffixLength() internal view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_263:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_264:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_265:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_266:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_267:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_305\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_263\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":711:782   */\n      tag_306\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_264\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_307\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_265\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":881:910   */\n      tag_308\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_266\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_28:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_310\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_267\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_269:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_271:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_272:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_316\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_271\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_273:\n        /* \"#utility.yul\":1876:1900   */\n      tag_318\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_272\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_319:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_274:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_321\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_273\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_275:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_276:\n        /* \"#utility.yul\":2232:2256   */\n      tag_324\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_275\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_325:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_277:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_327\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_276\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_31:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_330\n      tag_269\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2525:2644   */\n    tag_329:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_331\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_274\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_332\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_277\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_278:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_279:\n        /* \"#utility.yul\":3089:3110   */\n      tag_335\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_278\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_34:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_337\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_279\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_280:\n        /* \"#utility.yul\":3426:3450   */\n      tag_339\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_275\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_38:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_341\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_280\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_44:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_344\n      tag_269\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3801:3920   */\n    tag_343:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_345\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_274\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_346\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_274\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_347\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_277\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_49:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_350\n      tag_269\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4392:4511   */\n    tag_349:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_351\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_277\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_281:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_282:\n        /* \"#utility.yul\":4826:4848   */\n      tag_354\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_281\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_54:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_356\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_282\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_57:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_359\n      tag_269\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5157:5276   */\n    tag_358:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_360\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_274\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_283:\n        /* \"#utility.yul\":5503:5527   */\n      tag_362\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_272\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_69:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_364\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_283\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_88:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_367\n      tag_269\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5861:5980   */\n    tag_366:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_368\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_274\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_369\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_274\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_284:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_99:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_372:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_374\n      tag_284\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6664:6748   */\n    tag_373:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6984   */\n    tag_285:\n        /* \"#utility.yul\":6900:6934   */\n      0x4e65772077616c6c65742063616e6e6f7420626520746865207a65726f206164\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6935   */\n      mstore\n        /* \"#utility.yul\":6969:6976   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6964:6966   */\n      0x20\n        /* \"#utility.yul\":6956:6962   */\n      dup3\n        /* \"#utility.yul\":6952:6967   */\n      add\n        /* \"#utility.yul\":6945:6977   */\n      mstore\n        /* \"#utility.yul\":6760:6984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6990:7356   */\n    tag_286:\n        /* \"#utility.yul\":7132:7135   */\n      0x00\n        /* \"#utility.yul\":7153:7220   */\n      tag_377\n        /* \"#utility.yul\":7217:7219   */\n      0x25\n        /* \"#utility.yul\":7212:7215   */\n      dup4\n        /* \"#utility.yul\":7153:7220   */\n      tag_264\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7146:7220   */\n      swap2\n      pop\n        /* \"#utility.yul\":7229:7322   */\n      tag_378\n        /* \"#utility.yul\":7318:7321   */\n      dup3\n        /* \"#utility.yul\":7229:7322   */\n      tag_285\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7347:7349   */\n      0x40\n        /* \"#utility.yul\":7342:7345   */\n      dup3\n        /* \"#utility.yul\":7338:7350   */\n      add\n        /* \"#utility.yul\":7331:7350   */\n      swap1\n      pop\n        /* \"#utility.yul\":6990:7356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7362:7781   */\n    tag_113:\n        /* \"#utility.yul\":7528:7532   */\n      0x00\n        /* \"#utility.yul\":7566:7568   */\n      0x20\n        /* \"#utility.yul\":7555:7564   */\n      dup3\n        /* \"#utility.yul\":7551:7569   */\n      add\n        /* \"#utility.yul\":7543:7569   */\n      swap1\n      pop\n        /* \"#utility.yul\":7615:7624   */\n      dup2\n        /* \"#utility.yul\":7609:7613   */\n      dup2\n        /* \"#utility.yul\":7605:7625   */\n      sub\n        /* \"#utility.yul\":7601:7602   */\n      0x00\n        /* \"#utility.yul\":7590:7599   */\n      dup4\n        /* \"#utility.yul\":7586:7603   */\n      add\n        /* \"#utility.yul\":7579:7626   */\n      mstore\n        /* \"#utility.yul\":7643:7774   */\n      tag_380\n        /* \"#utility.yul\":7769:7773   */\n      dup2\n        /* \"#utility.yul\":7643:7774   */\n      tag_286\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7635:7774   */\n      swap1\n      pop\n        /* \"#utility.yul\":7362:7781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7787:8032   */\n    tag_287:\n        /* \"#utility.yul\":7927:7961   */\n      0x526577617264546f6b656e3a204d757374207573652061205472757374656420\n        /* \"#utility.yul\":7923:7924   */\n      0x00\n        /* \"#utility.yul\":7915:7921   */\n      dup3\n        /* \"#utility.yul\":7911:7925   */\n      add\n        /* \"#utility.yul\":7904:7962   */\n      mstore\n        /* \"#utility.yul\":7996:8024   */\n      0x466f72776172646572206f7220626520746865204f776e65722e000000000000\n        /* \"#utility.yul\":7991:7993   */\n      0x20\n        /* \"#utility.yul\":7983:7989   */\n      dup3\n        /* \"#utility.yul\":7979:7994   */\n      add\n        /* \"#utility.yul\":7972:8025   */\n      mstore\n        /* \"#utility.yul\":7787:8032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8038:8404   */\n    tag_288:\n        /* \"#utility.yul\":8180:8183   */\n      0x00\n        /* \"#utility.yul\":8201:8268   */\n      tag_383\n        /* \"#utility.yul\":8265:8267   */\n      0x3a\n        /* \"#utility.yul\":8260:8263   */\n      dup4\n        /* \"#utility.yul\":8201:8268   */\n      tag_264\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8194:8268   */\n      swap2\n      pop\n        /* \"#utility.yul\":8277:8370   */\n      tag_384\n        /* \"#utility.yul\":8366:8369   */\n      dup3\n        /* \"#utility.yul\":8277:8370   */\n      tag_287\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8395:8397   */\n      0x40\n        /* \"#utility.yul\":8390:8393   */\n      dup3\n        /* \"#utility.yul\":8386:8398   */\n      add\n        /* \"#utility.yul\":8379:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8038:8404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8410:8829   */\n    tag_130:\n        /* \"#utility.yul\":8576:8580   */\n      0x00\n        /* \"#utility.yul\":8614:8616   */\n      0x20\n        /* \"#utility.yul\":8603:8612   */\n      dup3\n        /* \"#utility.yul\":8599:8617   */\n      add\n        /* \"#utility.yul\":8591:8617   */\n      swap1\n      pop\n        /* \"#utility.yul\":8663:8672   */\n      dup2\n        /* \"#utility.yul\":8657:8661   */\n      dup2\n        /* \"#utility.yul\":8653:8673   */\n      sub\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8638:8647   */\n      dup4\n        /* \"#utility.yul\":8634:8651   */\n      add\n        /* \"#utility.yul\":8627:8674   */\n      mstore\n        /* \"#utility.yul\":8691:8822   */\n      tag_386\n        /* \"#utility.yul\":8817:8821   */\n      dup2\n        /* \"#utility.yul\":8691:8822   */\n      tag_288\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8683:8822   */\n      swap1\n      pop\n        /* \"#utility.yul\":8410:8829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8835:9015   */\n    tag_289:\n        /* \"#utility.yul\":8883:8960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8880:8881   */\n      0x00\n        /* \"#utility.yul\":8873:8961   */\n      mstore\n        /* \"#utility.yul\":8980:8984   */\n      0x11\n        /* \"#utility.yul\":8977:8978   */\n      0x04\n        /* \"#utility.yul\":8970:8985   */\n      mstore\n        /* \"#utility.yul\":9004:9008   */\n      0x24\n        /* \"#utility.yul\":9001:9002   */\n      0x00\n        /* \"#utility.yul\":8994:9009   */\n      revert\n        /* \"#utility.yul\":9021:9123   */\n    tag_290:\n        /* \"#utility.yul\":9063:9071   */\n      0x00\n        /* \"#utility.yul\":9110:9115   */\n      dup2\n        /* \"#utility.yul\":9107:9108   */\n      0x01\n        /* \"#utility.yul\":9103:9116   */\n      shr\n        /* \"#utility.yul\":9082:9116   */\n      swap1\n      pop\n        /* \"#utility.yul\":9021:9123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9977   */\n    tag_291:\n        /* \"#utility.yul\":9190:9195   */\n      0x00\n        /* \"#utility.yul\":9197:9201   */\n      0x00\n        /* \"#utility.yul\":9221:9227   */\n      dup3\n        /* \"#utility.yul\":9212:9227   */\n      swap2\n      pop\n        /* \"#utility.yul\":9245:9250   */\n      dup4\n        /* \"#utility.yul\":9236:9250   */\n      swap1\n      pop\n        /* \"#utility.yul\":9259:9971   */\n    tag_390:\n        /* \"#utility.yul\":9280:9281   */\n      0x01\n        /* \"#utility.yul\":9270:9278   */\n      dup6\n        /* \"#utility.yul\":9267:9282   */\n      gt\n        /* \"#utility.yul\":9259:9971   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":9375:9379   */\n      dup1\n        /* \"#utility.yul\":9370:9373   */\n      dup7\n        /* \"#utility.yul\":9366:9380   */\n      div\n        /* \"#utility.yul\":9360:9364   */\n      dup2\n        /* \"#utility.yul\":9357:9381   */\n      gt\n        /* \"#utility.yul\":9354:9404   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":9384:9402   */\n      tag_394\n      tag_289\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9354:9404   */\n    tag_393:\n        /* \"#utility.yul\":9434:9435   */\n      0x01\n        /* \"#utility.yul\":9424:9432   */\n      dup6\n        /* \"#utility.yul\":9420:9436   */\n      and\n        /* \"#utility.yul\":9417:9868   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":9849:9853   */\n      dup1\n        /* \"#utility.yul\":9842:9847   */\n      dup3\n        /* \"#utility.yul\":9838:9854   */\n      mul\n        /* \"#utility.yul\":9829:9854   */\n      swap2\n      pop\n        /* \"#utility.yul\":9417:9868   */\n    tag_395:\n        /* \"#utility.yul\":9899:9903   */\n      dup1\n        /* \"#utility.yul\":9893:9897   */\n      dup2\n        /* \"#utility.yul\":9889:9904   */\n      mul\n        /* \"#utility.yul\":9881:9904   */\n      swap1\n      pop\n        /* \"#utility.yul\":9929:9961   */\n      tag_396\n        /* \"#utility.yul\":9952:9960   */\n      dup6\n        /* \"#utility.yul\":9929:9961   */\n      tag_290\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9917:9961   */\n      swap5\n      pop\n        /* \"#utility.yul\":9259:9971   */\n      jump(tag_390)\n    tag_392:\n        /* \"#utility.yul\":9129:9977   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9983:11056   */\n    tag_292:\n        /* \"#utility.yul\":10037:10042   */\n      0x00\n        /* \"#utility.yul\":10228:10236   */\n      dup3\n        /* \"#utility.yul\":10218:10258   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":10249:10250   */\n      0x01\n        /* \"#utility.yul\":10240:10250   */\n      swap1\n      pop\n        /* \"#utility.yul\":10251:10256   */\n      jump(tag_397)\n        /* \"#utility.yul\":10218:10258   */\n    tag_398:\n        /* \"#utility.yul\":10277:10281   */\n      dup2\n        /* \"#utility.yul\":10267:10303   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":10294:10295   */\n      0x00\n        /* \"#utility.yul\":10285:10295   */\n      swap1\n      pop\n        /* \"#utility.yul\":10296:10301   */\n      jump(tag_397)\n        /* \"#utility.yul\":10267:10303   */\n    tag_399:\n        /* \"#utility.yul\":10363:10367   */\n      dup2\n        /* \"#utility.yul\":10411:10412   */\n      0x01\n        /* \"#utility.yul\":10406:10433   */\n      dup2\n      eq\n      tag_401\n      jumpi\n        /* \"#utility.yul\":10447:10448   */\n      0x02\n        /* \"#utility.yul\":10442:10633   */\n      dup2\n      eq\n      tag_402\n      jumpi\n        /* \"#utility.yul\":10356:10633   */\n      jump(tag_400)\n        /* \"#utility.yul\":10406:10433   */\n    tag_401:\n        /* \"#utility.yul\":10424:10425   */\n      0x01\n        /* \"#utility.yul\":10415:10425   */\n      swap2\n      pop\n        /* \"#utility.yul\":10426:10431   */\n      pop\n      jump(tag_397)\n        /* \"#utility.yul\":10442:10633   */\n    tag_402:\n        /* \"#utility.yul\":10487:10490   */\n      0xff\n        /* \"#utility.yul\":10477:10485   */\n      dup5\n        /* \"#utility.yul\":10474:10491   */\n      gt\n        /* \"#utility.yul\":10471:10514   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10494:10512   */\n      tag_404\n      tag_289\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":10471:10514   */\n    tag_403:\n        /* \"#utility.yul\":10543:10551   */\n      dup4\n        /* \"#utility.yul\":10540:10541   */\n      0x02\n        /* \"#utility.yul\":10536:10552   */\n      exp\n        /* \"#utility.yul\":10527:10552   */\n      swap2\n      pop\n        /* \"#utility.yul\":10578:10581   */\n      dup5\n        /* \"#utility.yul\":10571:10576   */\n      dup3\n        /* \"#utility.yul\":10568:10582   */\n      gt\n        /* \"#utility.yul\":10565:10605   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":10585:10603   */\n      tag_406\n      tag_289\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10565:10605   */\n    tag_405:\n        /* \"#utility.yul\":10618:10623   */\n      pop\n      jump(tag_397)\n        /* \"#utility.yul\":10356:10633   */\n    tag_400:\n      pop\n        /* \"#utility.yul\":10742:10744   */\n      0x20\n        /* \"#utility.yul\":10732:10740   */\n      dup4\n        /* \"#utility.yul\":10729:10745   */\n      lt\n        /* \"#utility.yul\":10723:10726   */\n      0x0133\n        /* \"#utility.yul\":10717:10721   */\n      dup4\n        /* \"#utility.yul\":10714:10727   */\n      lt\n        /* \"#utility.yul\":10710:10746   */\n      and\n        /* \"#utility.yul\":10692:10694   */\n      0x4e\n        /* \"#utility.yul\":10682:10690   */\n      dup5\n        /* \"#utility.yul\":10679:10695   */\n      lt\n        /* \"#utility.yul\":10674:10676   */\n      0x0b\n        /* \"#utility.yul\":10668:10672   */\n      dup5\n        /* \"#utility.yul\":10665:10677   */\n      lt\n        /* \"#utility.yul\":10661:10696   */\n      and\n        /* \"#utility.yul\":10645:10756   */\n      or\n        /* \"#utility.yul\":10642:10888   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":10798:10806   */\n      dup3\n        /* \"#utility.yul\":10792:10796   */\n      dup3\n        /* \"#utility.yul\":10788:10807   */\n      exp\n        /* \"#utility.yul\":10779:10807   */\n      swap1\n      pop\n        /* \"#utility.yul\":10833:10836   */\n      dup4\n        /* \"#utility.yul\":10826:10831   */\n      dup2\n        /* \"#utility.yul\":10823:10837   */\n      gt\n        /* \"#utility.yul\":10820:10860   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":10840:10858   */\n      tag_409\n      tag_289\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10820:10860   */\n    tag_408:\n        /* \"#utility.yul\":10873:10878   */\n      jump(tag_397)\n        /* \"#utility.yul\":10642:10888   */\n    tag_407:\n        /* \"#utility.yul\":10913:10955   */\n      tag_410\n        /* \"#utility.yul\":10951:10954   */\n      dup5\n        /* \"#utility.yul\":10941:10949   */\n      dup5\n        /* \"#utility.yul\":10935:10939   */\n      dup5\n        /* \"#utility.yul\":10932:10933   */\n      0x01\n        /* \"#utility.yul\":10913:10955   */\n      tag_291\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10898:10955   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10987:10991   */\n      dup2\n        /* \"#utility.yul\":10982:10985   */\n      dup5\n        /* \"#utility.yul\":10978:10992   */\n      div\n        /* \"#utility.yul\":10971:10976   */\n      dup2\n        /* \"#utility.yul\":10968:10993   */\n      gt\n        /* \"#utility.yul\":10965:11016   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10996:11014   */\n      tag_412\n      tag_289\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10965:11016   */\n    tag_411:\n        /* \"#utility.yul\":11045:11049   */\n      dup2\n        /* \"#utility.yul\":11038:11043   */\n      dup2\n        /* \"#utility.yul\":11034:11050   */\n      mul\n        /* \"#utility.yul\":11025:11050   */\n      swap1\n      pop\n        /* \"#utility.yul\":9983:11056   */\n    tag_397:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11062:11343   */\n    tag_198:\n        /* \"#utility.yul\":11120:11125   */\n      0x00\n        /* \"#utility.yul\":11144:11167   */\n      tag_414\n        /* \"#utility.yul\":11162:11166   */\n      dup3\n        /* \"#utility.yul\":11144:11167   */\n      tag_275\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11136:11167   */\n      swap2\n      pop\n        /* \"#utility.yul\":11188:11213   */\n      tag_415\n        /* \"#utility.yul\":11204:11212   */\n      dup4\n        /* \"#utility.yul\":11188:11213   */\n      tag_281\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11176:11213   */\n      swap3\n      pop\n        /* \"#utility.yul\":11232:11336   */\n      tag_416\n        /* \"#utility.yul\":11269:11335   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11259:11267   */\n      dup5\n        /* \"#utility.yul\":11253:11257   */\n      dup5\n        /* \"#utility.yul\":11232:11336   */\n      tag_292\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11223:11336   */\n      swap1\n      pop\n        /* \"#utility.yul\":11062:11343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11349:11759   */\n    tag_200:\n        /* \"#utility.yul\":11389:11396   */\n      0x00\n        /* \"#utility.yul\":11412:11432   */\n      tag_418\n        /* \"#utility.yul\":11430:11431   */\n      dup3\n        /* \"#utility.yul\":11412:11432   */\n      tag_275\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11407:11432   */\n      swap2\n      pop\n        /* \"#utility.yul\":11446:11466   */\n      tag_419\n        /* \"#utility.yul\":11464:11465   */\n      dup4\n        /* \"#utility.yul\":11446:11466   */\n      tag_275\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11441:11466   */\n      swap3\n      pop\n        /* \"#utility.yul\":11501:11502   */\n      dup3\n        /* \"#utility.yul\":11498:11499   */\n      dup3\n        /* \"#utility.yul\":11494:11503   */\n      mul\n        /* \"#utility.yul\":11523:11553   */\n      tag_420\n        /* \"#utility.yul\":11541:11552   */\n      dup2\n        /* \"#utility.yul\":11523:11553   */\n      tag_275\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11512:11553   */\n      swap2\n      pop\n        /* \"#utility.yul\":11702:11703   */\n      dup3\n        /* \"#utility.yul\":11693:11700   */\n      dup3\n        /* \"#utility.yul\":11689:11704   */\n      div\n        /* \"#utility.yul\":11686:11687   */\n      dup5\n        /* \"#utility.yul\":11683:11705   */\n      eq\n        /* \"#utility.yul\":11663:11664   */\n      dup4\n        /* \"#utility.yul\":11656:11665   */\n      iszero\n        /* \"#utility.yul\":11636:11719   */\n      or\n        /* \"#utility.yul\":11613:11752   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":11732:11750   */\n      tag_422\n      tag_289\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11613:11752   */\n    tag_421:\n        /* \"#utility.yul\":11397:11759   */\n      pop\n        /* \"#utility.yul\":11349:11759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11765:12207   */\n    tag_213:\n        /* \"#utility.yul\":11914:11918   */\n      0x00\n        /* \"#utility.yul\":11952:11954   */\n      0x60\n        /* \"#utility.yul\":11941:11950   */\n      dup3\n        /* \"#utility.yul\":11937:11955   */\n      add\n        /* \"#utility.yul\":11929:11955   */\n      swap1\n      pop\n        /* \"#utility.yul\":11965:12036   */\n      tag_424\n        /* \"#utility.yul\":12033:12034   */\n      0x00\n        /* \"#utility.yul\":12022:12031   */\n      dup4\n        /* \"#utility.yul\":12018:12035   */\n      add\n        /* \"#utility.yul\":12009:12015   */\n      dup7\n        /* \"#utility.yul\":11965:12036   */\n      tag_283\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12046:12118   */\n      tag_425\n        /* \"#utility.yul\":12114:12116   */\n      0x20\n        /* \"#utility.yul\":12103:12112   */\n      dup4\n        /* \"#utility.yul\":12099:12117   */\n      add\n        /* \"#utility.yul\":12090:12096   */\n      dup6\n        /* \"#utility.yul\":12046:12118   */\n      tag_280\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":12128:12200   */\n      tag_426\n        /* \"#utility.yul\":12196:12198   */\n      0x40\n        /* \"#utility.yul\":12185:12194   */\n      dup4\n        /* \"#utility.yul\":12181:12199   */\n      add\n        /* \"#utility.yul\":12172:12178   */\n      dup5\n        /* \"#utility.yul\":12128:12200   */\n      tag_280\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11765:12207   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12213:12330   */\n    tag_293:\n        /* \"#utility.yul\":12322:12323   */\n      0x00\n        /* \"#utility.yul\":12319:12320   */\n      0x00\n        /* \"#utility.yul\":12312:12324   */\n      revert\n        /* \"#utility.yul\":12336:12453   */\n    tag_294:\n        /* \"#utility.yul\":12445:12446   */\n      0x00\n        /* \"#utility.yul\":12442:12443   */\n      0x00\n        /* \"#utility.yul\":12435:12447   */\n      revert\n        /* \"#utility.yul\":12459:12928   */\n    tag_235:\n        /* \"#utility.yul\":12564:12573   */\n      0x00\n        /* \"#utility.yul\":12575:12584   */\n      0x00\n        /* \"#utility.yul\":12613:12621   */\n      dup6\n        /* \"#utility.yul\":12601:12611   */\n      dup6\n        /* \"#utility.yul\":12598:12622   */\n      gt\n        /* \"#utility.yul\":12595:12706   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":12625:12704   */\n      tag_431\n      tag_293\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12595:12706   */\n    tag_430:\n        /* \"#utility.yul\":12731:12737   */\n      dup4\n        /* \"#utility.yul\":12721:12729   */\n      dup7\n        /* \"#utility.yul\":12718:12738   */\n      gt\n        /* \"#utility.yul\":12715:12822   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":12741:12820   */\n      tag_433\n      tag_294\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12715:12822   */\n    tag_432:\n        /* \"#utility.yul\":12872:12873   */\n      0x01\n        /* \"#utility.yul\":12860:12870   */\n      dup6\n        /* \"#utility.yul\":12856:12874   */\n      mul\n        /* \"#utility.yul\":12848:12854   */\n      dup4\n        /* \"#utility.yul\":12844:12875   */\n      add\n        /* \"#utility.yul\":12831:12875   */\n      swap2\n      pop\n        /* \"#utility.yul\":12911:12921   */\n      dup5\n        /* \"#utility.yul\":12901:12909   */\n      dup7\n        /* \"#utility.yul\":12897:12922   */\n      sub\n        /* \"#utility.yul\":12884:12922   */\n      swap1\n      pop\n        /* \"#utility.yul\":12459:12928   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12934:13030   */\n    tag_295:\n        /* \"#utility.yul\":12992:12998   */\n      0x00\n        /* \"#utility.yul\":13020:13023   */\n      dup3\n        /* \"#utility.yul\":13010:13023   */\n      swap1\n      pop\n        /* \"#utility.yul\":12934:13030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13128:13278   */\n    tag_297:\n        /* \"#utility.yul\":13165:13172   */\n      0x00\n        /* \"#utility.yul\":13205:13271   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"#utility.yul\":13198:13203   */\n      dup3\n        /* \"#utility.yul\":13194:13272   */\n      and\n        /* \"#utility.yul\":13183:13272   */\n      swap1\n      pop\n        /* \"#utility.yul\":13128:13278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13284:13391   */\n    tag_298:\n        /* \"#utility.yul\":13328:13336   */\n      0x00\n        /* \"#utility.yul\":13378:13383   */\n      dup3\n        /* \"#utility.yul\":13372:13376   */\n      dup3\n        /* \"#utility.yul\":13368:13384   */\n      shl\n        /* \"#utility.yul\":13347:13384   */\n      swap1\n      pop\n        /* \"#utility.yul\":13284:13391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13397:13949   */\n    tag_237:\n        /* \"#utility.yul\":13488:13493   */\n      0x00\n        /* \"#utility.yul\":13519:13564   */\n      tag_439\n        /* \"#utility.yul\":13560:13563   */\n      dup4\n        /* \"#utility.yul\":13553:13558   */\n      dup4\n        /* \"#utility.yul\":13519:13564   */\n      tag_295\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13589:13594   */\n      dup3\n        /* \"#utility.yul\":13613:13654   */\n      tag_440\n        /* \"#utility.yul\":13644:13652   */\n      dup2\n        /* \"#utility.yul\":13631:13653   */\n      calldataload\n        /* \"#utility.yul\":13613:13654   */\n      tag_297\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13604:13654   */\n      swap3\n      pop\n        /* \"#utility.yul\":13678:13680   */\n      0x14\n        /* \"#utility.yul\":13670:13676   */\n      dup3\n        /* \"#utility.yul\":13667:13681   */\n      lt\n        /* \"#utility.yul\":13664:13942   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":13749:13918   */\n      tag_442\n        /* \"#utility.yul\":13834:13900   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"#utility.yul\":13804:13810   */\n      dup4\n        /* \"#utility.yul\":13800:13802   */\n      0x14\n        /* \"#utility.yul\":13796:13811   */\n      sub\n        /* \"#utility.yul\":13793:13794   */\n      0x08\n        /* \"#utility.yul\":13789:13812   */\n      mul\n        /* \"#utility.yul\":13749:13918   */\n      tag_298\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13726:13731   */\n      dup4\n        /* \"#utility.yul\":13705:13932   */\n      and\n        /* \"#utility.yul\":13696:13932   */\n      swap3\n      pop\n        /* \"#utility.yul\":13664:13942   */\n    tag_441:\n        /* \"#utility.yul\":13494:13949   */\n      pop\n      pop\n        /* \"#utility.yul\":13397:13949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13955:14146   */\n    tag_251:\n        /* \"#utility.yul\":13995:13998   */\n      0x00\n        /* \"#utility.yul\":14014:14034   */\n      tag_444\n        /* \"#utility.yul\":14032:14033   */\n      dup3\n        /* \"#utility.yul\":14014:14034   */\n      tag_275\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14009:14034   */\n      swap2\n      pop\n        /* \"#utility.yul\":14048:14068   */\n      tag_445\n        /* \"#utility.yul\":14066:14067   */\n      dup4\n        /* \"#utility.yul\":14048:14068   */\n      tag_275\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":14043:14068   */\n      swap3\n      pop\n        /* \"#utility.yul\":14091:14092   */\n      dup3\n        /* \"#utility.yul\":14088:14089   */\n      dup3\n        /* \"#utility.yul\":14084:14093   */\n      add\n        /* \"#utility.yul\":14077:14093   */\n      swap1\n      pop\n        /* \"#utility.yul\":14112:14115   */\n      dup1\n        /* \"#utility.yul\":14109:14110   */\n      dup3\n        /* \"#utility.yul\":14106:14116   */\n      gt\n        /* \"#utility.yul\":14103:14139   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":14119:14137   */\n      tag_447\n      tag_289\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14103:14139   */\n    tag_446:\n        /* \"#utility.yul\":13955:14146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122064a9c2442728da52975c3a29cee30cabc653de6c2c3176f9b6ea4db17629166864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1130": {
									"entryPoint": null,
									"id": 1130,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_481": {
									"entryPoint": null,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_784": {
									"entryPoint": 747,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 504,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_751": {
									"entryPoint": 880,
									"id": 751,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_508": {
									"entryPoint": 699,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 707,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 1562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11386:8",
										"nodeType": "YulBlock",
										"src": "0:11386:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1316:552:8",
													"nodeType": "YulBlock",
													"src": "1316:552:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:8",
																"nodeType": "YulBlock",
																"src": "1362:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:8"
																			},
																			"nativeSrc": "1364:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:8"
																		},
																		"nativeSrc": "1364:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:8"
																		},
																		"nativeSrc": "1333:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:8"
																},
																"nativeSrc": "1329:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:8"
															},
															"nativeSrc": "1326:119:8",
															"nodeType": "YulIf",
															"src": "1326:119:8"
														},
														{
															"nativeSrc": "1455:128:8",
															"nodeType": "YulBlock",
															"src": "1455:128:8",
															"statements": [
																{
																	"nativeSrc": "1470:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:8"
																				},
																				"nativeSrc": "1541:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:8"
																		},
																		"nativeSrc": "1509:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:8",
															"nodeType": "YulBlock",
															"src": "1593:129:8",
															"statements": [
																{
																	"nativeSrc": "1608:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:8"
																				},
																				"nativeSrc": "1680:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:8"
																		},
																		"nativeSrc": "1648:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:8",
															"nodeType": "YulBlock",
															"src": "1732:129:8",
															"statements": [
																{
																	"nativeSrc": "1747:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:8"
																				},
																				"nativeSrc": "1819:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:8"
																		},
																		"nativeSrc": "1787:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:8",
														"nodeType": "YulTypedName",
														"src": "1270:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:8",
														"nodeType": "YulTypedName",
														"src": "1281:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:8",
														"nodeType": "YulTypedName",
														"src": "1293:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:8",
														"nodeType": "YulTypedName",
														"src": "1301:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:8",
														"nodeType": "YulTypedName",
														"src": "1309:6:8",
														"type": ""
													}
												],
												"src": "1205:663:8"
											},
											{
												"body": {
													"nativeSrc": "1933:40:8",
													"nodeType": "YulBlock",
													"src": "1933:40:8",
													"statements": [
														{
															"nativeSrc": "1944:22:8",
															"nodeType": "YulAssignment",
															"src": "1944:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1960:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1960:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1954:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1954:5:8"
																},
																"nativeSrc": "1954:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1954:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1874:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1916:5:8",
														"nodeType": "YulTypedName",
														"src": "1916:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1926:6:8",
														"nodeType": "YulTypedName",
														"src": "1926:6:8",
														"type": ""
													}
												],
												"src": "1874:99:8"
											},
											{
												"body": {
													"nativeSrc": "2007:152:8",
													"nodeType": "YulBlock",
													"src": "2007:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2024:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2024:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2027:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:8"
																},
																"nativeSrc": "2017:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2017:88:8"
															},
															"nativeSrc": "2017:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2017:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2121:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2121:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2124:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2124:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:8"
																},
																"nativeSrc": "2114:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2114:15:8"
															},
															"nativeSrc": "2114:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2114:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2145:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2145:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2148:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2148:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:8"
																},
																"nativeSrc": "2138:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:15:8"
															},
															"nativeSrc": "2138:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1979:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1979:180:8"
											},
											{
												"body": {
													"nativeSrc": "2193:152:8",
													"nodeType": "YulBlock",
													"src": "2193:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2210:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2213:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2213:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:8"
																},
																"nativeSrc": "2203:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2203:88:8"
															},
															"nativeSrc": "2203:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2203:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2310:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2310:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:8"
																},
																"nativeSrc": "2300:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2300:15:8"
															},
															"nativeSrc": "2300:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:8"
																},
																"nativeSrc": "2324:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2324:15:8"
															},
															"nativeSrc": "2324:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2324:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2165:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2165:180:8"
											},
											{
												"body": {
													"nativeSrc": "2402:269:8",
													"nodeType": "YulBlock",
													"src": "2402:269:8",
													"statements": [
														{
															"nativeSrc": "2412:22:8",
															"nodeType": "YulAssignment",
															"src": "2412:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2426:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2426:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2422:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:8"
																},
																"nativeSrc": "2422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2422:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2412:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:8"
																}
															]
														},
														{
															"nativeSrc": "2443:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2443:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2473:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2473:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2479:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2469:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:8"
																},
																"nativeSrc": "2469:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2469:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2447:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2447:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2520:51:8",
																"nodeType": "YulBlock",
																"src": "2520:51:8",
																"statements": [
																	{
																		"nativeSrc": "2534:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2534:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2548:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2548:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2556:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2556:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2544:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2544:3:8"
																			},
																			"nativeSrc": "2544:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2544:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2534:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2534:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2500:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2500:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																},
																"nativeSrc": "2493:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2493:26:8"
															},
															"nativeSrc": "2490:81:8",
															"nodeType": "YulIf",
															"src": "2490:81:8"
														},
														{
															"body": {
																"nativeSrc": "2623:42:8",
																"nodeType": "YulBlock",
																"src": "2623:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2637:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2637:16:8"
																			},
																			"nativeSrc": "2637:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:18:8"
																		},
																		"nativeSrc": "2637:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2587:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2587:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2610:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2618:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2618:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2607:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2607:2:8"
																		},
																		"nativeSrc": "2607:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2584:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2584:2:8"
																},
																"nativeSrc": "2584:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2584:38:8"
															},
															"nativeSrc": "2581:84:8",
															"nodeType": "YulIf",
															"src": "2581:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2351:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2386:4:8",
														"nodeType": "YulTypedName",
														"src": "2386:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2395:6:8",
														"nodeType": "YulTypedName",
														"src": "2395:6:8",
														"type": ""
													}
												],
												"src": "2351:320:8"
											},
											{
												"body": {
													"nativeSrc": "2731:87:8",
													"nodeType": "YulBlock",
													"src": "2731:87:8",
													"statements": [
														{
															"nativeSrc": "2741:11:8",
															"nodeType": "YulAssignment",
															"src": "2741:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2749:3:8",
																"nodeType": "YulIdentifier",
																"src": "2749:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2741:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2741:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2769:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2772:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2762:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:8"
																},
																"nativeSrc": "2762:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2762:14:8"
															},
															"nativeSrc": "2762:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2762:14:8"
														},
														{
															"nativeSrc": "2785:26:8",
															"nodeType": "YulAssignment",
															"src": "2785:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2793:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2793:9:8"
																},
																"nativeSrc": "2793:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2793:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2785:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2785:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2677:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2718:3:8",
														"nodeType": "YulTypedName",
														"src": "2718:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2726:4:8",
														"nodeType": "YulTypedName",
														"src": "2726:4:8",
														"type": ""
													}
												],
												"src": "2677:141:8"
											},
											{
												"body": {
													"nativeSrc": "2868:49:8",
													"nodeType": "YulBlock",
													"src": "2868:49:8",
													"statements": [
														{
															"nativeSrc": "2878:33:8",
															"nodeType": "YulAssignment",
															"src": "2878:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2903:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:8"
																		},
																		"nativeSrc": "2892:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2908:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																},
																"nativeSrc": "2888:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2888:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2824:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2851:5:8",
														"nodeType": "YulTypedName",
														"src": "2851:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2861:6:8",
														"nodeType": "YulTypedName",
														"src": "2861:6:8",
														"type": ""
													}
												],
												"src": "2824:93:8"
											},
											{
												"body": {
													"nativeSrc": "2976:54:8",
													"nodeType": "YulBlock",
													"src": "2976:54:8",
													"statements": [
														{
															"nativeSrc": "2986:37:8",
															"nodeType": "YulAssignment",
															"src": "2986:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3011:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3011:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3017:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3017:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:8"
																},
																"nativeSrc": "3007:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3007:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2986:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2986:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2923:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2951:4:8",
														"nodeType": "YulTypedName",
														"src": "2951:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2957:5:8",
														"nodeType": "YulTypedName",
														"src": "2957:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2967:8:8",
														"nodeType": "YulTypedName",
														"src": "2967:8:8",
														"type": ""
													}
												],
												"src": "2923:107:8"
											},
											{
												"body": {
													"nativeSrc": "3112:317:8",
													"nodeType": "YulBlock",
													"src": "3112:317:8",
													"statements": [
														{
															"nativeSrc": "3122:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3122:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3143:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "3143:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:8"
																},
																"nativeSrc": "3139:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3139:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3126:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3126:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3166:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3166:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3197:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3208:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3208:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3178:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3178:18:8"
																},
																"nativeSrc": "3178:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3178:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3170:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3170:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3284:51:8",
															"nodeType": "YulAssignment",
															"src": "3284:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3315:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3326:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3326:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3296:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3296:18:8"
																},
																"nativeSrc": "3296:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3296:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3284:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3284:8:8"
																}
															]
														},
														{
															"nativeSrc": "3344:30:8",
															"nodeType": "YulAssignment",
															"src": "3344:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3357:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3357:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3368:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3368:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:8"
																		},
																		"nativeSrc": "3364:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3364:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3353:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:8"
																},
																"nativeSrc": "3353:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3353:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3344:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3344:5:8"
																}
															]
														},
														{
															"nativeSrc": "3383:40:8",
															"nodeType": "YulAssignment",
															"src": "3383:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3396:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3396:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3407:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3407:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3417:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3417:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:8"
																		},
																		"nativeSrc": "3403:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3393:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3393:2:8"
																},
																"nativeSrc": "3393:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3393:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3036:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3073:5:8",
														"nodeType": "YulTypedName",
														"src": "3073:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3080:10:8",
														"nodeType": "YulTypedName",
														"src": "3080:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3092:8:8",
														"nodeType": "YulTypedName",
														"src": "3092:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3105:6:8",
														"nodeType": "YulTypedName",
														"src": "3105:6:8",
														"type": ""
													}
												],
												"src": "3036:393:8"
											},
											{
												"body": {
													"nativeSrc": "3467:28:8",
													"nodeType": "YulBlock",
													"src": "3467:28:8",
													"statements": [
														{
															"nativeSrc": "3477:12:8",
															"nodeType": "YulAssignment",
															"src": "3477:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3484:5:8",
																"nodeType": "YulIdentifier",
																"src": "3484:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3435:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3453:5:8",
														"nodeType": "YulTypedName",
														"src": "3453:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3463:3:8",
														"nodeType": "YulTypedName",
														"src": "3463:3:8",
														"type": ""
													}
												],
												"src": "3435:60:8"
											},
											{
												"body": {
													"nativeSrc": "3561:82:8",
													"nodeType": "YulBlock",
													"src": "3561:82:8",
													"statements": [
														{
															"nativeSrc": "3571:66:8",
															"nodeType": "YulAssignment",
															"src": "3571:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3629:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3629:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3611:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3611:17:8"
																				},
																				"nativeSrc": "3611:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3611:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3602:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3602:8:8"
																		},
																		"nativeSrc": "3602:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3602:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3584:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3584:17:8"
																},
																"nativeSrc": "3584:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3584:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3571:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3501:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3541:5:8",
														"nodeType": "YulTypedName",
														"src": "3541:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3551:9:8",
														"nodeType": "YulTypedName",
														"src": "3551:9:8",
														"type": ""
													}
												],
												"src": "3501:142:8"
											},
											{
												"body": {
													"nativeSrc": "3696:28:8",
													"nodeType": "YulBlock",
													"src": "3696:28:8",
													"statements": [
														{
															"nativeSrc": "3706:12:8",
															"nodeType": "YulAssignment",
															"src": "3706:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3713:5:8",
																"nodeType": "YulIdentifier",
																"src": "3713:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3706:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3649:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3682:5:8",
														"nodeType": "YulTypedName",
														"src": "3682:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3692:3:8",
														"nodeType": "YulTypedName",
														"src": "3692:3:8",
														"type": ""
													}
												],
												"src": "3649:75:8"
											},
											{
												"body": {
													"nativeSrc": "3806:193:8",
													"nodeType": "YulBlock",
													"src": "3806:193:8",
													"statements": [
														{
															"nativeSrc": "3816:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3816:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3871:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3871:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3840:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3840:30:8"
																},
																"nativeSrc": "3840:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3840:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3820:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3820:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3895:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3895:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3935:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3935:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3929:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3929:5:8"
																				},
																				"nativeSrc": "3929:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3929:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3942:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3974:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3974:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3950:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3950:23:8"
																				},
																				"nativeSrc": "3950:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3950:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3901:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3901:27:8"
																		},
																		"nativeSrc": "3901:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:8"
																},
																"nativeSrc": "3888:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3888:105:8"
															},
															"nativeSrc": "3888:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3888:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3730:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3783:4:8",
														"nodeType": "YulTypedName",
														"src": "3783:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3789:6:8",
														"nodeType": "YulTypedName",
														"src": "3789:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3797:7:8",
														"nodeType": "YulTypedName",
														"src": "3797:7:8",
														"type": ""
													}
												],
												"src": "3730:269:8"
											},
											{
												"body": {
													"nativeSrc": "4054:24:8",
													"nodeType": "YulBlock",
													"src": "4054:24:8",
													"statements": [
														{
															"nativeSrc": "4064:8:8",
															"nodeType": "YulAssignment",
															"src": "4064:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4071:1:8",
																"nodeType": "YulLiteral",
																"src": "4071:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4005:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4050:3:8",
														"nodeType": "YulTypedName",
														"src": "4050:3:8",
														"type": ""
													}
												],
												"src": "4005:73:8"
											},
											{
												"body": {
													"nativeSrc": "4137:136:8",
													"nodeType": "YulBlock",
													"src": "4137:136:8",
													"statements": [
														{
															"nativeSrc": "4147:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4161:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:30:8"
																},
																"nativeSrc": "4161:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4151:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4246:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4246:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4252:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4252:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4260:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4260:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4202:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4202:43:8"
																},
																"nativeSrc": "4202:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4202:65:8"
															},
															"nativeSrc": "4202:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4202:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4084:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4123:4:8",
														"nodeType": "YulTypedName",
														"src": "4123:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4129:6:8",
														"nodeType": "YulTypedName",
														"src": "4129:6:8",
														"type": ""
													}
												],
												"src": "4084:189:8"
											},
											{
												"body": {
													"nativeSrc": "4329:136:8",
													"nodeType": "YulBlock",
													"src": "4329:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4396:63:8",
																"nodeType": "YulBlock",
																"src": "4396:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4440:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4440:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4447:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4410:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4410:29:8"
																			},
																			"nativeSrc": "4410:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4410:39:8"
																		},
																		"nativeSrc": "4410:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4410:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4349:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4349:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4346:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4346:2:8"
																},
																"nativeSrc": "4346:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4346:14:8"
															},
															"nativeSrc": "4339:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4361:26:8",
																"nodeType": "YulBlock",
																"src": "4361:26:8",
																"statements": [
																	{
																		"nativeSrc": "4363:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4363:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4376:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4376:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4383:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4383:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4372:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4372:3:8"
																			},
																			"nativeSrc": "4372:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4372:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4363:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4363:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4343:2:8",
																"nodeType": "YulBlock",
																"src": "4343:2:8",
																"statements": []
															},
															"src": "4339:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4279:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4317:5:8",
														"nodeType": "YulTypedName",
														"src": "4317:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4324:3:8",
														"nodeType": "YulTypedName",
														"src": "4324:3:8",
														"type": ""
													}
												],
												"src": "4279:186:8"
											},
											{
												"body": {
													"nativeSrc": "4550:464:8",
													"nodeType": "YulBlock",
													"src": "4550:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4576:431:8",
																"nodeType": "YulBlock",
																"src": "4576:431:8",
																"statements": [
																	{
																		"nativeSrc": "4590:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4590:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4638:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4638:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4606:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4606:31:8"
																			},
																			"nativeSrc": "4606:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4606:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4594:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4594:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4657:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4657:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4680:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4680:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4708:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4708:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4690:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4690:17:8"
																					},
																					"nativeSrc": "4690:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4690:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4676:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4676:3:8"
																			},
																			"nativeSrc": "4676:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4676:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4661:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4661:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4877:27:8",
																			"nodeType": "YulBlock",
																			"src": "4877:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4879:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4879:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4894:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4894:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4879:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4879:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4861:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4861:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4873:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4873:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4858:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4858:2:8"
																			},
																			"nativeSrc": "4858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4858:18:8"
																		},
																		"nativeSrc": "4855:49:8",
																		"nodeType": "YulIf",
																		"src": "4855:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4946:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4946:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4963:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4963:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4991:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4991:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4973:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4973:17:8"
																							},
																							"nativeSrc": "4973:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4973:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4959:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4959:3:8"
																					},
																					"nativeSrc": "4959:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4959:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4917:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4917:28:8"
																			},
																			"nativeSrc": "4917:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4917:80:8"
																		},
																		"nativeSrc": "4917:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4917:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4567:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4567:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4572:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4572:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4564:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4564:2:8"
																},
																"nativeSrc": "4564:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4564:11:8"
															},
															"nativeSrc": "4561:446:8",
															"nodeType": "YulIf",
															"src": "4561:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4471:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4526:5:8",
														"nodeType": "YulTypedName",
														"src": "4526:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4533:3:8",
														"nodeType": "YulTypedName",
														"src": "4533:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4538:10:8",
														"nodeType": "YulTypedName",
														"src": "4538:10:8",
														"type": ""
													}
												],
												"src": "4471:543:8"
											},
											{
												"body": {
													"nativeSrc": "5083:54:8",
													"nodeType": "YulBlock",
													"src": "5083:54:8",
													"statements": [
														{
															"nativeSrc": "5093:37:8",
															"nodeType": "YulAssignment",
															"src": "5093:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5118:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5118:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5124:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5124:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:8"
																},
																"nativeSrc": "5114:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5114:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5093:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5020:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5058:4:8",
														"nodeType": "YulTypedName",
														"src": "5058:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5064:5:8",
														"nodeType": "YulTypedName",
														"src": "5064:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5074:8:8",
														"nodeType": "YulTypedName",
														"src": "5074:8:8",
														"type": ""
													}
												],
												"src": "5020:117:8"
											},
											{
												"body": {
													"nativeSrc": "5194:118:8",
													"nodeType": "YulBlock",
													"src": "5194:118:8",
													"statements": [
														{
															"nativeSrc": "5204:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5204:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5253:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5253:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5256:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5256:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5249:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:8"
																				},
																				"nativeSrc": "5249:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5268:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5268:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5264:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5264:3:8"
																				},
																				"nativeSrc": "5264:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5264:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5220:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5220:28:8"
																		},
																		"nativeSrc": "5220:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:8"
																},
																"nativeSrc": "5216:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5216:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5208:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5208:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5281:25:8",
															"nodeType": "YulAssignment",
															"src": "5281:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5295:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5295:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5301:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5301:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5291:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5291:3:8"
																},
																"nativeSrc": "5291:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5291:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5143:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5171:4:8",
														"nodeType": "YulTypedName",
														"src": "5171:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5177:5:8",
														"nodeType": "YulTypedName",
														"src": "5177:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5187:6:8",
														"nodeType": "YulTypedName",
														"src": "5187:6:8",
														"type": ""
													}
												],
												"src": "5143:169:8"
											},
											{
												"body": {
													"nativeSrc": "5398:214:8",
													"nodeType": "YulBlock",
													"src": "5398:214:8",
													"statements": [
														{
															"nativeSrc": "5531:37:8",
															"nodeType": "YulAssignment",
															"src": "5531:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5558:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5558:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5564:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5564:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5539:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5539:18:8"
																},
																"nativeSrc": "5539:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5539:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5531:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:8"
																}
															]
														},
														{
															"nativeSrc": "5577:29:8",
															"nodeType": "YulAssignment",
															"src": "5577:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5588:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5588:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5598:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5598:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5601:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5601:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5594:3:8"
																		},
																		"nativeSrc": "5594:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5585:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5585:2:8"
																},
																"nativeSrc": "5585:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5585:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5577:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5317:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5379:4:8",
														"nodeType": "YulTypedName",
														"src": "5379:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5385:3:8",
														"nodeType": "YulTypedName",
														"src": "5385:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5393:4:8",
														"nodeType": "YulTypedName",
														"src": "5393:4:8",
														"type": ""
													}
												],
												"src": "5317:295:8"
											},
											{
												"body": {
													"nativeSrc": "5709:1303:8",
													"nodeType": "YulBlock",
													"src": "5709:1303:8",
													"statements": [
														{
															"nativeSrc": "5720:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5720:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5734:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5734:32:8"
																},
																"nativeSrc": "5734:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5734:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5724:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5724:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5856:22:8",
																"nodeType": "YulBlock",
																"src": "5856:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5858:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:8"
																			},
																			"nativeSrc": "5858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:8"
																		},
																		"nativeSrc": "5858:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5836:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5825:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:8"
																},
																"nativeSrc": "5825:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5825:30:8"
															},
															"nativeSrc": "5822:56:8",
															"nodeType": "YulIf",
															"src": "5822:56:8"
														},
														{
															"nativeSrc": "5888:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5888:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5934:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5934:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5928:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5928:5:8"
																		},
																		"nativeSrc": "5928:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5902:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5902:25:8"
																},
																"nativeSrc": "5902:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5902:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5892:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5892:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6033:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6033:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6039:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6039:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6047:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5987:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5987:45:8"
																},
																"nativeSrc": "5987:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5987:67:8"
															},
															"nativeSrc": "5987:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5987:67:8"
														},
														{
															"nativeSrc": "6064:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6064:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6081:1:8",
																"nodeType": "YulLiteral",
																"src": "6081:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6068:9:8",
																	"nodeType": "YulTypedName",
																	"src": "6068:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6092:17:8",
															"nodeType": "YulAssignment",
															"src": "6092:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6105:4:8",
																"nodeType": "YulLiteral",
																"src": "6105:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6092:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6092:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6156:611:8",
																		"nodeType": "YulBlock",
																		"src": "6156:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6170:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6170:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6189:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6189:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6201:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6201:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6197:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6197:3:8"
																							},
																							"nativeSrc": "6197:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6197:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6185:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6185:3:8"
																					},
																					"nativeSrc": "6185:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6185:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6174:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6174:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6221:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6221:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6267:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6267:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6235:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6235:31:8"
																					},
																					"nativeSrc": "6235:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6235:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6225:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6225:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6285:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6285:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6294:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6294:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6289:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6289:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6353:163:8",
																					"nodeType": "YulBlock",
																					"src": "6353:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6378:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6378:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6396:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6396:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6401:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6401:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6392:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6392:3:8"
																												},
																												"nativeSrc": "6392:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6392:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6386:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6386:5:8"
																										},
																										"nativeSrc": "6386:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6386:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6371:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6371:6:8"
																								},
																								"nativeSrc": "6371:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6371:42:8"
																							},
																							"nativeSrc": "6371:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6371:42:8"
																						},
																						{
																							"nativeSrc": "6430:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6430:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6444:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6444:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6452:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6452:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6440:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6440:3:8"
																								},
																								"nativeSrc": "6440:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6440:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6430:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6430:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6471:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6471:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6488:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6488:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6499:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6499:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6484:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6484:3:8"
																								},
																								"nativeSrc": "6484:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6484:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6471:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6471:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6319:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6319:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6322:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6322:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6316:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6316:2:8"
																					},
																					"nativeSrc": "6316:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6316:14:8"
																				},
																				"nativeSrc": "6308:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6331:21:8",
																					"nodeType": "YulBlock",
																					"src": "6331:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6333:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6333:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6342:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6342:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6345:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6345:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6338:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6338:3:8"
																								},
																								"nativeSrc": "6338:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6338:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6333:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6333:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6312:3:8",
																					"nodeType": "YulBlock",
																					"src": "6312:3:8",
																					"statements": []
																				},
																				"src": "6308:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6552:156:8",
																					"nodeType": "YulBlock",
																					"src": "6552:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6570:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6570:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6597:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6597:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6602:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6602:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6593:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6593:3:8"
																										},
																										"nativeSrc": "6593:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6593:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6587:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6587:5:8"
																								},
																								"nativeSrc": "6587:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6587:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6574:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6574:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6637:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6637:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6664:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6664:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6679:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6679:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6687:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6687:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6675:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6675:3:8"
																												},
																												"nativeSrc": "6675:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6675:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6645:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6645:18:8"
																										},
																										"nativeSrc": "6645:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6645:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6630:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6630:6:8"
																								},
																								"nativeSrc": "6630:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6630:64:8"
																							},
																							"nativeSrc": "6630:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6630:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6535:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6535:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6544:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6544:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6532:2:8"
																					},
																					"nativeSrc": "6532:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6532:19:8"
																				},
																				"nativeSrc": "6529:179:8",
																				"nodeType": "YulIf",
																				"src": "6529:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6728:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6728:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6742:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6742:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6750:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6750:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6738:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6738:3:8"
																									},
																									"nativeSrc": "6738:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6738:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6754:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6754:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6734:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6734:3:8"
																							},
																							"nativeSrc": "6734:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6734:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6721:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6721:6:8"
																					},
																					"nativeSrc": "6721:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6721:36:8"
																				},
																				"nativeSrc": "6721:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6721:36:8"
																			}
																		]
																	},
																	"nativeSrc": "6149:618:8",
																	"nodeType": "YulCase",
																	"src": "6149:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6784:222:8",
																		"nodeType": "YulBlock",
																		"src": "6784:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6798:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6798:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6811:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6811:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6802:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6802:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6835:67:8",
																					"nodeType": "YulBlock",
																					"src": "6835:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6853:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6853:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6872:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6872:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6877:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6877:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6868:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6868:3:8"
																										},
																										"nativeSrc": "6868:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6868:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6862:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6862:5:8"
																								},
																								"nativeSrc": "6862:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6862:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6853:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6853:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6828:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6828:6:8"
																				},
																				"nativeSrc": "6825:77:8",
																				"nodeType": "YulIf",
																				"src": "6825:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6922:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6922:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6981:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6981:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6988:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6988:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6928:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6928:52:8"
																							},
																							"nativeSrc": "6928:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6928:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6915:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6915:6:8"
																					},
																					"nativeSrc": "6915:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6915:81:8"
																				},
																				"nativeSrc": "6915:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6915:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6776:230:8",
																	"nodeType": "YulCase",
																	"src": "6776:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6129:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6129:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6137:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6126:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6126:2:8"
																},
																"nativeSrc": "6126:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6126:14:8"
															},
															"nativeSrc": "6119:887:8",
															"nodeType": "YulSwitch",
															"src": "6119:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5617:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5698:4:8",
														"nodeType": "YulTypedName",
														"src": "5698:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5704:3:8",
														"nodeType": "YulTypedName",
														"src": "5704:3:8",
														"type": ""
													}
												],
												"src": "5617:1395:8"
											},
											{
												"body": {
													"nativeSrc": "7083:53:8",
													"nodeType": "YulBlock",
													"src": "7083:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7123:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7123:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7105:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7105:17:8"
																		},
																		"nativeSrc": "7105:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:6:8"
																},
																"nativeSrc": "7093:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7093:37:8"
															},
															"nativeSrc": "7093:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7093:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7018:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7071:5:8",
														"nodeType": "YulTypedName",
														"src": "7071:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7078:3:8",
														"nodeType": "YulTypedName",
														"src": "7078:3:8",
														"type": ""
													}
												],
												"src": "7018:118:8"
											},
											{
												"body": {
													"nativeSrc": "7240:124:8",
													"nodeType": "YulBlock",
													"src": "7240:124:8",
													"statements": [
														{
															"nativeSrc": "7250:26:8",
															"nodeType": "YulAssignment",
															"src": "7250:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7262:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:8"
																},
																"nativeSrc": "7258:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7258:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7330:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7330:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7343:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7343:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7354:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7339:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7339:3:8"
																		},
																		"nativeSrc": "7339:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7286:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7286:43:8"
																},
																"nativeSrc": "7286:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7286:71:8"
															},
															"nativeSrc": "7286:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7286:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7142:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7212:9:8",
														"nodeType": "YulTypedName",
														"src": "7212:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7224:6:8",
														"nodeType": "YulTypedName",
														"src": "7224:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7235:4:8",
														"nodeType": "YulTypedName",
														"src": "7235:4:8",
														"type": ""
													}
												],
												"src": "7142:222:8"
											},
											{
												"body": {
													"nativeSrc": "7398:152:8",
													"nodeType": "YulBlock",
													"src": "7398:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7415:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7415:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7418:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7418:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7408:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7408:6:8"
																},
																"nativeSrc": "7408:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7408:88:8"
															},
															"nativeSrc": "7408:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7408:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7512:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7512:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7515:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7515:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7505:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:8"
																},
																"nativeSrc": "7505:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7505:15:8"
															},
															"nativeSrc": "7505:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7505:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7539:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7539:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:6:8"
																},
																"nativeSrc": "7529:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:15:8"
															},
															"nativeSrc": "7529:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7529:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7370:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7370:180:8"
											},
											{
												"body": {
													"nativeSrc": "7607:51:8",
													"nodeType": "YulBlock",
													"src": "7607:51:8",
													"statements": [
														{
															"nativeSrc": "7617:34:8",
															"nodeType": "YulAssignment",
															"src": "7617:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7642:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7642:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7645:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7645:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:8"
																},
																"nativeSrc": "7638:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7638:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7617:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7617:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7556:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7588:5:8",
														"nodeType": "YulTypedName",
														"src": "7588:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7598:8:8",
														"nodeType": "YulTypedName",
														"src": "7598:8:8",
														"type": ""
													}
												],
												"src": "7556:102:8"
											},
											{
												"body": {
													"nativeSrc": "7737:775:8",
													"nodeType": "YulBlock",
													"src": "7737:775:8",
													"statements": [
														{
															"nativeSrc": "7747:15:8",
															"nodeType": "YulAssignment",
															"src": "7747:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "7756:6:8",
																"nodeType": "YulIdentifier",
																"src": "7756:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7747:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7747:5:8"
																}
															]
														},
														{
															"nativeSrc": "7771:14:8",
															"nodeType": "YulAssignment",
															"src": "7771:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "7780:5:8",
																"nodeType": "YulIdentifier",
																"src": "7780:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7771:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7771:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7829:677:8",
																"nodeType": "YulBlock",
																"src": "7829:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7917:22:8",
																			"nodeType": "YulBlock",
																			"src": "7917:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7919:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "7919:16:8"
																						},
																						"nativeSrc": "7919:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7919:18:8"
																					},
																					"nativeSrc": "7919:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "7919:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7895:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7895:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7905:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7905:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7910:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7910:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7901:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7901:3:8"
																					},
																					"nativeSrc": "7901:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7901:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7892:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7892:2:8"
																			},
																			"nativeSrc": "7892:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7892:24:8"
																		},
																		"nativeSrc": "7889:50:8",
																		"nodeType": "YulIf",
																		"src": "7889:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "7984:419:8",
																			"nodeType": "YulBlock",
																			"src": "7984:419:8",
																			"statements": [
																				{
																					"nativeSrc": "8364:25:8",
																					"nodeType": "YulAssignment",
																					"src": "8364:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8377:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "8377:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8384:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "8384:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8373:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8373:3:8"
																						},
																						"nativeSrc": "8373:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8373:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8364:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8364:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7959:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7959:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7969:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7969:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7955:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:3:8"
																			},
																			"nativeSrc": "7955:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7955:16:8"
																		},
																		"nativeSrc": "7952:451:8",
																		"nodeType": "YulIf",
																		"src": "7952:451:8"
																	},
																	{
																		"nativeSrc": "8416:23:8",
																		"nodeType": "YulAssignment",
																		"src": "8416:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8428:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8428:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8434:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8434:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8424:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8424:3:8"
																			},
																			"nativeSrc": "8424:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8416:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8416:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8452:44:8",
																		"nodeType": "YulAssignment",
																		"src": "8452:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8487:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8487:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8464:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "8464:22:8"
																			},
																			"nativeSrc": "8464:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8464:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8452:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "8452:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7805:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7805:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7815:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7815:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7802:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7802:2:8"
																},
																"nativeSrc": "7802:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7802:15:8"
															},
															"nativeSrc": "7794:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7818:2:8",
																"nodeType": "YulBlock",
																"src": "7818:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7798:3:8",
																"nodeType": "YulBlock",
																"src": "7798:3:8",
																"statements": []
															},
															"src": "7794:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7664:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7692:6:8",
														"nodeType": "YulTypedName",
														"src": "7692:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7700:5:8",
														"nodeType": "YulTypedName",
														"src": "7700:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7707:8:8",
														"nodeType": "YulTypedName",
														"src": "7707:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7717:3:8",
														"nodeType": "YulTypedName",
														"src": "7717:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7725:5:8",
														"nodeType": "YulTypedName",
														"src": "7725:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7732:4:8",
														"nodeType": "YulTypedName",
														"src": "7732:4:8",
														"type": ""
													}
												],
												"src": "7664:848:8"
											},
											{
												"body": {
													"nativeSrc": "8578:1013:8",
													"nodeType": "YulBlock",
													"src": "8578:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8773:20:8",
																"nodeType": "YulBlock",
																"src": "8773:20:8",
																"statements": [
																	{
																		"nativeSrc": "8775:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8775:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8784:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8784:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8775:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8775:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8786:5:8",
																		"nodeType": "YulLeave",
																		"src": "8786:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8763:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8763:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8756:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8756:6:8"
																},
																"nativeSrc": "8756:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8756:16:8"
															},
															"nativeSrc": "8753:40:8",
															"nodeType": "YulIf",
															"src": "8753:40:8"
														},
														{
															"body": {
																"nativeSrc": "8818:20:8",
																"nodeType": "YulBlock",
																"src": "8818:20:8",
																"statements": [
																	{
																		"nativeSrc": "8820:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8820:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8829:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8829:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8820:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8820:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8831:5:8",
																		"nodeType": "YulLeave",
																		"src": "8831:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8812:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8812:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8805:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:8"
																},
																"nativeSrc": "8805:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8805:12:8"
															},
															"nativeSrc": "8802:36:8",
															"nodeType": "YulIf",
															"src": "8802:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8948:20:8",
																		"nodeType": "YulBlock",
																		"src": "8948:20:8",
																		"statements": [
																			{
																				"nativeSrc": "8950:10:8",
																				"nodeType": "YulAssignment",
																				"src": "8950:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8959:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8959:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8950:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8950:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8961:5:8",
																				"nodeType": "YulLeave",
																				"src": "8961:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8941:27:8",
																	"nodeType": "YulCase",
																	"src": "8941:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8946:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8946:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8992:176:8",
																		"nodeType": "YulBlock",
																		"src": "8992:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9027:22:8",
																					"nodeType": "YulBlock",
																					"src": "9027:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9029:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9029:16:8"
																								},
																								"nativeSrc": "9029:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9029:18:8"
																							},
																							"nativeSrc": "9029:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9029:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9012:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9012:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9022:3:8",
																							"nodeType": "YulLiteral",
																							"src": "9022:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9009:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9009:2:8"
																					},
																					"nativeSrc": "9009:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9009:17:8"
																				},
																				"nativeSrc": "9006:43:8",
																				"nodeType": "YulIf",
																				"src": "9006:43:8"
																			},
																			{
																				"nativeSrc": "9062:25:8",
																				"nodeType": "YulAssignment",
																				"src": "9062:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9075:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9075:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9078:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9078:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9071:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9071:3:8"
																					},
																					"nativeSrc": "9071:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9071:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9062:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9062:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9118:22:8",
																					"nodeType": "YulBlock",
																					"src": "9118:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9120:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9120:16:8"
																								},
																								"nativeSrc": "9120:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9120:18:8"
																							},
																							"nativeSrc": "9120:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9120:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9106:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9106:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9113:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9113:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9103:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9103:2:8"
																					},
																					"nativeSrc": "9103:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9103:14:8"
																				},
																				"nativeSrc": "9100:40:8",
																				"nodeType": "YulIf",
																				"src": "9100:40:8"
																			},
																			{
																				"nativeSrc": "9153:5:8",
																				"nodeType": "YulLeave",
																				"src": "9153:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8977:191:8",
																	"nodeType": "YulCase",
																	"src": "8977:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8982:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8982:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8898:4:8",
																"nodeType": "YulIdentifier",
																"src": "8898:4:8"
															},
															"nativeSrc": "8891:277:8",
															"nodeType": "YulSwitch",
															"src": "8891:277:8"
														},
														{
															"body": {
																"nativeSrc": "9300:123:8",
																"nodeType": "YulBlock",
																"src": "9300:123:8",
																"statements": [
																	{
																		"nativeSrc": "9314:28:8",
																		"nodeType": "YulAssignment",
																		"src": "9314:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9327:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9327:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9333:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9333:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9323:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9323:3:8"
																			},
																			"nativeSrc": "9323:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9323:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9314:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9314:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9373:22:8",
																			"nodeType": "YulBlock",
																			"src": "9373:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9375:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9375:16:8"
																						},
																						"nativeSrc": "9375:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9375:18:8"
																					},
																					"nativeSrc": "9375:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9375:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9361:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9361:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9368:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9358:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9358:2:8"
																			},
																			"nativeSrc": "9358:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9358:14:8"
																		},
																		"nativeSrc": "9355:40:8",
																		"nodeType": "YulIf",
																		"src": "9355:40:8"
																	},
																	{
																		"nativeSrc": "9408:5:8",
																		"nodeType": "YulLeave",
																		"src": "9408:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9203:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9203:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9209:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9209:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9200:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9200:2:8"
																				},
																				"nativeSrc": "9200:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9200:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9217:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9217:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9227:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9227:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9214:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9214:2:8"
																				},
																				"nativeSrc": "9214:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9214:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9196:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9196:3:8"
																		},
																		"nativeSrc": "9196:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9196:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9252:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9252:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9258:3:8",
																						"nodeType": "YulLiteral",
																						"src": "9258:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9249:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9249:2:8"
																				},
																				"nativeSrc": "9249:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9249:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9267:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9267:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9277:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9277:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9264:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9264:2:8"
																				},
																				"nativeSrc": "9264:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9264:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9245:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9245:3:8"
																		},
																		"nativeSrc": "9245:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9245:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9180:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9180:2:8"
																},
																"nativeSrc": "9180:111:8",
																"nodeType": "YulFunctionCall",
																"src": "9180:111:8"
															},
															"nativeSrc": "9177:246:8",
															"nodeType": "YulIf",
															"src": "9177:246:8"
														},
														{
															"nativeSrc": "9433:57:8",
															"nodeType": "YulAssignment",
															"src": "9433:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9467:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9470:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9470:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9476:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9476:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9486:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9448:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "9448:18:8"
																},
																"nativeSrc": "9448:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9448:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9433:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9433:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "9440:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9440:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9529:22:8",
																"nodeType": "YulBlock",
																"src": "9529:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9531:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9531:16:8"
																			},
																			"nativeSrc": "9531:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9531:18:8"
																		},
																		"nativeSrc": "9531:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9531:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9506:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9506:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9517:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9517:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9522:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9522:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9513:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9513:3:8"
																		},
																		"nativeSrc": "9513:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9503:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9503:2:8"
																},
																"nativeSrc": "9503:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9503:25:8"
															},
															"nativeSrc": "9500:51:8",
															"nodeType": "YulIf",
															"src": "9500:51:8"
														},
														{
															"nativeSrc": "9560:25:8",
															"nodeType": "YulAssignment",
															"src": "9560:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9573:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9573:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9580:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9580:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9569:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9569:3:8"
																},
																"nativeSrc": "9569:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9569:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9560:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9560:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8518:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8548:4:8",
														"nodeType": "YulTypedName",
														"src": "8548:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8554:8:8",
														"nodeType": "YulTypedName",
														"src": "8554:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8564:3:8",
														"nodeType": "YulTypedName",
														"src": "8564:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8572:5:8",
														"nodeType": "YulTypedName",
														"src": "8572:5:8",
														"type": ""
													}
												],
												"src": "8518:1073:8"
											},
											{
												"body": {
													"nativeSrc": "9640:43:8",
													"nodeType": "YulBlock",
													"src": "9640:43:8",
													"statements": [
														{
															"nativeSrc": "9650:27:8",
															"nodeType": "YulAssignment",
															"src": "9650:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9665:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9665:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9672:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9661:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9661:3:8"
																},
																"nativeSrc": "9661:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9661:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9650:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9650:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9597:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9622:5:8",
														"nodeType": "YulTypedName",
														"src": "9622:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9632:7:8",
														"nodeType": "YulTypedName",
														"src": "9632:7:8",
														"type": ""
													}
												],
												"src": "9597:86:8"
											},
											{
												"body": {
													"nativeSrc": "9753:217:8",
													"nodeType": "YulBlock",
													"src": "9753:217:8",
													"statements": [
														{
															"nativeSrc": "9763:31:8",
															"nodeType": "YulAssignment",
															"src": "9763:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9789:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9789:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9771:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9771:17:8"
																},
																"nativeSrc": "9771:23:8",
																"nodeType": "YulFunctionCall",
																"src": "9771:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9763:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9763:4:8"
																}
															]
														},
														{
															"nativeSrc": "9803:37:8",
															"nodeType": "YulAssignment",
															"src": "9803:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9831:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9831:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9815:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "9815:15:8"
																},
																"nativeSrc": "9815:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9815:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9803:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "9803:8:8"
																}
															]
														},
														{
															"nativeSrc": "9850:113:8",
															"nodeType": "YulAssignment",
															"src": "9850:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9880:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9880:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9886:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9886:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9896:66:8",
																		"nodeType": "YulLiteral",
																		"src": "9896:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9859:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "9859:20:8"
																},
																"nativeSrc": "9859:104:8",
																"nodeType": "YulFunctionCall",
																"src": "9859:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9850:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9850:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9689:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9728:4:8",
														"nodeType": "YulTypedName",
														"src": "9728:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9734:8:8",
														"nodeType": "YulTypedName",
														"src": "9734:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9747:5:8",
														"nodeType": "YulTypedName",
														"src": "9747:5:8",
														"type": ""
													}
												],
												"src": "9689:281:8"
											},
											{
												"body": {
													"nativeSrc": "10024:362:8",
													"nodeType": "YulBlock",
													"src": "10024:362:8",
													"statements": [
														{
															"nativeSrc": "10034:25:8",
															"nodeType": "YulAssignment",
															"src": "10034:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10057:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10057:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10039:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10039:17:8"
																},
																"nativeSrc": "10039:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10039:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10034:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10034:1:8"
																}
															]
														},
														{
															"nativeSrc": "10068:25:8",
															"nodeType": "YulAssignment",
															"src": "10068:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10091:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10091:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10073:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10073:17:8"
																},
																"nativeSrc": "10073:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10073:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10068:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10068:1:8"
																}
															]
														},
														{
															"nativeSrc": "10102:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10102:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10125:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10125:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10128:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10128:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10121:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:8"
																},
																"nativeSrc": "10121:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10121:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10106:11:8",
																	"nodeType": "YulTypedName",
																	"src": "10106:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10139:41:8",
															"nodeType": "YulAssignment",
															"src": "10139:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10168:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "10168:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10150:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10150:17:8"
																},
																"nativeSrc": "10150:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10150:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10139:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10139:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10357:22:8",
																"nodeType": "YulBlock",
																"src": "10357:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10359:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10359:16:8"
																			},
																			"nativeSrc": "10359:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10359:18:8"
																		},
																		"nativeSrc": "10359:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10359:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10290:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10290:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10283:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10283:6:8"
																				},
																				"nativeSrc": "10283:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10283:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10313:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10313:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10320:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "10320:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10329:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "10329:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10316:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10316:3:8"
																						},
																						"nativeSrc": "10316:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10316:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10310:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10310:2:8"
																				},
																				"nativeSrc": "10310:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10310:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10263:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10263:2:8"
																		},
																		"nativeSrc": "10263:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10263:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:8"
																},
																"nativeSrc": "10243:113:8",
																"nodeType": "YulFunctionCall",
																"src": "10243:113:8"
															},
															"nativeSrc": "10240:139:8",
															"nodeType": "YulIf",
															"src": "10240:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9976:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10007:1:8",
														"nodeType": "YulTypedName",
														"src": "10007:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10010:1:8",
														"nodeType": "YulTypedName",
														"src": "10010:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10016:7:8",
														"nodeType": "YulTypedName",
														"src": "10016:7:8",
														"type": ""
													}
												],
												"src": "9976:410:8"
											},
											{
												"body": {
													"nativeSrc": "10436:147:8",
													"nodeType": "YulBlock",
													"src": "10436:147:8",
													"statements": [
														{
															"nativeSrc": "10446:25:8",
															"nodeType": "YulAssignment",
															"src": "10446:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10469:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10469:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10451:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10451:17:8"
																},
																"nativeSrc": "10451:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10451:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10446:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10446:1:8"
																}
															]
														},
														{
															"nativeSrc": "10480:25:8",
															"nodeType": "YulAssignment",
															"src": "10480:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10503:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10503:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10485:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10485:17:8"
																},
																"nativeSrc": "10485:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10485:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10480:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10480:1:8"
																}
															]
														},
														{
															"nativeSrc": "10514:16:8",
															"nodeType": "YulAssignment",
															"src": "10514:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10525:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10525:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10528:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10528:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10521:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10521:3:8"
																},
																"nativeSrc": "10521:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10521:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10514:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10554:22:8",
																"nodeType": "YulBlock",
																"src": "10554:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10556:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10556:16:8"
																			},
																			"nativeSrc": "10556:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10556:18:8"
																		},
																		"nativeSrc": "10556:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10556:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10546:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10546:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10549:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10549:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10543:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10543:2:8"
																},
																"nativeSrc": "10543:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10543:10:8"
															},
															"nativeSrc": "10540:36:8",
															"nodeType": "YulIf",
															"src": "10540:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10392:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10423:1:8",
														"nodeType": "YulTypedName",
														"src": "10423:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10426:1:8",
														"nodeType": "YulTypedName",
														"src": "10426:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10432:3:8",
														"nodeType": "YulTypedName",
														"src": "10432:3:8",
														"type": ""
													}
												],
												"src": "10392:191:8"
											},
											{
												"body": {
													"nativeSrc": "10654:53:8",
													"nodeType": "YulBlock",
													"src": "10654:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10671:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10671:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10694:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10694:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10676:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10676:17:8"
																		},
																		"nativeSrc": "10676:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10664:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10664:6:8"
																},
																"nativeSrc": "10664:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10664:37:8"
															},
															"nativeSrc": "10664:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10664:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10589:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10642:5:8",
														"nodeType": "YulTypedName",
														"src": "10642:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10649:3:8",
														"nodeType": "YulTypedName",
														"src": "10649:3:8",
														"type": ""
													}
												],
												"src": "10589:118:8"
											},
											{
												"body": {
													"nativeSrc": "10867:288:8",
													"nodeType": "YulBlock",
													"src": "10867:288:8",
													"statements": [
														{
															"nativeSrc": "10877:26:8",
															"nodeType": "YulAssignment",
															"src": "10877:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10889:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10889:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10900:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10900:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10885:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:8"
																},
																"nativeSrc": "10885:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10885:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10877:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10877:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10957:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10970:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10981:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10981:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10966:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:8"
																		},
																		"nativeSrc": "10966:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10913:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10913:43:8"
																},
																"nativeSrc": "10913:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10913:71:8"
															},
															"nativeSrc": "10913:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10913:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11038:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11038:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11051:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11051:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11062:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11062:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11047:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11047:3:8"
																		},
																		"nativeSrc": "11047:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11047:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10994:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10994:43:8"
																},
																"nativeSrc": "10994:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10994:72:8"
															},
															"nativeSrc": "10994:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10994:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11120:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11120:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11133:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11133:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11144:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11144:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11129:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:8"
																		},
																		"nativeSrc": "11129:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11129:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11076:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11076:43:8"
																},
																"nativeSrc": "11076:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11076:72:8"
															},
															"nativeSrc": "11076:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11076:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10713:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10823:9:8",
														"nodeType": "YulTypedName",
														"src": "10823:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10835:6:8",
														"nodeType": "YulTypedName",
														"src": "10835:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10843:6:8",
														"nodeType": "YulTypedName",
														"src": "10843:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10851:6:8",
														"nodeType": "YulTypedName",
														"src": "10851:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10862:4:8",
														"nodeType": "YulTypedName",
														"src": "10862:4:8",
														"type": ""
													}
												],
												"src": "10713:442:8"
											},
											{
												"body": {
													"nativeSrc": "11259:124:8",
													"nodeType": "YulBlock",
													"src": "11259:124:8",
													"statements": [
														{
															"nativeSrc": "11269:26:8",
															"nodeType": "YulAssignment",
															"src": "11269:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11281:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11281:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11292:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11292:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11277:3:8"
																},
																"nativeSrc": "11277:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11277:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11269:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11269:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11349:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11349:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11362:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11362:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11373:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11373:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11358:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11358:3:8"
																		},
																		"nativeSrc": "11358:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11358:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11305:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11305:43:8"
																},
																"nativeSrc": "11305:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11305:71:8"
															},
															"nativeSrc": "11305:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11305:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11161:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11231:9:8",
														"nodeType": "YulTypedName",
														"src": "11231:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11243:6:8",
														"nodeType": "YulTypedName",
														"src": "11243:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11254:4:8",
														"nodeType": "YulTypedName",
														"src": "11254:4:8",
														"type": ""
													}
												],
												"src": "11161:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b506040516126103803806126108339818101604052810190610031919061061a565b81836040518060400160405280600e81526020017f526577617264203120546f6b656e0000000000000000000000000000000000008152506040518060400160405280600581526020017f525744203100000000000000000000000000000000000000000000000000000081525081600390816100ae919061089e565b5080600490816100be919061089e565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610166575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161015d919061097c565b60405180910390fd5b610175816101f860201b60201c565b505f6101856102bb60201b60201c565b600a6101919190610afd565b8261019c9190610b47565b90508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506101ef6101e36102c360201b60201c565b826102eb60201b60201c565b50505050610c18565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361035b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610352919061097c565b60405180910390fd5b61036c5f838361037060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103c0578060025f8282546103b49190610b88565b9250508190555061048e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610449578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161044093929190610bca565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104d5578060025f828254039250508190555061051f565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161057c9190610bff565b60405180910390a3505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105b68261058d565b9050919050565b6105c6816105ac565b81146105d0575f5ffd5b50565b5f815190506105e1816105bd565b92915050565b5f819050919050565b6105f9816105e7565b8114610603575f5ffd5b50565b5f81519050610614816105f0565b92915050565b5f5f5f6060848603121561063157610630610589565b5b5f61063e868287016105d3565b935050602061064f868287016105d3565b925050604061066086828701610606565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806106e557607f821691505b6020821081036106f8576106f76106a1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261075a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261071f565b610764868361071f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61079f61079a610795846105e7565b61077c565b6105e7565b9050919050565b5f819050919050565b6107b883610785565b6107cc6107c4826107a6565b84845461072b565b825550505050565b5f5f905090565b6107e36107d4565b6107ee8184846107af565b505050565b5b81811015610811576108065f826107db565b6001810190506107f4565b5050565b601f82111561085657610827816106fe565b61083084610710565b8101602085101561083f578190505b61085361084b85610710565b8301826107f3565b50505b505050565b5f82821c905092915050565b5f6108765f198460080261085b565b1980831691505092915050565b5f61088e8383610867565b9150826002028217905092915050565b6108a78261066a565b67ffffffffffffffff8111156108c0576108bf610674565b5b6108ca82546106ce565b6108d5828285610815565b5f60209050601f831160018114610906575f84156108f4578287015190505b6108fe8582610883565b865550610965565b601f198416610914866106fe565b5f5b8281101561093b57848901518255600182019150602085019450602081019050610916565b868310156109585784890151610954601f891682610867565b8355505b6001600288020188555050505b505050505050565b610976816105ac565b82525050565b5f60208201905061098f5f83018461096d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610a17578086048111156109f3576109f2610995565b5b6001851615610a025780820291505b8081029050610a10856109c2565b94506109d7565b94509492505050565b5f82610a2f5760019050610aea565b81610a3c575f9050610aea565b8160018114610a525760028114610a5c57610a8b565b6001915050610aea565b60ff841115610a6e57610a6d610995565b5b8360020a915084821115610a8557610a84610995565b5b50610aea565b5060208310610133831016604e8410600b8410161715610ac05782820a905083811115610abb57610aba610995565b5b610aea565b610acd84848460016109ce565b92509050818404811115610ae457610ae3610995565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610b07826105e7565b9150610b1283610af1565b9250610b3f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a20565b905092915050565b5f610b51826105e7565b9150610b5c836105e7565b9250828202610b6a816105e7565b91508282048414831517610b8157610b80610995565b5b5092915050565b5f610b92826105e7565b9150610b9d836105e7565b9250828201905080821115610bb557610bb4610995565b5b92915050565b610bc4816105e7565b82525050565b5f606082019050610bdd5f83018661096d565b610bea6020830185610bbb565b610bf76040830184610bbb565b949350505050565b5f602082019050610c125f830184610bbb565b92915050565b60805160a0516119da610c365f395f50505f61064a01526119da5ff3fe608060405234801561000f575f5ffd5b506004361061011f575f3560e01c8063715018a6116100ab578063ae169a501161006f578063ae169a5014610309578063b921e16314610325578063dd62ed3e14610341578063f2fde38b14610371578063ff010f5b1461038d5761011f565b8063715018a6146102755780637da0a8771461027f5780638da5cb5b1461029d57806395d89b41146102bb578063a9059cbb146102d95761011f565b806323b872dd116100f257806323b872dd146101ab578063301aecb9146101db578063313ce567146101f7578063572b6c051461021557806370a08231146102455761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd146101715780631bfdcd9d1461018f575b5f5ffd5b61012b6103a9565b6040516101389190611271565b60405180910390f35b61015b60048036038101906101569190611322565b610439565b604051610168919061137a565b60405180910390f35b61017961045b565b60405161018691906113a2565b60405180910390f35b6101a960048036038101906101a49190611322565b610464565b005b6101c560048036038101906101c091906113bb565b6104f3565b6040516101d2919061137a565b60405180910390f35b6101f560048036038101906101f0919061140b565b610521565b005b6101ff6105d6565b60405161020c9190611451565b60405180910390f35b61022f600480360381019061022a919061146a565b6105de565b60405161023c919061137a565b60405180910390f35b61025f600480360381019061025a919061146a565b6105ef565b60405161026c91906113a2565b60405180910390f35b61027d610634565b005b610287610647565b60405161029491906114a4565b60405180910390f35b6102a561066e565b6040516102b291906114a4565b60405180910390f35b6102c3610696565b6040516102d09190611271565b60405180910390f35b6102f360048036038101906102ee9190611322565b610726565b604051610300919061137a565b60405180910390f35b610323600480360381019061031e919061140b565b610748565b005b61033f600480360381019061033a919061140b565b6107fd565b005b61035b600480360381019061035691906114bd565b610826565b60405161036891906113a2565b60405180910390f35b61038b6004803603810190610386919061146a565b6108a8565b005b6103a760048036038101906103a29190611322565b61092c565b005b6060600380546103b890611528565b80601f01602080910402602001604051908101604052809291908181526020018280546103e490611528565b801561042f5780601f106104065761010080835404028352916020019161042f565b820191905f5260205f20905b81548152906001019060200180831161041257829003601f168201915b5050505050905090565b5f5f6104436109c3565b90506104508185856109d1565b600191505092915050565b5f600254905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c9906115c8565b60405180910390fd5b5f3390505f6104e0836109e3565b90506104ed848383610a0a565b50505050565b5f5f6104fd6109c3565b905061050a858285610afa565b610515858585610a0a565b60019150509392505050565b61052a336105de565b8061056e575061053861066e565b73ffffffffffffffffffffffffffffffffffffffff166105566109c3565b73ffffffffffffffffffffffffffffffffffffffff16145b6105ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a490611656565b60405180910390fd5b5f6105b7826109e3565b90506105d26105c46109c3565b6105cc61066e565b83610a0a565b5050565b5f6012905090565b5f6105e882610b8d565b9050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61063c610bcb565b6106455f610c52565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106a590611528565b80601f01602080910402602001604051908101604052809291908181526020018280546106d190611528565b801561071c5780601f106106f35761010080835404028352916020019161071c565b820191905f5260205f20905b8154815290600101906020018083116106ff57829003601f168201915b5050505050905090565b5f5f6107306109c3565b905061073d818585610a0a565b600191505092915050565b610751336105de565b80610795575061075f61066e565b73ffffffffffffffffffffffffffffffffffffffff1661077d6109c3565b73ffffffffffffffffffffffffffffffffffffffff16145b6107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611656565b60405180910390fd5b5f6107de826109e3565b90506107f96107eb61066e565b6107f36109c3565b83610a0a565b5050565b610805610bcb565b5f61080f826109e3565b905061082261081c61066e565b82610d15565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108b0610bcb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610920575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161091791906114a4565b60405180910390fd5b61092981610c52565b50565b610934610bcb565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610999906115c8565b60405180910390fd5b5f3390505f6109b0836109e3565b90506109bd828583610a0a565b50505050565b5f6109cc610d94565b905090565b6109de8383836001610dfc565b505050565b5f6109ec6105d6565b600a6109f891906117d0565b82610a03919061181a565b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a7a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7191906114a4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aea575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ae191906114a4565b60405180910390fd5b610af5838383610fcb565b505050565b5f610b058484610826565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b875781811015610b78578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b6f9392919061185b565b60405180910390fd5b610b8684848484035f610dfc565b5b50505050565b5f610b96610647565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610bd36109c3565b73ffffffffffffffffffffffffffffffffffffffff16610bf161066e565b73ffffffffffffffffffffffffffffffffffffffff1614610c5057610c146109c3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c4791906114a4565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d85575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d7c91906114a4565b60405180910390fd5b610d905f8383610fcb565b5050565b5f5f5f36905090505f610da56111e4565b9050808210158015610dbc5750610dbb336105de565b5b15610dec575f36828403908092610dd593929190611898565b90610de09190611913565b60601c92505050610df9565b610df46111f2565b925050505b90565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e6c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e6391906114a4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610edc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ed391906114a4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fc5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fbc91906113a2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361101b578060025f82825461100f9190611971565b925050819055506110e9565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110a4578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161109b9392919061185b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611130578060025f828254039250508190555061117a565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111d791906113a2565b60405180910390a3505050565b5f6111ed6111f9565b905090565b5f33905090565b5f6014905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61124382611201565b61124d818561120b565b935061125d81856020860161121b565b61126681611229565b840191505092915050565b5f6020820190508181035f8301526112898184611239565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112be82611295565b9050919050565b6112ce816112b4565b81146112d8575f5ffd5b50565b5f813590506112e9816112c5565b92915050565b5f819050919050565b611301816112ef565b811461130b575f5ffd5b50565b5f8135905061131c816112f8565b92915050565b5f5f6040838503121561133857611337611291565b5b5f611345858286016112db565b92505060206113568582860161130e565b9150509250929050565b5f8115159050919050565b61137481611360565b82525050565b5f60208201905061138d5f83018461136b565b92915050565b61139c816112ef565b82525050565b5f6020820190506113b55f830184611393565b92915050565b5f5f5f606084860312156113d2576113d1611291565b5b5f6113df868287016112db565b93505060206113f0868287016112db565b92505060406114018682870161130e565b9150509250925092565b5f602082840312156114205761141f611291565b5b5f61142d8482850161130e565b91505092915050565b5f60ff82169050919050565b61144b81611436565b82525050565b5f6020820190506114645f830184611442565b92915050565b5f6020828403121561147f5761147e611291565b5b5f61148c848285016112db565b91505092915050565b61149e816112b4565b82525050565b5f6020820190506114b75f830184611495565b92915050565b5f5f604083850312156114d3576114d2611291565b5b5f6114e0858286016112db565b92505060206114f1858286016112db565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061153f57607f821691505b602082108103611552576115516114fb565b5b50919050565b7f4e65772077616c6c65742063616e6e6f7420626520746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6115b260258361120b565b91506115bd82611558565b604082019050919050565b5f6020820190508181035f8301526115df816115a6565b9050919050565b7f526577617264546f6b656e3a204d7573742075736520612054727573746564205f8201527f466f72776172646572206f7220626520746865204f776e65722e000000000000602082015250565b5f611640603a8361120b565b915061164b826115e6565b604082019050919050565b5f6020820190508181035f83015261166d81611634565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156116f6578086048111156116d2576116d1611674565b5b60018516156116e15780820291505b80810290506116ef856116a1565b94506116b6565b94509492505050565b5f8261170e57600190506117c9565b8161171b575f90506117c9565b8160018114611731576002811461173b5761176a565b60019150506117c9565b60ff84111561174d5761174c611674565b5b8360020a91508482111561176457611763611674565b5b506117c9565b5060208310610133831016604e8410600b841016171561179f5782820a90508381111561179a57611799611674565b5b6117c9565b6117ac84848460016116ad565b925090508184048111156117c3576117c2611674565b5b81810290505b9392505050565b5f6117da826112ef565b91506117e583611436565b92506118127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846116ff565b905092915050565b5f611824826112ef565b915061182f836112ef565b925082820261183d816112ef565b9150828204841483151761185457611853611674565b5b5092915050565b5f60608201905061186e5f830186611495565b61187b6020830185611393565b6118886040830184611393565b949350505050565b5f5ffd5b5f5ffd5b5f5f858511156118ab576118aa611890565b5b838611156118bc576118bb611894565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f82821b905092915050565b5f61191e83836118d2565b8261192981356118dc565b92506014821015611969576119647fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611907565b831692505b505092915050565b5f61197b826112ef565b9150611986836112ef565b925082820190508082111561199e5761199d611674565b5b9291505056fea264697066735822122064a9c2442728da52975c3a29cee30cabc653de6c2c3176f9b6ea4db17629166864736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2610 CODESIZE SUB DUP1 PUSH2 0x2610 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x61A JUMP JUMPDEST DUP2 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x526577617264203120546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5257442031000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x1F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH2 0x185 PUSH2 0x2BB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST DUP3 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1EF PUSH2 0x1E3 PUSH2 0x2C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH2 0x2EB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xC18 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36C PUSH0 DUP4 DUP4 PUSH2 0x370 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xB88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x48E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x449 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x51F JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5B6 DUP3 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C6 DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP2 EQ PUSH2 0x5D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5E1 DUP2 PUSH2 0x5BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F9 DUP2 PUSH2 0x5E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x603 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x614 DUP2 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH2 0x630 PUSH2 0x589 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x63E DUP7 DUP3 DUP8 ADD PUSH2 0x5D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x64F DUP7 DUP3 DUP8 ADD PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x660 DUP7 DUP3 DUP8 ADD PUSH2 0x606 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6F8 JUMPI PUSH2 0x6F7 PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x75A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x764 DUP7 DUP4 PUSH2 0x71F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x79F PUSH2 0x79A PUSH2 0x795 DUP5 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B8 DUP4 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x7C4 DUP3 PUSH2 0x7A6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x72B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E3 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x7EE DUP2 DUP5 DUP5 PUSH2 0x7AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH2 0x806 PUSH0 DUP3 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7F4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x856 JUMPI PUSH2 0x827 DUP2 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x830 DUP5 PUSH2 0x710 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x83F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x853 PUSH2 0x84B DUP6 PUSH2 0x710 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7F3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x876 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x85B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x88E DUP4 DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A7 DUP3 PUSH2 0x66A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x674 JUMP JUMPDEST JUMPDEST PUSH2 0x8CA DUP3 SLOAD PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x8D5 DUP3 DUP3 DUP6 PUSH2 0x815 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x906 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8F4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8FE DUP6 DUP3 PUSH2 0x883 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x965 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x914 DUP7 PUSH2 0x6FE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x93B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x916 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x958 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x954 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x867 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x976 DUP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98F PUSH0 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA17 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x9F3 JUMPI PUSH2 0x9F2 PUSH2 0x995 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA02 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA10 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP5 POP PUSH2 0x9D7 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA2F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAEA JUMP JUMPDEST DUP2 PUSH2 0xA3C JUMPI PUSH0 SWAP1 POP PUSH2 0xAEA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA52 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA5C JUMPI PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAEA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x995 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x995 JUMP JUMPDEST JUMPDEST POP PUSH2 0xAEA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAC0 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x995 JUMP JUMPDEST JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH2 0xACD DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x9CE JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0x995 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB07 DUP3 PUSH2 0x5E7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB12 DUP4 PUSH2 0xAF1 JUMP JUMPDEST SWAP3 POP PUSH2 0xB3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB51 DUP3 PUSH2 0x5E7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5C DUP4 PUSH2 0x5E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB6A DUP2 PUSH2 0x5E7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0x995 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB92 DUP3 PUSH2 0x5E7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9D DUP4 PUSH2 0x5E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBB5 JUMPI PUSH2 0xBB4 PUSH2 0x995 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0x5E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBDD PUSH0 DUP4 ADD DUP7 PUSH2 0x96D JUMP JUMPDEST PUSH2 0xBEA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xBF7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBBB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC12 PUSH0 DUP4 ADD DUP5 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x19DA PUSH2 0xC36 PUSH0 CODECOPY PUSH0 POP POP PUSH0 PUSH2 0x64A ADD MSTORE PUSH2 0x19DA PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAE169A50 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB921E163 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xFF010F5B EQ PUSH2 0x38D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D9 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x301AECB9 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x245 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x1BFDCD9D EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x406 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x443 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 DUP2 DUP6 DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x4E0 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x4ED DUP5 DUP4 DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FD PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A DUP6 DUP3 DUP6 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x515 DUP6 DUP6 DUP6 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x52A CALLER PUSH2 0x5DE JUMP JUMPDEST DUP1 PUSH2 0x56E JUMPI POP PUSH2 0x538 PUSH2 0x66E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x556 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A4 SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5B7 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D2 PUSH2 0x5C4 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x66E JUMP JUMPDEST DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5E8 DUP3 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63C PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x645 PUSH0 PUSH2 0xC52 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6A5 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x730 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x73D DUP2 DUP6 DUP6 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x751 CALLER PUSH2 0x5DE JUMP JUMPDEST DUP1 PUSH2 0x795 JUMPI POP PUSH2 0x75F PUSH2 0x66E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x77D PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7DE DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F9 PUSH2 0x7EB PUSH2 0x66E JUMP JUMPDEST PUSH2 0x7F3 PUSH2 0x9C3 JUMP JUMPDEST DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH2 0x80F DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x822 PUSH2 0x81C PUSH2 0x66E JUMP JUMPDEST DUP3 PUSH2 0xD15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B0 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x920 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x929 DUP2 PUSH2 0xC52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x934 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x999 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x9B0 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BD DUP3 DUP6 DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9CC PUSH2 0xD94 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDFC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EC PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0xA PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST DUP3 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x181A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF5 DUP4 DUP4 DUP4 PUSH2 0xFCB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB05 DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB87 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB78 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB86 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xDFC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB96 PUSH2 0x647 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD3 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF1 PUSH2 0x66E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH2 0xC14 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD90 PUSH0 DUP4 DUP4 PUSH2 0xFCB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 CALLDATASIZE SWAP1 POP SWAP1 POP PUSH0 PUSH2 0xDA5 PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI POP PUSH2 0xDBB CALLER PUSH2 0x5DE JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0xDEC JUMPI PUSH0 CALLDATASIZE DUP3 DUP5 SUB SWAP1 DUP1 SWAP3 PUSH2 0xDD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1898 JUMP JUMPDEST SWAP1 PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0xDF4 PUSH2 0x11F2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFC5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x1971 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10E9 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10A4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1130 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x117A JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11ED PUSH2 0x11F9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1243 DUP3 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x124D DUP2 DUP6 PUSH2 0x120B JUMP JUMPDEST SWAP4 POP PUSH2 0x125D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x121B JUMP JUMPDEST PUSH2 0x1266 DUP2 PUSH2 0x1229 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1289 DUP2 DUP5 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BE DUP3 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x12B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E9 DUP2 PUSH2 0x12C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1301 DUP2 PUSH2 0x12EF JUMP JUMPDEST DUP2 EQ PUSH2 0x130B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131C DUP2 PUSH2 0x12F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1356 DUP6 DUP3 DUP7 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138D PUSH0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x12EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DF DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F0 DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1401 DUP7 DUP3 DUP8 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142D DUP5 DUP3 DUP6 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144B DUP2 PUSH2 0x1436 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH0 DUP4 ADD DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148C DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149E DUP2 PUSH2 0x12B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D3 JUMPI PUSH2 0x14D2 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E0 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F1 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x153F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65772077616C6C65742063616E6E6F7420626520746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15B2 PUSH1 0x25 DUP4 PUSH2 0x120B JUMP JUMPDEST SWAP2 POP PUSH2 0x15BD DUP3 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15DF DUP2 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526577617264546F6B656E3A204D757374207573652061205472757374656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x466F72776172646572206F7220626520746865204F776E65722E000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1640 PUSH1 0x3A DUP4 PUSH2 0x120B JUMP JUMPDEST SWAP2 POP PUSH2 0x164B DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x166D DUP2 PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x16F6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH2 0x16D1 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x16E1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x16EF DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP5 POP PUSH2 0x16B6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x170E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x17C9 JUMP JUMPDEST DUP2 PUSH2 0x171B JUMPI PUSH0 SWAP1 POP PUSH2 0x17C9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1731 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x173B JUMPI PUSH2 0x176A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1674 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST POP PUSH2 0x17C9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x179F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x17AC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x16AD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17DA DUP3 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP PUSH2 0x17E5 DUP4 PUSH2 0x1436 JUMP JUMPDEST SWAP3 POP PUSH2 0x1812 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x16FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1824 DUP3 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP PUSH2 0x182F DUP4 PUSH2 0x12EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x183D DUP2 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x186E PUSH0 DUP4 ADD DUP7 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x187B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x1888 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1890 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x1894 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191E DUP4 DUP4 PUSH2 0x18D2 JUMP JUMPDEST DUP3 PUSH2 0x1929 DUP2 CALLDATALOAD PUSH2 0x18DC JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1964 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x1907 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x197B DUP3 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1986 DUP4 PUSH2 0x12EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x199E JUMPI PUSH2 0x199D PUSH2 0x1674 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xA9C2442728 0xDA MSTORE SWAP8 TLOAD GASPRICE 0x29 0xCE CALLF 0xCAB 0xC6 MSTORE8 0xDE PUSH13 0x2C3176F9B6EA4DB17629166864 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "235:2981:7:-:0;;;349:349;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;533:12;498:16;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1520:17:2;1500:37;;;;;;;;;;1451:93;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;563:14:7::3;600:10;:8;;;:10;;:::i;:::-;596:2;:14;;;;:::i;:::-;580:13;:30;;;;:::i;:::-;563:47;;641:16;621:36;;;;;;;;::::0;::::3;668:22;674:7;:5;;;:7;;:::i;:::-;683:6;668:5;;;:22;;:::i;:::-;552:146;349:349:::0;;;235:2981;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;7362:208:3:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:99::-;1926:6;1960:5;1954:12;1944:22;;1874:99;;;:::o;1979:180::-;2027:77;2024:1;2017:88;2124:4;2121:1;2114:15;2148:4;2145:1;2138:15;2165:180;2213:77;2210:1;2203:88;2310:4;2307:1;2300:15;2334:4;2331:1;2324:15;2351:320;2395:6;2432:1;2426:4;2422:12;2412:22;;2479:1;2473:4;2469:12;2500:18;2490:81;;2556:4;2548:6;2544:17;2534:27;;2490:81;2618:2;2610:6;2607:14;2587:18;2584:38;2581:84;;2637:18;;:::i;:::-;2581:84;2402:269;2351:320;;;:::o;2677:141::-;2726:4;2749:3;2741:11;;2772:3;2769:1;2762:14;2806:4;2803:1;2793:18;2785:26;;2677:141;;;:::o;2824:93::-;2861:6;2908:2;2903;2896:5;2892:14;2888:23;2878:33;;2824:93;;;:::o;2923:107::-;2967:8;3017:5;3011:4;3007:16;2986:37;;2923:107;;;;:::o;3036:393::-;3105:6;3155:1;3143:10;3139:18;3178:97;3208:66;3197:9;3178:97;:::i;:::-;3296:39;3326:8;3315:9;3296:39;:::i;:::-;3284:51;;3368:4;3364:9;3357:5;3353:21;3344:30;;3417:4;3407:8;3403:19;3396:5;3393:30;3383:40;;3112:317;;3036:393;;;;;:::o;3435:60::-;3463:3;3484:5;3477:12;;3435:60;;;:::o;3501:142::-;3551:9;3584:53;3602:34;3611:24;3629:5;3611:24;:::i;:::-;3602:34;:::i;:::-;3584:53;:::i;:::-;3571:66;;3501:142;;;:::o;3649:75::-;3692:3;3713:5;3706:12;;3649:75;;;:::o;3730:269::-;3840:39;3871:7;3840:39;:::i;:::-;3901:91;3950:41;3974:16;3950:41;:::i;:::-;3942:6;3935:4;3929:11;3901:91;:::i;:::-;3895:4;3888:105;3806:193;3730:269;;;:::o;4005:73::-;4050:3;4071:1;4064:8;;4005:73;:::o;4084:189::-;4161:32;;:::i;:::-;4202:65;4260:6;4252;4246:4;4202:65;:::i;:::-;4137:136;4084:189;;:::o;4279:186::-;4339:120;4356:3;4349:5;4346:14;4339:120;;;4410:39;4447:1;4440:5;4410:39;:::i;:::-;4383:1;4376:5;4372:13;4363:22;;4339:120;;;4279:186;;:::o;4471:543::-;4572:2;4567:3;4564:11;4561:446;;;4606:38;4638:5;4606:38;:::i;:::-;4690:29;4708:10;4690:29;:::i;:::-;4680:8;4676:44;4873:2;4861:10;4858:18;4855:49;;;4894:8;4879:23;;4855:49;4917:80;4973:22;4991:3;4973:22;:::i;:::-;4963:8;4959:37;4946:11;4917:80;:::i;:::-;4576:431;;4561:446;4471:543;;;:::o;5020:117::-;5074:8;5124:5;5118:4;5114:16;5093:37;;5020:117;;;;:::o;5143:169::-;5187:6;5220:51;5268:1;5264:6;5256:5;5253:1;5249:13;5220:51;:::i;:::-;5216:56;5301:4;5295;5291:15;5281:25;;5194:118;5143:169;;;;:::o;5317:295::-;5393:4;5539:29;5564:3;5558:4;5539:29;:::i;:::-;5531:37;;5601:3;5598:1;5594:11;5588:4;5585:21;5577:29;;5317:295;;;;:::o;5617:1395::-;5734:37;5767:3;5734:37;:::i;:::-;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5902:38;5934:4;5928:11;5902:38;:::i;:::-;5987:67;6047:6;6039;6033:4;5987:67;:::i;:::-;6081:1;6105:4;6092:17;;6137:2;6129:6;6126:14;6154:1;6149:618;;;;6811:1;6828:6;6825:77;;;6877:9;6872:3;6868:19;6862:26;6853:35;;6825:77;6928:67;6988:6;6981:5;6928:67;:::i;:::-;6922:4;6915:81;6784:222;6119:887;;6149:618;6201:4;6197:9;6189:6;6185:22;6235:37;6267:4;6235:37;:::i;:::-;6294:1;6308:208;6322:7;6319:1;6316:14;6308:208;;;6401:9;6396:3;6392:19;6386:26;6378:6;6371:42;6452:1;6444:6;6440:14;6430:24;;6499:2;6488:9;6484:18;6471:31;;6345:4;6342:1;6338:12;6333:17;;6308:208;;;6544:6;6535:7;6532:19;6529:179;;;6602:9;6597:3;6593:19;6587:26;6645:48;6687:4;6679:6;6675:17;6664:9;6645:48;:::i;:::-;6637:6;6630:64;6552:156;6529:179;6754:1;6750;6742:6;6738:14;6734:22;6728:4;6721:36;6156:611;;;6119:887;;5709:1303;;;5617:1395;;:::o;7018:118::-;7105:24;7123:5;7105:24;:::i;:::-;7100:3;7093:37;7018:118;;:::o;7142:222::-;7235:4;7273:2;7262:9;7258:18;7250:26;;7286:71;7354:1;7343:9;7339:17;7330:6;7286:71;:::i;:::-;7142:222;;;;:::o;7370:180::-;7418:77;7415:1;7408:88;7515:4;7512:1;7505:15;7539:4;7536:1;7529:15;7556:102;7598:8;7645:5;7642:1;7638:13;7617:34;;7556:102;;;:::o;7664:848::-;7725:5;7732:4;7756:6;7747:15;;7780:5;7771:14;;7794:712;7815:1;7805:8;7802:15;7794:712;;;7910:4;7905:3;7901:14;7895:4;7892:24;7889:50;;;7919:18;;:::i;:::-;7889:50;7969:1;7959:8;7955:16;7952:451;;;8384:4;8377:5;8373:16;8364:25;;7952:451;8434:4;8428;8424:15;8416:23;;8464:32;8487:8;8464:32;:::i;:::-;8452:44;;7794:712;;;7664:848;;;;;;;:::o;8518:1073::-;8572:5;8763:8;8753:40;;8784:1;8775:10;;8786:5;;8753:40;8812:4;8802:36;;8829:1;8820:10;;8831:5;;8802:36;8898:4;8946:1;8941:27;;;;8982:1;8977:191;;;;8891:277;;8941:27;8959:1;8950:10;;8961:5;;;8977:191;9022:3;9012:8;9009:17;9006:43;;;9029:18;;:::i;:::-;9006:43;9078:8;9075:1;9071:16;9062:25;;9113:3;9106:5;9103:14;9100:40;;;9120:18;;:::i;:::-;9100:40;9153:5;;;8891:277;;9277:2;9267:8;9264:16;9258:3;9252:4;9249:13;9245:36;9227:2;9217:8;9214:16;9209:2;9203:4;9200:12;9196:35;9180:111;9177:246;;;9333:8;9327:4;9323:19;9314:28;;9368:3;9361:5;9358:14;9355:40;;;9375:18;;:::i;:::-;9355:40;9408:5;;9177:246;9448:42;9486:3;9476:8;9470:4;9467:1;9448:42;:::i;:::-;9433:57;;;;9522:4;9517:3;9513:14;9506:5;9503:25;9500:51;;;9531:18;;:::i;:::-;9500:51;9580:4;9573:5;9569:16;9560:25;;8518:1073;;;;;;:::o;9597:86::-;9632:7;9672:4;9665:5;9661:16;9650:27;;9597:86;;;:::o;9689:281::-;9747:5;9771:23;9789:4;9771:23;:::i;:::-;9763:31;;9815:25;9831:8;9815:25;:::i;:::-;9803:37;;9859:104;9896:66;9886:8;9880:4;9859:104;:::i;:::-;9850:113;;9689:281;;;;:::o;9976:410::-;10016:7;10039:20;10057:1;10039:20;:::i;:::-;10034:25;;10073:20;10091:1;10073:20;:::i;:::-;10068:25;;10128:1;10125;10121:9;10150:30;10168:11;10150:30;:::i;:::-;10139:41;;10329:1;10320:7;10316:15;10313:1;10310:22;10290:1;10283:9;10263:83;10240:139;;10359:18;;:::i;:::-;10240:139;10024:362;9976:410;;;;:::o;10392:191::-;10432:3;10451:20;10469:1;10451:20;:::i;:::-;10446:25;;10485:20;10503:1;10485:20;:::i;:::-;10480:25;;10528:1;10525;10521:9;10514:16;;10549:3;10546:1;10543:10;10540:36;;;10556:18;;:::i;:::-;10540:36;10392:191;;;;:::o;10589:118::-;10676:24;10694:5;10676:24;:::i;:::-;10671:3;10664:37;10589:118;;:::o;10713:442::-;10862:4;10900:2;10889:9;10885:18;10877:26;;10913:71;10981:1;10970:9;10966:17;10957:6;10913:71;:::i;:::-;10994:72;11062:2;11051:9;11047:18;11038:6;10994:72;:::i;:::-;11076;11144:2;11133:9;11129:18;11120:6;11076:72;:::i;:::-;10713:442;;;;;;:::o;11161:222::-;11254:4;11292:2;11281:9;11277:18;11269:26;;11305:71;11373:1;11362:9;11358:17;11349:6;11305:71;:::i;:::-;11161:222;;;;:::o;235:2981:7:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_835": {
									"entryPoint": 2513,
									"id": 835,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_895": {
									"entryPoint": 3580,
									"id": 895,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3019,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contextSuffixLength_1143": {
									"entryPoint": 4580,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_contextSuffixLength_428": {
									"entryPoint": 4601,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_784": {
									"entryPoint": 3349,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1060": {
									"entryPoint": 4594,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1156": {
									"entryPoint": 2499,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_376": {
									"entryPoint": 3476,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_943": {
									"entryPoint": 2810,
									"id": 943,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3154,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_674": {
									"entryPoint": 2570,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_751": {
									"entryPoint": 4043,
									"id": 751,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_571": {
									"entryPoint": 2086,
									"id": 571,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_595": {
									"entryPoint": 1081,
									"id": 595,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_530": {
									"entryPoint": 1519,
									"id": 530,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimRewardPublic_1290": {
									"entryPoint": 2348,
									"id": 1290,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimReward_1253": {
									"entryPoint": 1864,
									"id": 1253,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@convertAmount_1199": {
									"entryPoint": 2531,
									"id": 1199,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_508": {
									"entryPoint": 1494,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseMyTokenPublic_1359": {
									"entryPoint": 1124,
									"id": 1359,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decreaseMyToken_1324": {
									"entryPoint": 1313,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseSupply_1219": {
									"entryPoint": 2045,
									"id": 1219,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isTrustedForwarder_1184": {
									"entryPoint": 1502,
									"id": 1184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isTrustedForwarder_328": {
									"entryPoint": 2957,
									"id": 328,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_490": {
									"entryPoint": 937,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1646,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1588,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_499": {
									"entryPoint": 1686,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_517": {
									"entryPoint": 1115,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_627": {
									"entryPoint": 1267,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2216,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_554": {
									"entryPoint": 1830,
									"id": 554,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@trustedForwarder_314": {
									"entryPoint": 1607,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_calldata_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_calldata_ptr": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes20": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5": {
									"entryPoint": 5464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14149:8",
										"nodeType": "YulBlock",
										"src": "0:14149:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4382:263:8",
													"nodeType": "YulBlock",
													"src": "4382:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:8",
																"nodeType": "YulBlock",
																"src": "4428:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:8"
																			},
																			"nativeSrc": "4430:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:8"
																		},
																		"nativeSrc": "4430:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:8"
																		},
																		"nativeSrc": "4399:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:8"
																},
																"nativeSrc": "4395:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:8"
															},
															"nativeSrc": "4392:119:8",
															"nodeType": "YulIf",
															"src": "4392:119:8"
														},
														{
															"nativeSrc": "4521:117:8",
															"nodeType": "YulBlock",
															"src": "4521:117:8",
															"statements": [
																{
																	"nativeSrc": "4536:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:8"
																				},
																				"nativeSrc": "4596:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:8"
																		},
																		"nativeSrc": "4575:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4316:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:8",
														"nodeType": "YulTypedName",
														"src": "4352:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:8",
														"nodeType": "YulTypedName",
														"src": "4363:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:8",
														"nodeType": "YulTypedName",
														"src": "4375:6:8",
														"type": ""
													}
												],
												"src": "4316:329:8"
											},
											{
												"body": {
													"nativeSrc": "4694:43:8",
													"nodeType": "YulBlock",
													"src": "4694:43:8",
													"statements": [
														{
															"nativeSrc": "4704:27:8",
															"nodeType": "YulAssignment",
															"src": "4704:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:8"
																},
																"nativeSrc": "4715:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:8",
														"nodeType": "YulTypedName",
														"src": "4676:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:8",
														"nodeType": "YulTypedName",
														"src": "4686:7:8",
														"type": ""
													}
												],
												"src": "4651:86:8"
											},
											{
												"body": {
													"nativeSrc": "4804:51:8",
													"nodeType": "YulBlock",
													"src": "4804:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:8"
																		},
																		"nativeSrc": "4826:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:8"
																},
																"nativeSrc": "4814:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:8"
															},
															"nativeSrc": "4814:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:8",
														"nodeType": "YulTypedName",
														"src": "4792:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:8",
														"nodeType": "YulTypedName",
														"src": "4799:3:8",
														"type": ""
													}
												],
												"src": "4743:112:8"
											},
											{
												"body": {
													"nativeSrc": "4955:120:8",
													"nodeType": "YulBlock",
													"src": "4955:120:8",
													"statements": [
														{
															"nativeSrc": "4965:26:8",
															"nodeType": "YulAssignment",
															"src": "4965:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:8"
																},
																"nativeSrc": "4973:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:8"
																		},
																		"nativeSrc": "5050:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:8"
																},
																"nativeSrc": "5001:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:8"
															},
															"nativeSrc": "5001:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:8",
														"nodeType": "YulTypedName",
														"src": "4927:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:8",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:8",
														"nodeType": "YulTypedName",
														"src": "4950:4:8",
														"type": ""
													}
												],
												"src": "4861:214:8"
											},
											{
												"body": {
													"nativeSrc": "5147:263:8",
													"nodeType": "YulBlock",
													"src": "5147:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:8",
																"nodeType": "YulBlock",
																"src": "5193:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:8"
																			},
																			"nativeSrc": "5195:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:8"
																		},
																		"nativeSrc": "5195:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:8"
																		},
																		"nativeSrc": "5164:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:8"
																},
																"nativeSrc": "5160:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:8"
															},
															"nativeSrc": "5157:119:8",
															"nodeType": "YulIf",
															"src": "5157:119:8"
														},
														{
															"nativeSrc": "5286:117:8",
															"nodeType": "YulBlock",
															"src": "5286:117:8",
															"statements": [
																{
																	"nativeSrc": "5301:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:8"
																				},
																				"nativeSrc": "5361:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:8"
																		},
																		"nativeSrc": "5340:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:8",
														"nodeType": "YulTypedName",
														"src": "5117:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:8",
														"nodeType": "YulTypedName",
														"src": "5128:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:8",
														"nodeType": "YulTypedName",
														"src": "5140:6:8",
														"type": ""
													}
												],
												"src": "5081:329:8"
											},
											{
												"body": {
													"nativeSrc": "5481:53:8",
													"nodeType": "YulBlock",
													"src": "5481:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:8"
																		},
																		"nativeSrc": "5503:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:8"
																},
																"nativeSrc": "5491:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:8"
															},
															"nativeSrc": "5491:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:8",
														"nodeType": "YulTypedName",
														"src": "5469:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:8",
														"nodeType": "YulTypedName",
														"src": "5476:3:8",
														"type": ""
													}
												],
												"src": "5416:118:8"
											},
											{
												"body": {
													"nativeSrc": "5638:124:8",
													"nodeType": "YulBlock",
													"src": "5638:124:8",
													"statements": [
														{
															"nativeSrc": "5648:26:8",
															"nodeType": "YulAssignment",
															"src": "5648:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:8"
																},
																"nativeSrc": "5656:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:8"
																		},
																		"nativeSrc": "5737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:8"
																},
																"nativeSrc": "5684:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:8"
															},
															"nativeSrc": "5684:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:8",
														"nodeType": "YulTypedName",
														"src": "5610:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:8",
														"nodeType": "YulTypedName",
														"src": "5622:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:8",
														"nodeType": "YulTypedName",
														"src": "5633:4:8",
														"type": ""
													}
												],
												"src": "5540:222:8"
											},
											{
												"body": {
													"nativeSrc": "5851:391:8",
													"nodeType": "YulBlock",
													"src": "5851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:8",
																"nodeType": "YulBlock",
																"src": "5897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:8"
																			},
																			"nativeSrc": "5899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:8"
																		},
																		"nativeSrc": "5899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:8"
																		},
																		"nativeSrc": "5868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:8"
																},
																"nativeSrc": "5864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nativeSrc": "5861:119:8",
															"nodeType": "YulIf",
															"src": "5861:119:8"
														},
														{
															"nativeSrc": "5990:117:8",
															"nodeType": "YulBlock",
															"src": "5990:117:8",
															"statements": [
																{
																	"nativeSrc": "6005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:8"
																				},
																				"nativeSrc": "6065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:8"
																		},
																		"nativeSrc": "6044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:8",
															"nodeType": "YulBlock",
															"src": "6117:118:8",
															"statements": [
																{
																	"nativeSrc": "6132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:8",
														"nodeType": "YulTypedName",
														"src": "5813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:8",
														"nodeType": "YulTypedName",
														"src": "5824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:8",
														"nodeType": "YulTypedName",
														"src": "5836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:8",
														"nodeType": "YulTypedName",
														"src": "5844:6:8",
														"type": ""
													}
												],
												"src": "5768:474:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6866:118:8",
													"nodeType": "YulBlock",
													"src": "6866:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:8"
																		},
																		"nativeSrc": "6884:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:8"
																	},
																	{
																		"hexValue": "4e65772077616c6c65742063616e6e6f7420626520746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "6900:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6900:34:8",
																		"type": "",
																		"value": "New wallet cannot be the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nativeSrc": "6877:58:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:58:8"
															},
															"nativeSrc": "6877:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "6877:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6956:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6956:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6964:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6964:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6952:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:8"
																		},
																		"nativeSrc": "6952:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6952:15:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "6969:7:8",
																		"nodeType": "YulLiteral",
																		"src": "6969:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6945:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:8"
																},
																"nativeSrc": "6945:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6945:32:8"
															},
															"nativeSrc": "6945:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "6945:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5",
												"nativeSrc": "6760:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:8",
														"nodeType": "YulTypedName",
														"src": "6858:6:8",
														"type": ""
													}
												],
												"src": "6760:224:8"
											},
											{
												"body": {
													"nativeSrc": "7136:220:8",
													"nodeType": "YulBlock",
													"src": "7136:220:8",
													"statements": [
														{
															"nativeSrc": "7146:74:8",
															"nodeType": "YulAssignment",
															"src": "7146:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7212:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7212:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7217:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7217:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7153:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7153:58:8"
																},
																"nativeSrc": "7153:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7153:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7146:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7318:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7318:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5",
																	"nativeSrc": "7229:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7229:88:8"
																},
																"nativeSrc": "7229:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7229:93:8"
															},
															"nativeSrc": "7229:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7229:93:8"
														},
														{
															"nativeSrc": "7331:19:8",
															"nodeType": "YulAssignment",
															"src": "7331:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7342:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7342:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7347:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7347:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7338:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7338:3:8"
																},
																"nativeSrc": "7338:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7338:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7331:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6990:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7124:3:8",
														"nodeType": "YulTypedName",
														"src": "7124:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7132:3:8",
														"nodeType": "YulTypedName",
														"src": "7132:3:8",
														"type": ""
													}
												],
												"src": "6990:366:8"
											},
											{
												"body": {
													"nativeSrc": "7533:248:8",
													"nodeType": "YulBlock",
													"src": "7533:248:8",
													"statements": [
														{
															"nativeSrc": "7543:26:8",
															"nodeType": "YulAssignment",
															"src": "7543:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7555:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7555:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7566:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7566:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7551:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7551:3:8"
																},
																"nativeSrc": "7551:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7551:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7543:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7543:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7590:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7590:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7601:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7601:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7586:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:8"
																		},
																		"nativeSrc": "7586:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7586:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7609:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7609:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7615:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7615:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7605:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7605:3:8"
																		},
																		"nativeSrc": "7605:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7605:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7579:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7579:6:8"
																},
																"nativeSrc": "7579:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7579:47:8"
															},
															"nativeSrc": "7579:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7579:47:8"
														},
														{
															"nativeSrc": "7635:139:8",
															"nodeType": "YulAssignment",
															"src": "7635:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7769:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7769:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7643:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7643:124:8"
																},
																"nativeSrc": "7643:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7643:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7635:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7362:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7513:9:8",
														"nodeType": "YulTypedName",
														"src": "7513:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7528:4:8",
														"nodeType": "YulTypedName",
														"src": "7528:4:8",
														"type": ""
													}
												],
												"src": "7362:419:8"
											},
											{
												"body": {
													"nativeSrc": "7893:139:8",
													"nodeType": "YulBlock",
													"src": "7893:139:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7915:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7923:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7923:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7911:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7911:3:8"
																		},
																		"nativeSrc": "7911:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7911:14:8"
																	},
																	{
																		"hexValue": "526577617264546f6b656e3a204d757374207573652061205472757374656420",
																		"kind": "string",
																		"nativeSrc": "7927:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7927:34:8",
																		"type": "",
																		"value": "RewardToken: Must use a Trusted "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7904:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7904:6:8"
																},
																"nativeSrc": "7904:58:8",
																"nodeType": "YulFunctionCall",
																"src": "7904:58:8"
															},
															"nativeSrc": "7904:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "7904:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7983:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7983:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7991:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7991:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7979:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7979:3:8"
																		},
																		"nativeSrc": "7979:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7979:15:8"
																	},
																	{
																		"hexValue": "466f72776172646572206f7220626520746865204f776e65722e",
																		"kind": "string",
																		"nativeSrc": "7996:28:8",
																		"nodeType": "YulLiteral",
																		"src": "7996:28:8",
																		"type": "",
																		"value": "Forwarder or be the Owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7972:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7972:6:8"
																},
																"nativeSrc": "7972:53:8",
																"nodeType": "YulFunctionCall",
																"src": "7972:53:8"
															},
															"nativeSrc": "7972:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "7972:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de",
												"nativeSrc": "7787:245:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7885:6:8",
														"nodeType": "YulTypedName",
														"src": "7885:6:8",
														"type": ""
													}
												],
												"src": "7787:245:8"
											},
											{
												"body": {
													"nativeSrc": "8184:220:8",
													"nodeType": "YulBlock",
													"src": "8184:220:8",
													"statements": [
														{
															"nativeSrc": "8194:74:8",
															"nodeType": "YulAssignment",
															"src": "8194:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8260:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8260:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8265:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8265:2:8",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8201:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8201:58:8"
																},
																"nativeSrc": "8201:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8201:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8194:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8194:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8366:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de",
																	"nativeSrc": "8277:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8277:88:8"
																},
																"nativeSrc": "8277:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8277:93:8"
															},
															"nativeSrc": "8277:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8277:93:8"
														},
														{
															"nativeSrc": "8379:19:8",
															"nodeType": "YulAssignment",
															"src": "8379:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8390:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8390:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8386:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8386:3:8"
																},
																"nativeSrc": "8386:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8386:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8379:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8379:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8038:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8172:3:8",
														"nodeType": "YulTypedName",
														"src": "8172:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8180:3:8",
														"nodeType": "YulTypedName",
														"src": "8180:3:8",
														"type": ""
													}
												],
												"src": "8038:366:8"
											},
											{
												"body": {
													"nativeSrc": "8581:248:8",
													"nodeType": "YulBlock",
													"src": "8581:248:8",
													"statements": [
														{
															"nativeSrc": "8591:26:8",
															"nodeType": "YulAssignment",
															"src": "8591:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8603:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8603:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8614:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8614:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8599:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8599:3:8"
																},
																"nativeSrc": "8599:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8599:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8591:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8591:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8638:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8638:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8649:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8649:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8634:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8634:3:8"
																		},
																		"nativeSrc": "8634:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8634:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8657:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8657:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8663:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8663:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8653:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8653:3:8"
																		},
																		"nativeSrc": "8653:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8653:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8627:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8627:6:8"
																},
																"nativeSrc": "8627:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8627:47:8"
															},
															"nativeSrc": "8627:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8627:47:8"
														},
														{
															"nativeSrc": "8683:139:8",
															"nodeType": "YulAssignment",
															"src": "8683:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8817:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8817:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8691:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8691:124:8"
																},
																"nativeSrc": "8691:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8691:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8683:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8683:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8410:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8561:9:8",
														"nodeType": "YulTypedName",
														"src": "8561:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8576:4:8",
														"nodeType": "YulTypedName",
														"src": "8576:4:8",
														"type": ""
													}
												],
												"src": "8410:419:8"
											},
											{
												"body": {
													"nativeSrc": "8863:152:8",
													"nodeType": "YulBlock",
													"src": "8863:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8880:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8880:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8883:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8883:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8873:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8873:6:8"
																},
																"nativeSrc": "8873:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8873:88:8"
															},
															"nativeSrc": "8873:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8873:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8977:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8977:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8980:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8980:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8970:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8970:6:8"
																},
																"nativeSrc": "8970:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8970:15:8"
															},
															"nativeSrc": "8970:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8970:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9001:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9001:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9004:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9004:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8994:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:8"
																},
																"nativeSrc": "8994:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8994:15:8"
															},
															"nativeSrc": "8994:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8994:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8835:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8835:180:8"
											},
											{
												"body": {
													"nativeSrc": "9072:51:8",
													"nodeType": "YulBlock",
													"src": "9072:51:8",
													"statements": [
														{
															"nativeSrc": "9082:34:8",
															"nodeType": "YulAssignment",
															"src": "9082:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9107:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9107:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9110:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9110:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9103:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9103:3:8"
																},
																"nativeSrc": "9103:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9103:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9082:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "9082:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9021:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9053:5:8",
														"nodeType": "YulTypedName",
														"src": "9053:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9063:8:8",
														"nodeType": "YulTypedName",
														"src": "9063:8:8",
														"type": ""
													}
												],
												"src": "9021:102:8"
											},
											{
												"body": {
													"nativeSrc": "9202:775:8",
													"nodeType": "YulBlock",
													"src": "9202:775:8",
													"statements": [
														{
															"nativeSrc": "9212:15:8",
															"nodeType": "YulAssignment",
															"src": "9212:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "9221:6:8",
																"nodeType": "YulIdentifier",
																"src": "9221:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9212:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9212:5:8"
																}
															]
														},
														{
															"nativeSrc": "9236:14:8",
															"nodeType": "YulAssignment",
															"src": "9236:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "9245:5:8",
																"nodeType": "YulIdentifier",
																"src": "9245:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9236:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9236:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9294:677:8",
																"nodeType": "YulBlock",
																"src": "9294:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9382:22:8",
																			"nodeType": "YulBlock",
																			"src": "9382:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9384:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9384:16:8"
																						},
																						"nativeSrc": "9384:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9384:18:8"
																					},
																					"nativeSrc": "9384:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9384:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9360:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9360:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9370:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9370:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9375:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9375:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9366:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9366:3:8"
																					},
																					"nativeSrc": "9366:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9366:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9357:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9357:2:8"
																			},
																			"nativeSrc": "9357:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9357:24:8"
																		},
																		"nativeSrc": "9354:50:8",
																		"nodeType": "YulIf",
																		"src": "9354:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "9449:419:8",
																			"nodeType": "YulBlock",
																			"src": "9449:419:8",
																			"statements": [
																				{
																					"nativeSrc": "9829:25:8",
																					"nodeType": "YulAssignment",
																					"src": "9829:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9842:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "9842:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9849:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "9849:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9838:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9838:3:8"
																						},
																						"nativeSrc": "9838:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9838:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9829:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9829:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9424:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9424:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9434:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9434:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9420:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9420:3:8"
																			},
																			"nativeSrc": "9420:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9420:16:8"
																		},
																		"nativeSrc": "9417:451:8",
																		"nodeType": "YulIf",
																		"src": "9417:451:8"
																	},
																	{
																		"nativeSrc": "9881:23:8",
																		"nodeType": "YulAssignment",
																		"src": "9881:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9893:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9893:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9899:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9899:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9889:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9889:3:8"
																			},
																			"nativeSrc": "9889:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9889:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9881:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9881:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9917:44:8",
																		"nodeType": "YulAssignment",
																		"src": "9917:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9952:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9952:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9929:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "9929:22:8"
																			},
																			"nativeSrc": "9929:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9929:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9917:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "9917:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9270:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9270:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9280:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9280:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9267:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9267:2:8"
																},
																"nativeSrc": "9267:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9267:15:8"
															},
															"nativeSrc": "9259:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9283:2:8",
																"nodeType": "YulBlock",
																"src": "9283:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9263:3:8",
																"nodeType": "YulBlock",
																"src": "9263:3:8",
																"statements": []
															},
															"src": "9259:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9129:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9157:6:8",
														"nodeType": "YulTypedName",
														"src": "9157:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9165:5:8",
														"nodeType": "YulTypedName",
														"src": "9165:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9172:8:8",
														"nodeType": "YulTypedName",
														"src": "9172:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9182:3:8",
														"nodeType": "YulTypedName",
														"src": "9182:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9190:5:8",
														"nodeType": "YulTypedName",
														"src": "9190:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9197:4:8",
														"nodeType": "YulTypedName",
														"src": "9197:4:8",
														"type": ""
													}
												],
												"src": "9129:848:8"
											},
											{
												"body": {
													"nativeSrc": "10043:1013:8",
													"nodeType": "YulBlock",
													"src": "10043:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10238:20:8",
																"nodeType": "YulBlock",
																"src": "10238:20:8",
																"statements": [
																	{
																		"nativeSrc": "10240:10:8",
																		"nodeType": "YulAssignment",
																		"src": "10240:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10249:1:8",
																			"nodeType": "YulLiteral",
																			"src": "10249:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10240:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10240:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10251:5:8",
																		"nodeType": "YulLeave",
																		"src": "10251:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10228:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10228:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10221:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:8"
																},
																"nativeSrc": "10221:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10221:16:8"
															},
															"nativeSrc": "10218:40:8",
															"nodeType": "YulIf",
															"src": "10218:40:8"
														},
														{
															"body": {
																"nativeSrc": "10283:20:8",
																"nodeType": "YulBlock",
																"src": "10283:20:8",
																"statements": [
																	{
																		"nativeSrc": "10285:10:8",
																		"nodeType": "YulAssignment",
																		"src": "10285:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10294:1:8",
																			"nodeType": "YulLiteral",
																			"src": "10294:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10285:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10285:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10296:5:8",
																		"nodeType": "YulLeave",
																		"src": "10296:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10277:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10277:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10270:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:8"
																},
																"nativeSrc": "10270:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10270:12:8"
															},
															"nativeSrc": "10267:36:8",
															"nodeType": "YulIf",
															"src": "10267:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10413:20:8",
																		"nodeType": "YulBlock",
																		"src": "10413:20:8",
																		"statements": [
																			{
																				"nativeSrc": "10415:10:8",
																				"nodeType": "YulAssignment",
																				"src": "10415:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10424:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10424:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10415:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10415:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10426:5:8",
																				"nodeType": "YulLeave",
																				"src": "10426:5:8"
																			}
																		]
																	},
																	"nativeSrc": "10406:27:8",
																	"nodeType": "YulCase",
																	"src": "10406:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10411:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10457:176:8",
																		"nodeType": "YulBlock",
																		"src": "10457:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10492:22:8",
																					"nodeType": "YulBlock",
																					"src": "10492:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10494:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "10494:16:8"
																								},
																								"nativeSrc": "10494:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10494:18:8"
																							},
																							"nativeSrc": "10494:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10494:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10477:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "10477:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10487:3:8",
																							"nodeType": "YulLiteral",
																							"src": "10487:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10474:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "10474:2:8"
																					},
																					"nativeSrc": "10474:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10474:17:8"
																				},
																				"nativeSrc": "10471:43:8",
																				"nodeType": "YulIf",
																				"src": "10471:43:8"
																			},
																			{
																				"nativeSrc": "10527:25:8",
																				"nodeType": "YulAssignment",
																				"src": "10527:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10540:1:8",
																							"nodeType": "YulLiteral",
																							"src": "10540:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10543:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "10543:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10536:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10536:3:8"
																					},
																					"nativeSrc": "10536:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10536:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10527:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10527:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10583:22:8",
																					"nodeType": "YulBlock",
																					"src": "10583:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10585:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "10585:16:8"
																								},
																								"nativeSrc": "10585:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "10585:18:8"
																							},
																							"nativeSrc": "10585:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "10585:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10571:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "10571:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10578:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10578:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10568:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "10568:2:8"
																					},
																					"nativeSrc": "10568:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "10568:14:8"
																				},
																				"nativeSrc": "10565:40:8",
																				"nodeType": "YulIf",
																				"src": "10565:40:8"
																			},
																			{
																				"nativeSrc": "10618:5:8",
																				"nodeType": "YulLeave",
																				"src": "10618:5:8"
																			}
																		]
																	},
																	"nativeSrc": "10442:191:8",
																	"nodeType": "YulCase",
																	"src": "10442:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10447:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10447:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10363:4:8",
																"nodeType": "YulIdentifier",
																"src": "10363:4:8"
															},
															"nativeSrc": "10356:277:8",
															"nodeType": "YulSwitch",
															"src": "10356:277:8"
														},
														{
															"body": {
																"nativeSrc": "10765:123:8",
																"nodeType": "YulBlock",
																"src": "10765:123:8",
																"statements": [
																	{
																		"nativeSrc": "10779:28:8",
																		"nodeType": "YulAssignment",
																		"src": "10779:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10792:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "10792:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10798:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "10798:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10788:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10788:3:8"
																			},
																			"nativeSrc": "10788:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10788:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10779:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10779:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10838:22:8",
																			"nodeType": "YulBlock",
																			"src": "10838:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10840:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "10840:16:8"
																						},
																						"nativeSrc": "10840:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10840:18:8"
																					},
																					"nativeSrc": "10840:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "10840:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10826:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "10826:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10833:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10833:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10823:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "10823:2:8"
																			},
																			"nativeSrc": "10823:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10823:14:8"
																		},
																		"nativeSrc": "10820:40:8",
																		"nodeType": "YulIf",
																		"src": "10820:40:8"
																	},
																	{
																		"nativeSrc": "10873:5:8",
																		"nodeType": "YulLeave",
																		"src": "10873:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10668:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "10668:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10674:2:8",
																						"nodeType": "YulLiteral",
																						"src": "10674:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10665:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10665:2:8"
																				},
																				"nativeSrc": "10665:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10665:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10682:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "10682:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10692:2:8",
																						"nodeType": "YulLiteral",
																						"src": "10692:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10679:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10679:2:8"
																				},
																				"nativeSrc": "10679:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10679:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10661:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10661:3:8"
																		},
																		"nativeSrc": "10661:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10661:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10717:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "10717:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10723:3:8",
																						"nodeType": "YulLiteral",
																						"src": "10723:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10714:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10714:2:8"
																				},
																				"nativeSrc": "10714:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10714:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10732:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "10732:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10742:2:8",
																						"nodeType": "YulLiteral",
																						"src": "10742:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10729:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10729:2:8"
																				},
																				"nativeSrc": "10729:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10729:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10710:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10710:3:8"
																		},
																		"nativeSrc": "10710:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10710:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10645:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10645:2:8"
																},
																"nativeSrc": "10645:111:8",
																"nodeType": "YulFunctionCall",
																"src": "10645:111:8"
															},
															"nativeSrc": "10642:246:8",
															"nodeType": "YulIf",
															"src": "10642:246:8"
														},
														{
															"nativeSrc": "10898:57:8",
															"nodeType": "YulAssignment",
															"src": "10898:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10932:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10932:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10935:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10935:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10941:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10941:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10951:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10951:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10913:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "10913:18:8"
																},
																"nativeSrc": "10913:42:8",
																"nodeType": "YulFunctionCall",
																"src": "10913:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10898:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10898:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "10905:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10905:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10994:22:8",
																"nodeType": "YulBlock",
																"src": "10994:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10996:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10996:16:8"
																			},
																			"nativeSrc": "10996:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10996:18:8"
																		},
																		"nativeSrc": "10996:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10996:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10971:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10971:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10982:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10982:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10987:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10987:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10978:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10978:3:8"
																		},
																		"nativeSrc": "10978:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10978:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10968:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10968:2:8"
																},
																"nativeSrc": "10968:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10968:25:8"
															},
															"nativeSrc": "10965:51:8",
															"nodeType": "YulIf",
															"src": "10965:51:8"
														},
														{
															"nativeSrc": "11025:25:8",
															"nodeType": "YulAssignment",
															"src": "11025:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11038:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11038:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11045:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11045:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11034:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:8"
																},
																"nativeSrc": "11034:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11034:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11025:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11025:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9983:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10013:4:8",
														"nodeType": "YulTypedName",
														"src": "10013:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10019:8:8",
														"nodeType": "YulTypedName",
														"src": "10019:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10029:3:8",
														"nodeType": "YulTypedName",
														"src": "10029:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10037:5:8",
														"nodeType": "YulTypedName",
														"src": "10037:5:8",
														"type": ""
													}
												],
												"src": "9983:1073:8"
											},
											{
												"body": {
													"nativeSrc": "11126:217:8",
													"nodeType": "YulBlock",
													"src": "11126:217:8",
													"statements": [
														{
															"nativeSrc": "11136:31:8",
															"nodeType": "YulAssignment",
															"src": "11136:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11162:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11162:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11144:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11144:17:8"
																},
																"nativeSrc": "11144:23:8",
																"nodeType": "YulFunctionCall",
																"src": "11144:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11136:4:8"
																}
															]
														},
														{
															"nativeSrc": "11176:37:8",
															"nodeType": "YulAssignment",
															"src": "11176:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11204:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "11204:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "11188:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "11188:15:8"
																},
																"nativeSrc": "11188:25:8",
																"nodeType": "YulFunctionCall",
																"src": "11188:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11176:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "11176:8:8"
																}
															]
														},
														{
															"nativeSrc": "11223:113:8",
															"nodeType": "YulAssignment",
															"src": "11223:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11253:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11253:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11259:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "11259:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11269:66:8",
																		"nodeType": "YulLiteral",
																		"src": "11269:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11232:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "11232:20:8"
																},
																"nativeSrc": "11232:104:8",
																"nodeType": "YulFunctionCall",
																"src": "11232:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11223:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11223:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11062:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11101:4:8",
														"nodeType": "YulTypedName",
														"src": "11101:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11107:8:8",
														"nodeType": "YulTypedName",
														"src": "11107:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11120:5:8",
														"nodeType": "YulTypedName",
														"src": "11120:5:8",
														"type": ""
													}
												],
												"src": "11062:281:8"
											},
											{
												"body": {
													"nativeSrc": "11397:362:8",
													"nodeType": "YulBlock",
													"src": "11397:362:8",
													"statements": [
														{
															"nativeSrc": "11407:25:8",
															"nodeType": "YulAssignment",
															"src": "11407:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11430:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11430:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11412:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11412:17:8"
																},
																"nativeSrc": "11412:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11412:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11407:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11407:1:8"
																}
															]
														},
														{
															"nativeSrc": "11441:25:8",
															"nodeType": "YulAssignment",
															"src": "11441:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11464:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11464:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11446:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11446:17:8"
																},
																"nativeSrc": "11446:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11446:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11441:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11441:1:8"
																}
															]
														},
														{
															"nativeSrc": "11475:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11475:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11498:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11498:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11501:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11501:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11494:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11494:3:8"
																},
																"nativeSrc": "11494:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11494:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11479:11:8",
																	"nodeType": "YulTypedName",
																	"src": "11479:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11512:41:8",
															"nodeType": "YulAssignment",
															"src": "11512:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11541:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "11541:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11523:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11523:17:8"
																},
																"nativeSrc": "11523:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11523:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11512:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "11512:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11730:22:8",
																"nodeType": "YulBlock",
																"src": "11730:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11732:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11732:16:8"
																			},
																			"nativeSrc": "11732:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11732:18:8"
																		},
																		"nativeSrc": "11732:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11732:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11663:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11663:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11656:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "11656:6:8"
																				},
																				"nativeSrc": "11656:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11656:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11686:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11686:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11693:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "11693:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11702:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "11702:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11689:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11689:3:8"
																						},
																						"nativeSrc": "11689:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11689:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11683:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11683:2:8"
																				},
																				"nativeSrc": "11683:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11683:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11636:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "11636:2:8"
																		},
																		"nativeSrc": "11636:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11636:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11616:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11616:6:8"
																},
																"nativeSrc": "11616:113:8",
																"nodeType": "YulFunctionCall",
																"src": "11616:113:8"
															},
															"nativeSrc": "11613:139:8",
															"nodeType": "YulIf",
															"src": "11613:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11349:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11380:1:8",
														"nodeType": "YulTypedName",
														"src": "11380:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11383:1:8",
														"nodeType": "YulTypedName",
														"src": "11383:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11389:7:8",
														"nodeType": "YulTypedName",
														"src": "11389:7:8",
														"type": ""
													}
												],
												"src": "11349:410:8"
											},
											{
												"body": {
													"nativeSrc": "11919:288:8",
													"nodeType": "YulBlock",
													"src": "11919:288:8",
													"statements": [
														{
															"nativeSrc": "11929:26:8",
															"nodeType": "YulAssignment",
															"src": "11929:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11941:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11941:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11952:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11952:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11937:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11937:3:8"
																},
																"nativeSrc": "11937:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11937:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11929:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12009:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12009:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12022:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12022:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12033:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12033:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12018:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12018:3:8"
																		},
																		"nativeSrc": "12018:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12018:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11965:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11965:43:8"
																},
																"nativeSrc": "11965:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11965:71:8"
															},
															"nativeSrc": "11965:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11965:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12090:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12090:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12103:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12103:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12114:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12114:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12099:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12099:3:8"
																		},
																		"nativeSrc": "12099:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12099:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12046:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12046:43:8"
																},
																"nativeSrc": "12046:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12046:72:8"
															},
															"nativeSrc": "12046:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12046:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12172:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12172:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12185:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12185:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12196:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12196:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12181:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12181:3:8"
																		},
																		"nativeSrc": "12181:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12181:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12128:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12128:43:8"
																},
																"nativeSrc": "12128:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12128:72:8"
															},
															"nativeSrc": "12128:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12128:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11765:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11875:9:8",
														"nodeType": "YulTypedName",
														"src": "11875:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11887:6:8",
														"nodeType": "YulTypedName",
														"src": "11887:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11895:6:8",
														"nodeType": "YulTypedName",
														"src": "11895:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11903:6:8",
														"nodeType": "YulTypedName",
														"src": "11903:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11914:4:8",
														"nodeType": "YulTypedName",
														"src": "11914:4:8",
														"type": ""
													}
												],
												"src": "11765:442:8"
											},
											{
												"body": {
													"nativeSrc": "12302:28:8",
													"nodeType": "YulBlock",
													"src": "12302:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12319:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12319:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12322:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12322:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12312:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12312:6:8"
																},
																"nativeSrc": "12312:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12312:12:8"
															},
															"nativeSrc": "12312:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "12312:12:8"
														}
													]
												},
												"name": "revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a",
												"nativeSrc": "12213:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12213:117:8"
											},
											{
												"body": {
													"nativeSrc": "12425:28:8",
													"nodeType": "YulBlock",
													"src": "12425:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12442:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12442:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12445:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12445:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12435:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12435:6:8"
																},
																"nativeSrc": "12435:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12435:12:8"
															},
															"nativeSrc": "12435:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "12435:12:8"
														}
													]
												},
												"name": "revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c",
												"nativeSrc": "12336:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12336:117:8"
											},
											{
												"body": {
													"nativeSrc": "12585:343:8",
													"nodeType": "YulBlock",
													"src": "12585:343:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12623:83:8",
																"nodeType": "YulBlock",
																"src": "12623:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a",
																				"nativeSrc": "12625:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "12625:77:8"
																			},
																			"nativeSrc": "12625:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12625:79:8"
																		},
																		"nativeSrc": "12625:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12625:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nativeSrc": "12601:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "12601:10:8"
																	},
																	{
																		"name": "endIndex",
																		"nativeSrc": "12613:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "12613:8:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12598:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12598:2:8"
																},
																"nativeSrc": "12598:24:8",
																"nodeType": "YulFunctionCall",
																"src": "12598:24:8"
															},
															"nativeSrc": "12595:111:8",
															"nodeType": "YulIf",
															"src": "12595:111:8"
														},
														{
															"body": {
																"nativeSrc": "12739:83:8",
																"nodeType": "YulBlock",
																"src": "12739:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c",
																				"nativeSrc": "12741:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "12741:77:8"
																			},
																			"nativeSrc": "12741:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12741:79:8"
																		},
																		"nativeSrc": "12741:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12741:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nativeSrc": "12721:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "12721:8:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12731:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12731:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12718:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12718:2:8"
																},
																"nativeSrc": "12718:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12718:20:8"
															},
															"nativeSrc": "12715:107:8",
															"nodeType": "YulIf",
															"src": "12715:107:8"
														},
														{
															"nativeSrc": "12831:44:8",
															"nodeType": "YulAssignment",
															"src": "12831:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12848:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12848:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nativeSrc": "12860:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "12860:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12872:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12872:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12856:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:8"
																		},
																		"nativeSrc": "12856:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12856:18:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12844:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12844:3:8"
																},
																"nativeSrc": "12844:31:8",
																"nodeType": "YulFunctionCall",
																"src": "12844:31:8"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nativeSrc": "12831:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "12831:9:8"
																}
															]
														},
														{
															"nativeSrc": "12884:38:8",
															"nodeType": "YulAssignment",
															"src": "12884:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nativeSrc": "12901:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "12901:8:8"
																	},
																	{
																		"name": "startIndex",
																		"nativeSrc": "12911:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "12911:10:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12897:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12897:3:8"
																},
																"nativeSrc": "12897:25:8",
																"nodeType": "YulFunctionCall",
																"src": "12897:25:8"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nativeSrc": "12884:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "12884:9:8"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nativeSrc": "12459:469:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12523:6:8",
														"nodeType": "YulTypedName",
														"src": "12523:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12531:6:8",
														"nodeType": "YulTypedName",
														"src": "12531:6:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12539:10:8",
														"nodeType": "YulTypedName",
														"src": "12539:10:8",
														"type": ""
													},
													{
														"name": "endIndex",
														"nativeSrc": "12551:8:8",
														"nodeType": "YulTypedName",
														"src": "12551:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nativeSrc": "12564:9:8",
														"nodeType": "YulTypedName",
														"src": "12564:9:8",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nativeSrc": "12575:9:8",
														"nodeType": "YulTypedName",
														"src": "12575:9:8",
														"type": ""
													}
												],
												"src": "12459:469:8"
											},
											{
												"body": {
													"nativeSrc": "12999:31:8",
													"nodeType": "YulBlock",
													"src": "12999:31:8",
													"statements": [
														{
															"nativeSrc": "13010:13:8",
															"nodeType": "YulAssignment",
															"src": "13010:13:8",
															"value": {
																"name": "len",
																"nativeSrc": "13020:3:8",
																"nodeType": "YulIdentifier",
																"src": "13020:3:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13010:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13010:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_calldata_ptr",
												"nativeSrc": "12934:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12977:5:8",
														"nodeType": "YulTypedName",
														"src": "12977:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12984:3:8",
														"nodeType": "YulTypedName",
														"src": "12984:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12992:6:8",
														"nodeType": "YulTypedName",
														"src": "12992:6:8",
														"type": ""
													}
												],
												"src": "12934:96:8"
											},
											{
												"body": {
													"nativeSrc": "13094:28:8",
													"nodeType": "YulBlock",
													"src": "13094:28:8",
													"statements": [
														{
															"nativeSrc": "13104:11:8",
															"nodeType": "YulAssignment",
															"src": "13104:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "13112:3:8",
																"nodeType": "YulIdentifier",
																"src": "13112:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13104:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13104:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_calldata_ptr",
												"nativeSrc": "13036:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13081:3:8",
														"nodeType": "YulTypedName",
														"src": "13081:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13089:4:8",
														"nodeType": "YulTypedName",
														"src": "13089:4:8",
														"type": ""
													}
												],
												"src": "13036:86:8"
											},
											{
												"body": {
													"nativeSrc": "13173:105:8",
													"nodeType": "YulBlock",
													"src": "13173:105:8",
													"statements": [
														{
															"nativeSrc": "13183:89:8",
															"nodeType": "YulAssignment",
															"src": "13183:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13198:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13198:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13205:66:8",
																		"nodeType": "YulLiteral",
																		"src": "13205:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13194:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13194:3:8"
																},
																"nativeSrc": "13194:78:8",
																"nodeType": "YulFunctionCall",
																"src": "13194:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13183:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "13183:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes20",
												"nativeSrc": "13128:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13155:5:8",
														"nodeType": "YulTypedName",
														"src": "13155:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13165:7:8",
														"nodeType": "YulTypedName",
														"src": "13165:7:8",
														"type": ""
													}
												],
												"src": "13128:150:8"
											},
											{
												"body": {
													"nativeSrc": "13337:54:8",
													"nodeType": "YulBlock",
													"src": "13337:54:8",
													"statements": [
														{
															"nativeSrc": "13347:37:8",
															"nodeType": "YulAssignment",
															"src": "13347:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13372:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13372:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13378:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13378:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13368:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13368:3:8"
																},
																"nativeSrc": "13368:16:8",
																"nodeType": "YulFunctionCall",
																"src": "13368:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13347:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "13347:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13284:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13312:4:8",
														"nodeType": "YulTypedName",
														"src": "13312:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13318:5:8",
														"nodeType": "YulTypedName",
														"src": "13318:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13328:8:8",
														"nodeType": "YulTypedName",
														"src": "13328:8:8",
														"type": ""
													}
												],
												"src": "13284:107:8"
											},
											{
												"body": {
													"nativeSrc": "13494:455:8",
													"nodeType": "YulBlock",
													"src": "13494:455:8",
													"statements": [
														{
															"nativeSrc": "13505:59:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13505:59:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13553:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13553:5:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "13560:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13560:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_calldata_ptr",
																	"nativeSrc": "13519:33:8",
																	"nodeType": "YulIdentifier",
																	"src": "13519:33:8"
																},
																"nativeSrc": "13519:45:8",
																"nodeType": "YulFunctionCall",
																"src": "13519:45:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13509:6:8",
																	"nodeType": "YulTypedName",
																	"src": "13509:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13573:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13573:21:8",
															"value": {
																"name": "array",
																"nativeSrc": "13589:5:8",
																"nodeType": "YulIdentifier",
																"src": "13589:5:8"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "13577:8:8",
																	"nodeType": "YulTypedName",
																	"src": "13577:8:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13604:50:8",
															"nodeType": "YulAssignment",
															"src": "13604:50:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "13644:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "13644:8:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13631:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "13631:12:8"
																		},
																		"nativeSrc": "13631:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13631:22:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes20",
																	"nativeSrc": "13613:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13613:17:8"
																},
																"nativeSrc": "13613:41:8",
																"nodeType": "YulFunctionCall",
																"src": "13613:41:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13604:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13604:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13682:260:8",
																"nodeType": "YulBlock",
																"src": "13682:260:8",
																"statements": [
																	{
																		"nativeSrc": "13696:236:8",
																		"nodeType": "YulAssignment",
																		"src": "13696:236:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "13726:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "13726:5:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13793:1:8",
																									"nodeType": "YulLiteral",
																									"src": "13793:1:8",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13800:2:8",
																											"nodeType": "YulLiteral",
																											"src": "13800:2:8",
																											"type": "",
																											"value": "20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "13804:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "13804:6:8"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "13796:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "13796:3:8"
																									},
																									"nativeSrc": "13796:15:8",
																									"nodeType": "YulFunctionCall",
																									"src": "13796:15:8"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "13789:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "13789:3:8"
																							},
																							"nativeSrc": "13789:23:8",
																							"nodeType": "YulFunctionCall",
																							"src": "13789:23:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13834:66:8",
																							"nodeType": "YulLiteral",
																							"src": "13834:66:8",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "13749:18:8",
																						"nodeType": "YulIdentifier",
																						"src": "13749:18:8"
																					},
																					"nativeSrc": "13749:169:8",
																					"nodeType": "YulFunctionCall",
																					"src": "13749:169:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13705:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "13705:3:8"
																			},
																			"nativeSrc": "13705:227:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13705:227:8"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "13696:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13696:5:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13670:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13678:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13678:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13667:2:8"
																},
																"nativeSrc": "13667:14:8",
																"nodeType": "YulFunctionCall",
																"src": "13667:14:8"
															},
															"nativeSrc": "13664:278:8",
															"nodeType": "YulIf",
															"src": "13664:278:8"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20",
												"nativeSrc": "13397:552:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "13473:5:8",
														"nodeType": "YulTypedName",
														"src": "13473:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13480:3:8",
														"nodeType": "YulTypedName",
														"src": "13480:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13488:5:8",
														"nodeType": "YulTypedName",
														"src": "13488:5:8",
														"type": ""
													}
												],
												"src": "13397:552:8"
											},
											{
												"body": {
													"nativeSrc": "13999:147:8",
													"nodeType": "YulBlock",
													"src": "13999:147:8",
													"statements": [
														{
															"nativeSrc": "14009:25:8",
															"nodeType": "YulAssignment",
															"src": "14009:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14032:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14032:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14014:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14014:17:8"
																},
																"nativeSrc": "14014:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14014:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14009:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14009:1:8"
																}
															]
														},
														{
															"nativeSrc": "14043:25:8",
															"nodeType": "YulAssignment",
															"src": "14043:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14066:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14066:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14048:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14048:17:8"
																},
																"nativeSrc": "14048:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14048:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14043:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14043:1:8"
																}
															]
														},
														{
															"nativeSrc": "14077:16:8",
															"nodeType": "YulAssignment",
															"src": "14077:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14088:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14088:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14091:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14091:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14084:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14084:3:8"
																},
																"nativeSrc": "14084:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14084:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14077:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14077:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14117:22:8",
																"nodeType": "YulBlock",
																"src": "14117:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14119:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14119:16:8"
																			},
																			"nativeSrc": "14119:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14119:18:8"
																		},
																		"nativeSrc": "14119:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14119:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14109:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14109:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14112:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14112:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14106:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14106:2:8"
																},
																"nativeSrc": "14106:10:8",
																"nodeType": "YulFunctionCall",
																"src": "14106:10:8"
															},
															"nativeSrc": "14103:36:8",
															"nodeType": "YulIf",
															"src": "14103:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13955:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13986:1:8",
														"nodeType": "YulTypedName",
														"src": "13986:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13989:1:8",
														"nodeType": "YulTypedName",
														"src": "13989:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13995:3:8",
														"nodeType": "YulTypedName",
														"src": "13995:3:8",
														"type": ""
													}
												],
												"src": "13955:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"New wallet cannot be the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de(memPtr) {\n\n        mstore(add(memPtr, 0), \"RewardToken: Must use a Trusted \")\n\n        mstore(add(memPtr, 32), \"Forwarder or be the Owner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes20(calldataload(dataArea))\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"294": [
									{
										"length": 32,
										"start": 1610
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061011f575f3560e01c8063715018a6116100ab578063ae169a501161006f578063ae169a5014610309578063b921e16314610325578063dd62ed3e14610341578063f2fde38b14610371578063ff010f5b1461038d5761011f565b8063715018a6146102755780637da0a8771461027f5780638da5cb5b1461029d57806395d89b41146102bb578063a9059cbb146102d95761011f565b806323b872dd116100f257806323b872dd146101ab578063301aecb9146101db578063313ce567146101f7578063572b6c051461021557806370a08231146102455761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd146101715780631bfdcd9d1461018f575b5f5ffd5b61012b6103a9565b6040516101389190611271565b60405180910390f35b61015b60048036038101906101569190611322565b610439565b604051610168919061137a565b60405180910390f35b61017961045b565b60405161018691906113a2565b60405180910390f35b6101a960048036038101906101a49190611322565b610464565b005b6101c560048036038101906101c091906113bb565b6104f3565b6040516101d2919061137a565b60405180910390f35b6101f560048036038101906101f0919061140b565b610521565b005b6101ff6105d6565b60405161020c9190611451565b60405180910390f35b61022f600480360381019061022a919061146a565b6105de565b60405161023c919061137a565b60405180910390f35b61025f600480360381019061025a919061146a565b6105ef565b60405161026c91906113a2565b60405180910390f35b61027d610634565b005b610287610647565b60405161029491906114a4565b60405180910390f35b6102a561066e565b6040516102b291906114a4565b60405180910390f35b6102c3610696565b6040516102d09190611271565b60405180910390f35b6102f360048036038101906102ee9190611322565b610726565b604051610300919061137a565b60405180910390f35b610323600480360381019061031e919061140b565b610748565b005b61033f600480360381019061033a919061140b565b6107fd565b005b61035b600480360381019061035691906114bd565b610826565b60405161036891906113a2565b60405180910390f35b61038b6004803603810190610386919061146a565b6108a8565b005b6103a760048036038101906103a29190611322565b61092c565b005b6060600380546103b890611528565b80601f01602080910402602001604051908101604052809291908181526020018280546103e490611528565b801561042f5780601f106104065761010080835404028352916020019161042f565b820191905f5260205f20905b81548152906001019060200180831161041257829003601f168201915b5050505050905090565b5f5f6104436109c3565b90506104508185856109d1565b600191505092915050565b5f600254905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c9906115c8565b60405180910390fd5b5f3390505f6104e0836109e3565b90506104ed848383610a0a565b50505050565b5f5f6104fd6109c3565b905061050a858285610afa565b610515858585610a0a565b60019150509392505050565b61052a336105de565b8061056e575061053861066e565b73ffffffffffffffffffffffffffffffffffffffff166105566109c3565b73ffffffffffffffffffffffffffffffffffffffff16145b6105ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a490611656565b60405180910390fd5b5f6105b7826109e3565b90506105d26105c46109c3565b6105cc61066e565b83610a0a565b5050565b5f6012905090565b5f6105e882610b8d565b9050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61063c610bcb565b6106455f610c52565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106a590611528565b80601f01602080910402602001604051908101604052809291908181526020018280546106d190611528565b801561071c5780601f106106f35761010080835404028352916020019161071c565b820191905f5260205f20905b8154815290600101906020018083116106ff57829003601f168201915b5050505050905090565b5f5f6107306109c3565b905061073d818585610a0a565b600191505092915050565b610751336105de565b80610795575061075f61066e565b73ffffffffffffffffffffffffffffffffffffffff1661077d6109c3565b73ffffffffffffffffffffffffffffffffffffffff16145b6107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611656565b60405180910390fd5b5f6107de826109e3565b90506107f96107eb61066e565b6107f36109c3565b83610a0a565b5050565b610805610bcb565b5f61080f826109e3565b905061082261081c61066e565b82610d15565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108b0610bcb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610920575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161091791906114a4565b60405180910390fd5b61092981610c52565b50565b610934610bcb565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610999906115c8565b60405180910390fd5b5f3390505f6109b0836109e3565b90506109bd828583610a0a565b50505050565b5f6109cc610d94565b905090565b6109de8383836001610dfc565b505050565b5f6109ec6105d6565b600a6109f891906117d0565b82610a03919061181a565b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a7a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7191906114a4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aea575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ae191906114a4565b60405180910390fd5b610af5838383610fcb565b505050565b5f610b058484610826565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b875781811015610b78578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b6f9392919061185b565b60405180910390fd5b610b8684848484035f610dfc565b5b50505050565b5f610b96610647565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610bd36109c3565b73ffffffffffffffffffffffffffffffffffffffff16610bf161066e565b73ffffffffffffffffffffffffffffffffffffffff1614610c5057610c146109c3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c4791906114a4565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d85575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d7c91906114a4565b60405180910390fd5b610d905f8383610fcb565b5050565b5f5f5f36905090505f610da56111e4565b9050808210158015610dbc5750610dbb336105de565b5b15610dec575f36828403908092610dd593929190611898565b90610de09190611913565b60601c92505050610df9565b610df46111f2565b925050505b90565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e6c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e6391906114a4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610edc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ed391906114a4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fc5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fbc91906113a2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361101b578060025f82825461100f9190611971565b925050819055506110e9565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110a4578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161109b9392919061185b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611130578060025f828254039250508190555061117a565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111d791906113a2565b60405180910390a3505050565b5f6111ed6111f9565b905090565b5f33905090565b5f6014905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61124382611201565b61124d818561120b565b935061125d81856020860161121b565b61126681611229565b840191505092915050565b5f6020820190508181035f8301526112898184611239565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112be82611295565b9050919050565b6112ce816112b4565b81146112d8575f5ffd5b50565b5f813590506112e9816112c5565b92915050565b5f819050919050565b611301816112ef565b811461130b575f5ffd5b50565b5f8135905061131c816112f8565b92915050565b5f5f6040838503121561133857611337611291565b5b5f611345858286016112db565b92505060206113568582860161130e565b9150509250929050565b5f8115159050919050565b61137481611360565b82525050565b5f60208201905061138d5f83018461136b565b92915050565b61139c816112ef565b82525050565b5f6020820190506113b55f830184611393565b92915050565b5f5f5f606084860312156113d2576113d1611291565b5b5f6113df868287016112db565b93505060206113f0868287016112db565b92505060406114018682870161130e565b9150509250925092565b5f602082840312156114205761141f611291565b5b5f61142d8482850161130e565b91505092915050565b5f60ff82169050919050565b61144b81611436565b82525050565b5f6020820190506114645f830184611442565b92915050565b5f6020828403121561147f5761147e611291565b5b5f61148c848285016112db565b91505092915050565b61149e816112b4565b82525050565b5f6020820190506114b75f830184611495565b92915050565b5f5f604083850312156114d3576114d2611291565b5b5f6114e0858286016112db565b92505060206114f1858286016112db565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061153f57607f821691505b602082108103611552576115516114fb565b5b50919050565b7f4e65772077616c6c65742063616e6e6f7420626520746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6115b260258361120b565b91506115bd82611558565b604082019050919050565b5f6020820190508181035f8301526115df816115a6565b9050919050565b7f526577617264546f6b656e3a204d7573742075736520612054727573746564205f8201527f466f72776172646572206f7220626520746865204f776e65722e000000000000602082015250565b5f611640603a8361120b565b915061164b826115e6565b604082019050919050565b5f6020820190508181035f83015261166d81611634565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156116f6578086048111156116d2576116d1611674565b5b60018516156116e15780820291505b80810290506116ef856116a1565b94506116b6565b94509492505050565b5f8261170e57600190506117c9565b8161171b575f90506117c9565b8160018114611731576002811461173b5761176a565b60019150506117c9565b60ff84111561174d5761174c611674565b5b8360020a91508482111561176457611763611674565b5b506117c9565b5060208310610133831016604e8410600b841016171561179f5782820a90508381111561179a57611799611674565b5b6117c9565b6117ac84848460016116ad565b925090508184048111156117c3576117c2611674565b5b81810290505b9392505050565b5f6117da826112ef565b91506117e583611436565b92506118127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846116ff565b905092915050565b5f611824826112ef565b915061182f836112ef565b925082820261183d816112ef565b9150828204841483151761185457611853611674565b5b5092915050565b5f60608201905061186e5f830186611495565b61187b6020830185611393565b6118886040830184611393565b949350505050565b5f5ffd5b5f5ffd5b5f5f858511156118ab576118aa611890565b5b838611156118bc576118bb611894565b5b6001850283019150848603905094509492505050565b5f82905092915050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b5f82821b905092915050565b5f61191e83836118d2565b8261192981356118dc565b92506014821015611969576119647fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802611907565b831692505b505092915050565b5f61197b826112ef565b9150611986836112ef565b925082820190508082111561199e5761199d611674565b5b9291505056fea264697066735822122064a9c2442728da52975c3a29cee30cabc653de6c2c3176f9b6ea4db17629166864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAE169A50 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xB921E163 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xFF010F5B EQ PUSH2 0x38D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D9 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x301AECB9 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x245 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x1BFDCD9D EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x406 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x443 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 DUP2 DUP6 DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x4E0 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x4ED DUP5 DUP4 DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FD PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x50A DUP6 DUP3 DUP6 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x515 DUP6 DUP6 DUP6 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x52A CALLER PUSH2 0x5DE JUMP JUMPDEST DUP1 PUSH2 0x56E JUMPI POP PUSH2 0x538 PUSH2 0x66E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x556 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A4 SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5B7 DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D2 PUSH2 0x5C4 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x66E JUMP JUMPDEST DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5E8 DUP3 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63C PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x645 PUSH0 PUSH2 0xC52 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6A5 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x1528 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x730 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x73D DUP2 DUP6 DUP6 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x751 CALLER PUSH2 0x5DE JUMP JUMPDEST DUP1 PUSH2 0x795 JUMPI POP PUSH2 0x75F PUSH2 0x66E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x77D PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7DE DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7F9 PUSH2 0x7EB PUSH2 0x66E JUMP JUMPDEST PUSH2 0x7F3 PUSH2 0x9C3 JUMP JUMPDEST DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH2 0x80F DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x822 PUSH2 0x81C PUSH2 0x66E JUMP JUMPDEST DUP3 PUSH2 0xD15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B0 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x920 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x929 DUP2 PUSH2 0xC52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x934 PUSH2 0xBCB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x999 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0x9B0 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BD DUP3 DUP6 DUP4 PUSH2 0xA0A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9CC PUSH2 0xD94 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDFC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EC PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0xA PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST DUP3 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x181A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF5 DUP4 DUP4 DUP4 PUSH2 0xFCB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB05 DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB87 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB78 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB86 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xDFC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB96 PUSH2 0x647 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD3 PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF1 PUSH2 0x66E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH2 0xC14 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD90 PUSH0 DUP4 DUP4 PUSH2 0xFCB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 CALLDATASIZE SWAP1 POP SWAP1 POP PUSH0 PUSH2 0xDA5 PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI POP PUSH2 0xDBB CALLER PUSH2 0x5DE JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0xDEC JUMPI PUSH0 CALLDATASIZE DUP3 DUP5 SUB SWAP1 DUP1 SWAP3 PUSH2 0xDD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1898 JUMP JUMPDEST SWAP1 PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x60 SHR SWAP3 POP POP POP PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0xDF4 PUSH2 0x11F2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFC5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x1971 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10E9 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10A4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1130 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x117A JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11ED PUSH2 0x11F9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1243 DUP3 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x124D DUP2 DUP6 PUSH2 0x120B JUMP JUMPDEST SWAP4 POP PUSH2 0x125D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x121B JUMP JUMPDEST PUSH2 0x1266 DUP2 PUSH2 0x1229 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1289 DUP2 DUP5 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BE DUP3 PUSH2 0x1295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x12B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E9 DUP2 PUSH2 0x12C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1301 DUP2 PUSH2 0x12EF JUMP JUMPDEST DUP2 EQ PUSH2 0x130B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x131C DUP2 PUSH2 0x12F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1356 DUP6 DUP3 DUP7 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x1360 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138D PUSH0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139C DUP2 PUSH2 0x12EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DF DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F0 DUP7 DUP3 DUP8 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1401 DUP7 DUP3 DUP8 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142D DUP5 DUP3 DUP6 ADD PUSH2 0x130E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144B DUP2 PUSH2 0x1436 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH0 DUP4 ADD DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148C DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149E DUP2 PUSH2 0x12B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D3 JUMPI PUSH2 0x14D2 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E0 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14F1 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x153F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65772077616C6C65742063616E6E6F7420626520746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15B2 PUSH1 0x25 DUP4 PUSH2 0x120B JUMP JUMPDEST SWAP2 POP PUSH2 0x15BD DUP3 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15DF DUP2 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526577617264546F6B656E3A204D757374207573652061205472757374656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x466F72776172646572206F7220626520746865204F776E65722E000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1640 PUSH1 0x3A DUP4 PUSH2 0x120B JUMP JUMPDEST SWAP2 POP PUSH2 0x164B DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x166D DUP2 PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x16F6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH2 0x16D1 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x16E1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x16EF DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP5 POP PUSH2 0x16B6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x170E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x17C9 JUMP JUMPDEST DUP2 PUSH2 0x171B JUMPI PUSH0 SWAP1 POP PUSH2 0x17C9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1731 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x173B JUMPI PUSH2 0x176A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1674 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST POP PUSH2 0x17C9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x179F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x17AC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x16AD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17DA DUP3 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP PUSH2 0x17E5 DUP4 PUSH2 0x1436 JUMP JUMPDEST SWAP3 POP PUSH2 0x1812 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x16FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1824 DUP3 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP PUSH2 0x182F DUP4 PUSH2 0x12EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x183D DUP2 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x1674 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x186E PUSH0 DUP4 ADD DUP7 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x187B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x1888 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1890 JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x1894 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191E DUP4 DUP4 PUSH2 0x18D2 JUMP JUMPDEST DUP3 PUSH2 0x1929 DUP2 CALLDATALOAD PUSH2 0x18DC JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1964 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x1907 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x197B DUP3 PUSH2 0x12EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1986 DUP4 PUSH2 0x12EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x199E JUMPI PUSH2 0x199D PUSH2 0x1674 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xA9C2442728 0xDA MSTORE SWAP8 TLOAD GASPRICE 0x29 0xCE CALLF 0xCAB 0xC6 MSTORE8 0xDE PUSH13 0x2C3176F9B6EA4DB17629166864 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "235:2981:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2891:322:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4680:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2536:347:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1325:204:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1624:107:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1847:343:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1664:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2198:330:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;2891:322:7:-;3010:1;2986:26;;:12;:26;;;2978:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3065:14;3082:10;3065:27;;3105:20;3128:21;3142:6;3128:13;:21::i;:::-;3105:44;;3160:45;3170:12;3184:6;3192:12;3160:9;:45::i;:::-;2967:246;;2891:322;;:::o;4680:244:3:-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2536:347:7:-;2617:30;2636:10;2617:18;:30::i;:::-;:57;;;;2667:7;:5;:7::i;:::-;2651:23;;:12;:10;:12::i;:::-;:23;;;2617:57;2595:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;2774:20;2797:21;2811:6;2797:13;:21::i;:::-;2774:44;;2829:46;2839:12;:10;:12::i;:::-;2853:7;:5;:7::i;:::-;2862:12;2829:9;:46::i;:::-;2584:299;2536:347;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;1325:204:7:-;1456:4;1486:35;1511:9;1486:24;:35::i;:::-;1479:42;;1325:204;;;:::o;2933:116:3:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1624:107:2:-;1681:7;1707:17;1700:24;;1624:107;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1847:343:7:-;1924:30;1943:10;1924:18;:30::i;:::-;:57;;;;1974:7;:5;:7::i;:::-;1958:23;;:12;:10;:12::i;:::-;:23;;;1924:57;1902:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:20;2104:21;2118:6;2104:13;:21::i;:::-;2081:44;;2136:46;2146:7;:5;:7::i;:::-;2155:12;:10;:12::i;:::-;2169;2136:9;:46::i;:::-;1891:299;1847:343;:::o;1664:175::-;1531:13:0;:11;:13::i;:::-;1732:28:7::1;1763:21;1777:6;1763:13;:21::i;:::-;1732:52;;1795:36;1801:7;:5;:7::i;:::-;1810:20;1795:5;:36::i;:::-;1721:118;1664:175:::0;:::o;3455:140:3:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2198:330:7:-;1531:13:0;:11;:13::i;:::-;2323:1:7::1;2299:26;;:12;:26;;::::0;2291:76:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2378:14;2395:10;2378:27;;2418:20;2441:21;2455:6;2441:13;:21::i;:::-;2418:44;;2475:45;2485:6;2493:12;2507;2475:9;:45::i;:::-;2280:248;;2198:330:::0;;:::o;950:178::-;1069:7;1102:18;:16;:18::i;:::-;1095:25;;950:178;:::o;8630:128:3:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;1537:119:7:-;1598:7;1638:10;:8;:10::i;:::-;1634:2;:14;;;;:::i;:::-;1625:6;:23;;;;:::i;:::-;1618:30;;1537:119;;;:::o;5297:300:3:-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;1832:137:2:-;1908:4;1944:18;:16;:18::i;:::-;1931:31;;:9;:31;;;1924:38;;1832:137;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7362:208:3:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2206:471:2:-;2268:7;2287:22;2312:8;;:15;;2287:40;;2337:27;2367:22;:20;:22::i;:::-;2337:52;;2421:19;2403:14;:37;;:71;;;;;2444:30;2463:10;2444:18;:30::i;:::-;2403:71;2399:272;;;2541:8;;2567:19;2550:14;:36;2541:47;;;;;;;;;:::i;:::-;2533:56;;;;;:::i;:::-;2525:65;;2518:72;;;;;;2399:272;2642:18;:16;:18::i;:::-;2635:25;;;;2206:471;;:::o;9605:432:3:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;744:198:7:-;873:7;906:28;:26;:28::i;:::-;899:35;;744:198;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;3469:107:2:-;3541:7;3567:2;3560:9;;3469:107;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:224::-;6900:34;6896:1;6888:6;6884:14;6877:58;6969:7;6964:2;6956:6;6952:15;6945:32;6760:224;:::o;6990:366::-;7132:3;7153:67;7217:2;7212:3;7153:67;:::i;:::-;7146:74;;7229:93;7318:3;7229:93;:::i;:::-;7347:2;7342:3;7338:12;7331:19;;6990:366;;;:::o;7362:419::-;7528:4;7566:2;7555:9;7551:18;7543:26;;7615:9;7609:4;7605:20;7601:1;7590:9;7586:17;7579:47;7643:131;7769:4;7643:131;:::i;:::-;7635:139;;7362:419;;;:::o;7787:245::-;7927:34;7923:1;7915:6;7911:14;7904:58;7996:28;7991:2;7983:6;7979:15;7972:53;7787:245;:::o;8038:366::-;8180:3;8201:67;8265:2;8260:3;8201:67;:::i;:::-;8194:74;;8277:93;8366:3;8277:93;:::i;:::-;8395:2;8390:3;8386:12;8379:19;;8038:366;;;:::o;8410:419::-;8576:4;8614:2;8603:9;8599:18;8591:26;;8663:9;8657:4;8653:20;8649:1;8638:9;8634:17;8627:47;8691:131;8817:4;8691:131;:::i;:::-;8683:139;;8410:419;;;:::o;8835:180::-;8883:77;8880:1;8873:88;8980:4;8977:1;8970:15;9004:4;9001:1;8994:15;9021:102;9063:8;9110:5;9107:1;9103:13;9082:34;;9021:102;;;:::o;9129:848::-;9190:5;9197:4;9221:6;9212:15;;9245:5;9236:14;;9259:712;9280:1;9270:8;9267:15;9259:712;;;9375:4;9370:3;9366:14;9360:4;9357:24;9354:50;;;9384:18;;:::i;:::-;9354:50;9434:1;9424:8;9420:16;9417:451;;;9849:4;9842:5;9838:16;9829:25;;9417:451;9899:4;9893;9889:15;9881:23;;9929:32;9952:8;9929:32;:::i;:::-;9917:44;;9259:712;;;9129:848;;;;;;;:::o;9983:1073::-;10037:5;10228:8;10218:40;;10249:1;10240:10;;10251:5;;10218:40;10277:4;10267:36;;10294:1;10285:10;;10296:5;;10267:36;10363:4;10411:1;10406:27;;;;10447:1;10442:191;;;;10356:277;;10406:27;10424:1;10415:10;;10426:5;;;10442:191;10487:3;10477:8;10474:17;10471:43;;;10494:18;;:::i;:::-;10471:43;10543:8;10540:1;10536:16;10527:25;;10578:3;10571:5;10568:14;10565:40;;;10585:18;;:::i;:::-;10565:40;10618:5;;;10356:277;;10742:2;10732:8;10729:16;10723:3;10717:4;10714:13;10710:36;10692:2;10682:8;10679:16;10674:2;10668:4;10665:12;10661:35;10645:111;10642:246;;;10798:8;10792:4;10788:19;10779:28;;10833:3;10826:5;10823:14;10820:40;;;10840:18;;:::i;:::-;10820:40;10873:5;;10642:246;10913:42;10951:3;10941:8;10935:4;10932:1;10913:42;:::i;:::-;10898:57;;;;10987:4;10982:3;10978:14;10971:5;10968:25;10965:51;;;10996:18;;:::i;:::-;10965:51;11045:4;11038:5;11034:16;11025:25;;9983:1073;;;;;;:::o;11062:281::-;11120:5;11144:23;11162:4;11144:23;:::i;:::-;11136:31;;11188:25;11204:8;11188:25;:::i;:::-;11176:37;;11232:104;11269:66;11259:8;11253:4;11232:104;:::i;:::-;11223:113;;11062:281;;;;:::o;11349:410::-;11389:7;11412:20;11430:1;11412:20;:::i;:::-;11407:25;;11446:20;11464:1;11446:20;:::i;:::-;11441:25;;11501:1;11498;11494:9;11523:30;11541:11;11523:30;:::i;:::-;11512:41;;11702:1;11693:7;11689:15;11686:1;11683:22;11663:1;11656:9;11636:83;11613:139;;11732:18;;:::i;:::-;11613:139;11397:362;11349:410;;;;:::o;11765:442::-;11914:4;11952:2;11941:9;11937:18;11929:26;;11965:71;12033:1;12022:9;12018:17;12009:6;11965:71;:::i;:::-;12046:72;12114:2;12103:9;12099:18;12090:6;12046:72;:::i;:::-;12128;12196:2;12185:9;12181:18;12172:6;12128:72;:::i;:::-;11765:442;;;;;;:::o;12213:117::-;12322:1;12319;12312:12;12336:117;12445:1;12442;12435:12;12459:469;12564:9;12575;12613:8;12601:10;12598:24;12595:111;;;12625:79;;:::i;:::-;12595:111;12731:6;12721:8;12718:20;12715:107;;;12741:79;;:::i;:::-;12715:107;12872:1;12860:10;12856:18;12848:6;12844:31;12831:44;;12911:10;12901:8;12897:25;12884:38;;12459:469;;;;;;;:::o;12934:96::-;12992:6;13020:3;13010:13;;12934:96;;;;:::o;13128:150::-;13165:7;13205:66;13198:5;13194:78;13183:89;;13128:150;;;:::o;13284:107::-;13328:8;13378:5;13372:4;13368:16;13347:37;;13284:107;;;;:::o;13397:552::-;13488:5;13519:45;13560:3;13553:5;13519:45;:::i;:::-;13589:5;13613:41;13644:8;13631:22;13613:41;:::i;:::-;13604:50;;13678:2;13670:6;13667:14;13664:278;;;13749:169;13834:66;13804:6;13800:2;13796:15;13793:1;13789:23;13749:169;:::i;:::-;13726:5;13705:227;13696:236;;13664:278;13494:455;;13397:552;;;;:::o;13955:191::-;13995:3;14014:20;14032:1;14014:20;:::i;:::-;14009:25;;14048:20;14066:1;14048:20;:::i;:::-;14043:25;;14091:1;14088;14084:9;14077:16;;14112:3;14109:1;14106:10;14103:36;;;14119:18;;:::i;:::-;14103:36;13955:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1323600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"claimReward(uint256)": "infinite",
								"claimRewardPublic(address,uint256)": "infinite",
								"decimals()": "405",
								"decreaseMyToken(uint256)": "infinite",
								"decreaseMyTokenPublic(address,uint256)": "infinite",
								"increaseSupply(uint256)": "infinite",
								"isTrustedForwarder(address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"trustedForwarder()": "infinite"
							},
							"internal": {
								"_contextSuffixLength()": "56",
								"_msgData()": "infinite",
								"_msgSender()": "infinite",
								"convertAmount(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 349,
									"end": 698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 533,
									"end": 545,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 498,
									"end": 514,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "526577617264203120546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "5257442031000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1520,
									"end": 1537,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1451,
									"end": 1544,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 563,
									"end": 577,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 610,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 608,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 600,
									"end": 608,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 608,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 600,
									"end": 610,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 610,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 600,
									"end": 610,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 600,
									"end": 610,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 610,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 596,
									"end": 598,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 596,
									"end": 610,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 596,
									"end": 610,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 596,
									"end": 610,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 596,
									"end": 610,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 596,
									"end": 610,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 596,
									"end": 610,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 596,
									"end": 610,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 580,
									"end": 593,
									"modifierDepth": 3,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 580,
									"end": 610,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 563,
									"end": 610,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 563,
									"end": 610,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 657,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 621,
									"end": 657,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 668,
									"end": 690,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 674,
									"end": 679,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 674,
									"end": 679,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 674,
									"end": 679,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 674,
									"end": 681,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 674,
									"end": 681,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 683,
									"end": 689,
									"modifierDepth": 3,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 668,
									"end": 673,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 668,
									"end": 673,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 668,
									"end": 673,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 668,
									"end": 690,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 668,
									"end": 690,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 668,
									"end": 690,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 668,
									"end": 690,
									"modifierDepth": 3,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 668,
									"end": 690,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 552,
									"end": 698,
									"modifierDepth": 3,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1926,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1960,
									"end": 1965,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2104,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2024,
									"end": 2025,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2124,
									"end": 2128,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2121,
									"end": 2122,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2114,
									"end": 2129,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2153,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2290,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2203,
									"end": 2291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2310,
									"end": 2314,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2307,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2338,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2331,
									"end": 2332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2324,
									"end": 2339,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2395,
									"end": 2401,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2433,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2426,
									"end": 2430,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2422,
									"end": 2434,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2480,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2481,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2556,
									"end": 2560,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2548,
									"end": 2554,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2561,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2618,
									"end": 2620,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2610,
									"end": 2616,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2587,
									"end": 2605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2584,
									"end": 2622,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2637,
									"end": 2655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2752,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2775,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2810,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2803,
									"end": 2804,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2793,
									"end": 2811,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2861,
									"end": 2867,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2908,
									"end": 2910,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2896,
									"end": 2901,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2906,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2911,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2975,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3022,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3007,
									"end": 3023,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3111,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3143,
									"end": 3153,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3208,
									"end": 3274,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3178,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3326,
									"end": 3334,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3324,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3296,
									"end": 3335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3368,
									"end": 3372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3362,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3374,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3415,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3422,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3396,
									"end": 3401,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3393,
									"end": 3423,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3466,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3484,
									"end": 3489,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3551,
									"end": 3560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3629,
									"end": 3634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3611,
									"end": 3635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3602,
									"end": 3636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3584,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3692,
									"end": 3695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3713,
									"end": 3718,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3871,
									"end": 3878,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3840,
									"end": 3879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3974,
									"end": 3990,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 3950,
									"end": 3991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3940,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3901,
									"end": 3992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3895,
									"end": 3899,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3888,
									"end": 3993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3806,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4053,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4071,
									"end": 4072,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4064,
									"end": 4072,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 4161,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4260,
									"end": 4266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4250,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 4202,
									"end": 4267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4137,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4356,
									"end": 4359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4349,
									"end": 4354,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4346,
									"end": 4360,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4447,
									"end": 4448,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4440,
									"end": 4445,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4410,
									"end": 4449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4383,
									"end": 4384,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4376,
									"end": 4381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4385,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4572,
									"end": 4574,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4567,
									"end": 4570,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4564,
									"end": 4575,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4638,
									"end": 4643,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 4606,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4708,
									"end": 4718,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 4690,
									"end": 4719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4676,
									"end": 4720,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 4875,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4871,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4894,
									"end": 4902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4991,
									"end": 4994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 4973,
									"end": 4995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4963,
									"end": 4971,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4946,
									"end": 4957,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4917,
									"end": 4997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5124,
									"end": 5129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5118,
									"end": 5122,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5114,
									"end": 5130,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5193,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5268,
									"end": 5269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5264,
									"end": 5270,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5253,
									"end": 5254,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5249,
									"end": 5262,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 5220,
									"end": 5271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5216,
									"end": 5272,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5305,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5295,
									"end": 5299,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5306,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5194,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5393,
									"end": 5397,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5564,
									"end": 5567,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 5539,
									"end": 5568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5601,
									"end": 5604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5598,
									"end": 5599,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5594,
									"end": 5605,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5588,
									"end": 5592,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5585,
									"end": 5606,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5767,
									"end": 5770,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5734,
									"end": 5771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5836,
									"end": 5854,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5828,
									"end": 5834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5825,
									"end": 5855,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 5858,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 5934,
									"end": 5938,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5939,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5902,
									"end": 5940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6047,
									"end": 6053,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6045,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6037,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 5987,
									"end": 6054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6140,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6155,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6811,
									"end": 6812,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6828,
									"end": 6834,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6877,
									"end": 6886,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6872,
									"end": 6875,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6868,
									"end": 6887,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6888,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6988,
									"end": 6994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6981,
									"end": 6986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 6928,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6922,
									"end": 6926,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6915,
									"end": 6996,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6784,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6201,
									"end": 6205,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6197,
									"end": 6206,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6195,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6185,
									"end": 6207,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6267,
									"end": 6271,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 6235,
									"end": 6272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6294,
									"end": 6295,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6322,
									"end": 6329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6319,
									"end": 6320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6316,
									"end": 6330,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6410,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6411,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6412,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6378,
									"end": 6384,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6371,
									"end": 6413,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6453,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6444,
									"end": 6450,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6440,
									"end": 6454,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6499,
									"end": 6501,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6488,
									"end": 6497,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6484,
									"end": 6502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6342,
									"end": 6343,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6338,
									"end": 6350,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6544,
									"end": 6550,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6535,
									"end": 6542,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6532,
									"end": 6551,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6602,
									"end": 6611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6597,
									"end": 6600,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6593,
									"end": 6612,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6587,
									"end": 6613,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6687,
									"end": 6691,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6679,
									"end": 6685,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6675,
									"end": 6692,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6664,
									"end": 6673,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 6645,
									"end": 6693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6637,
									"end": 6643,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6630,
									"end": 6694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6552,
									"end": 6708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6754,
									"end": 6755,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6750,
									"end": 6751,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6742,
									"end": 6748,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6738,
									"end": 6752,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6734,
									"end": 6756,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6728,
									"end": 6732,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6757,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7123,
									"end": 7128,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7105,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7103,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7093,
									"end": 7130,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7235,
									"end": 7239,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7275,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7262,
									"end": 7271,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7258,
									"end": 7276,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7354,
									"end": 7355,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7343,
									"end": 7352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7339,
									"end": 7356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7330,
									"end": 7336,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7286,
									"end": 7357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7550,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 7370,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7418,
									"end": 7495,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7415,
									"end": 7416,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7408,
									"end": 7496,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7515,
									"end": 7519,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7512,
									"end": 7513,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7505,
									"end": 7520,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7539,
									"end": 7543,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7529,
									"end": 7544,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7598,
									"end": 7606,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7650,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7642,
									"end": 7643,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7638,
									"end": 7651,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7617,
									"end": 7651,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7617,
									"end": 7651,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7732,
									"end": 7736,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7756,
									"end": 7762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7747,
									"end": 7762,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7747,
									"end": 7762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7780,
									"end": 7785,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7771,
									"end": 7785,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7771,
									"end": 7785,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7815,
									"end": 7816,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7805,
									"end": 7813,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7802,
									"end": 7817,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7910,
									"end": 7914,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7905,
									"end": 7908,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7901,
									"end": 7915,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 7895,
									"end": 7899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7892,
									"end": 7916,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 7919,
									"end": 7937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7969,
									"end": 7970,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7959,
									"end": 7967,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7955,
									"end": 7971,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8384,
									"end": 8388,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8377,
									"end": 8382,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8373,
									"end": 8389,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8389,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8389,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8438,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8428,
									"end": 8432,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8424,
									"end": 8439,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8416,
									"end": 8439,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8416,
									"end": 8439,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8487,
									"end": 8495,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 8464,
									"end": 8496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8452,
									"end": 8496,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8452,
									"end": 8496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8572,
									"end": 8577,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8763,
									"end": 8771,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8784,
									"end": 8785,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8775,
									"end": 8785,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8775,
									"end": 8785,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8786,
									"end": 8791,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8812,
									"end": 8816,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8829,
									"end": 8830,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8830,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8830,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8831,
									"end": 8836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8831,
									"end": 8836,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8946,
									"end": 8947,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8982,
									"end": 8983,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8959,
									"end": 8960,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8950,
									"end": 8960,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8950,
									"end": 8960,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8961,
									"end": 8966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8961,
									"end": 8966,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8961,
									"end": 8966,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9022,
									"end": 9025,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 9012,
									"end": 9020,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9009,
									"end": 9026,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9029,
									"end": 9047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9078,
									"end": 9086,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9076,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 9071,
									"end": 9087,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 9062,
									"end": 9087,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9062,
									"end": 9087,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9113,
									"end": 9116,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9106,
									"end": 9111,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9103,
									"end": 9117,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9120,
									"end": 9138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "tag",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9153,
									"end": 9158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9153,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9153,
									"end": 9158,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9277,
									"end": 9279,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9267,
									"end": 9275,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9264,
									"end": 9280,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9258,
									"end": 9261,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 9252,
									"end": 9256,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9249,
									"end": 9262,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9245,
									"end": 9281,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9227,
									"end": 9229,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 9217,
									"end": 9225,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9214,
									"end": 9230,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9209,
									"end": 9211,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 9203,
									"end": 9207,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9200,
									"end": 9212,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9196,
									"end": 9231,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9180,
									"end": 9291,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9333,
									"end": 9341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9327,
									"end": 9331,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9323,
									"end": 9342,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9342,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9342,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9368,
									"end": 9371,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9361,
									"end": 9366,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9358,
									"end": 9372,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9375,
									"end": 9393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9408,
									"end": 9413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9408,
									"end": 9413,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9486,
									"end": 9489,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9476,
									"end": 9484,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9470,
									"end": 9474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9467,
									"end": 9468,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 9448,
									"end": 9490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9522,
									"end": 9526,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9517,
									"end": 9520,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9513,
									"end": 9527,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 9506,
									"end": 9511,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9503,
									"end": 9528,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9531,
									"end": 9549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9580,
									"end": 9584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9573,
									"end": 9578,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9569,
									"end": 9585,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9560,
									"end": 9585,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9560,
									"end": 9585,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9632,
									"end": 9639,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9672,
									"end": 9676,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 9665,
									"end": 9670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9661,
									"end": 9677,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9650,
									"end": 9677,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9650,
									"end": 9677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9747,
									"end": 9752,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9789,
									"end": 9793,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 9771,
									"end": 9794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9763,
									"end": 9794,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9763,
									"end": 9794,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9831,
									"end": 9839,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 9815,
									"end": 9840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9840,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 9896,
									"end": 9962,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9886,
									"end": 9894,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9880,
									"end": 9884,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 9859,
									"end": 9963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9963,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9963,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10016,
									"end": 10023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 10057,
									"end": 10058,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10039,
									"end": 10059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "tag",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10034,
									"end": 10059,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10034,
									"end": 10059,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 10091,
									"end": 10092,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10073,
									"end": 10093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "tag",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10068,
									"end": 10093,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10068,
									"end": 10093,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10128,
									"end": 10129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10125,
									"end": 10126,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10121,
									"end": 10130,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 10168,
									"end": 10179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10150,
									"end": 10180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10139,
									"end": 10180,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10139,
									"end": 10180,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10329,
									"end": 10330,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10320,
									"end": 10327,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10316,
									"end": 10331,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 10313,
									"end": 10314,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10310,
									"end": 10332,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 10290,
									"end": 10291,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10283,
									"end": 10292,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10263,
									"end": 10346,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 10359,
									"end": 10377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10024,
									"end": 10386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10432,
									"end": 10435,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 10469,
									"end": 10470,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10451,
									"end": 10471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "tag",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10446,
									"end": 10471,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10446,
									"end": 10471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10503,
									"end": 10504,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10485,
									"end": 10505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10505,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10505,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10528,
									"end": 10529,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10525,
									"end": 10526,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10521,
									"end": 10530,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10514,
									"end": 10530,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10514,
									"end": 10530,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10549,
									"end": 10552,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 10546,
									"end": 10547,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10543,
									"end": 10553,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 10556,
									"end": 10574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "tag",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 10694,
									"end": 10699,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 10676,
									"end": 10700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "tag",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10671,
									"end": 10674,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10664,
									"end": 10701,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10862,
									"end": 10866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10900,
									"end": 10902,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 10889,
									"end": 10898,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10885,
									"end": 10903,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10877,
									"end": 10903,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10877,
									"end": 10903,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "220"
								},
								{
									"begin": 10981,
									"end": 10982,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10970,
									"end": 10979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10966,
									"end": 10983,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10957,
									"end": 10963,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 10913,
									"end": 10984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "tag",
									"source": 8,
									"value": "220"
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 11062,
									"end": 11064,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11051,
									"end": 11060,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11047,
									"end": 11065,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11038,
									"end": 11044,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 10994,
									"end": 11066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "tag",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "222"
								},
								{
									"begin": 11144,
									"end": 11146,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11133,
									"end": 11142,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11129,
									"end": 11147,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11120,
									"end": 11126,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 11076,
									"end": 11148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "tag",
									"source": 8,
									"value": "222"
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11254,
									"end": 11258,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11292,
									"end": 11294,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11281,
									"end": 11290,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11277,
									"end": 11295,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11269,
									"end": 11295,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11269,
									"end": 11295,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "224"
								},
								{
									"begin": 11373,
									"end": 11374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11362,
									"end": 11371,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11358,
									"end": 11375,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11349,
									"end": 11355,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 11305,
									"end": 11376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "tag",
									"source": 8,
									"value": "224"
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1091"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "294"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 3216,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122064a9c2442728da52975c3a29cee30cabc653de6c2c3176f9b6ea4db17629166864736f6c634300081e0033",
									".code": [
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "AE169A50"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "AE169A50"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "B921E163"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "FF010F5B"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "7DA0A877"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "301AECB9"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "572B6C05"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "1BFDCD9D"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 3216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2891,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2891,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1325,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1325,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1325,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1624,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1624,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1847,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1847,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1664,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1664,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2198,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2198,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2978,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2978,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3092,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3128,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3170,
											"end": 3182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3160,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3205,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3160,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 3213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 3213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 3213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2636,
											"end": 2646,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2617,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2617,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2674,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2617,
											"end": 2674,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2667,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2674,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2651,
											"end": 2674,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2651,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2674,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2651,
											"end": 2674,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2674,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2674,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2617,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2595,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2595,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2797,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2839,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2839,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2853,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2874,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2829,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2875,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2829,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1511,
											"end": 1520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1486,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1521,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1486,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1724,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1924,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1954,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1924,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1974,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1958,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1958,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1902,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1902,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2104,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2125,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2104,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2146,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2146,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2146,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2155,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2155,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2167,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2155,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2136,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2182,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2136,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 2190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1777,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1763,
											"end": 1784,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1763,
											"end": 1784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1801,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1801,
											"end": 1806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1801,
											"end": 1808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1801,
											"end": 1808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1830,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1795,
											"end": 1831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1795,
											"end": 1831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2299,
											"end": 2311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2299,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2299,
											"end": 2325,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2291,
											"end": 2367,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2291,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2405,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2405,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2455,
											"end": 2461,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2441,
											"end": 2462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2441,
											"end": 2462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2462,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2485,
											"end": 2491,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2505,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2475,
											"end": 2520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2475,
											"end": 2520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1128,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 950,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1102,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1102,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1537,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1638,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1638,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1634,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1634,
											"end": 1648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1634,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1634,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1625,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1908,
											"end": 1912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1944,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1944,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1962,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2367,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2367,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2440,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2463,
											"end": 2473,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2444,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2474,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2444,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2403,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2586,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2541,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2541,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2533,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2533,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2525,
											"end": 2590,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2518,
											"end": 2590,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2399,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2642,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 744,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 744,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 873,
											"end": 880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 906,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 906,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 906,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 906,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 899,
											"end": 934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 899,
											"end": 934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 744,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 744,
											"end": 942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3576,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3469,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6984,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6760,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6934,
											"name": "PUSH",
											"source": 8,
											"value": "4E65772077616C6C65742063616E6E6F7420626520746865207A65726F206164"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6976,
											"name": "PUSH",
											"source": 8,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 6977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7356,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6990,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 7212,
											"end": 7215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7153,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7153,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7153,
											"end": 7220,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7153,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7229,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 7318,
											"end": 7321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7229,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 7229,
											"end": 7322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7229,
											"end": 7322,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 7229,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7342,
											"end": 7345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7781,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7362,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7615,
											"end": 7624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7625,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7579,
											"end": 7626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7643,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7769,
											"end": 7773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7643,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 7643,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7643,
											"end": 7774,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7643,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7781,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 8032,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 7787,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7927,
											"end": 7961,
											"name": "PUSH",
											"source": 8,
											"value": "526577617264546F6B656E3A204D757374207573652061205472757374656420"
										},
										{
											"begin": 7923,
											"end": 7924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 7925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7904,
											"end": 7962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8024,
											"name": "PUSH",
											"source": 8,
											"value": "466F72776172646572206F7220626520746865204F776E65722E000000000000"
										},
										{
											"begin": 7991,
											"end": 7993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7983,
											"end": 7989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 8032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 8032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8404,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8038,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 8265,
											"end": 8267,
											"name": "PUSH",
											"source": 8,
											"value": "3A"
										},
										{
											"begin": 8260,
											"end": 8263,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8201,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 8201,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8201,
											"end": 8268,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 8201,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 8366,
											"end": 8369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 8277,
											"end": 8370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8370,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 8277,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8390,
											"end": 8393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8829,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 8410,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8576,
											"end": 8580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8657,
											"end": 8661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8653,
											"end": 8673,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8651,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8627,
											"end": 8674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8817,
											"end": 8821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8691,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8822,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8691,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8683,
											"end": 8822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8683,
											"end": 8822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8835,
											"end": 9015,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8835,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8883,
											"end": 8960,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8880,
											"end": 8881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8977,
											"end": 8978,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8970,
											"end": 8985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9004,
											"end": 9008,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 9009,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9123,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9021,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9103,
											"end": 9116,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9190,
											"end": 9195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9245,
											"end": 9250,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9236,
											"end": 9250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9236,
											"end": 9250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9280,
											"end": 9281,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9270,
											"end": 9278,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9267,
											"end": 9282,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9373,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9380,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9357,
											"end": 9381,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 9384,
											"end": 9402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 9354,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9435,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9424,
											"end": 9432,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9436,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9868,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 9417,
											"end": 9868,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9849,
											"end": 9853,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9842,
											"end": 9847,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 9854,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9868,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 9417,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9899,
											"end": 9903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 9897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 9904,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9881,
											"end": 9904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9881,
											"end": 9904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 9952,
											"end": 9960,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9929,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 9961,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 9929,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9917,
											"end": 9961,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9917,
											"end": 9961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 9259,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10037,
											"end": 10042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10218,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 10218,
											"end": 10258,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10250,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10240,
											"end": 10250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10240,
											"end": 10250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10251,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10251,
											"end": 10256,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10218,
											"end": 10258,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 10218,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10277,
											"end": 10281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 10267,
											"end": 10303,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10285,
											"end": 10295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10285,
											"end": 10295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10296,
											"end": 10301,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10303,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 10267,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10406,
											"end": 10433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10406,
											"end": 10433,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10406,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10406,
											"end": 10433,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10447,
											"end": 10448,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10442,
											"end": 10633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10633,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 10442,
											"end": 10633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 10356,
											"end": 10633,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10406,
											"end": 10433,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10406,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10415,
											"end": 10425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10426,
											"end": 10431,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10633,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 10442,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10487,
											"end": 10490,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10477,
											"end": 10485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10491,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 10471,
											"end": 10514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 10494,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10514,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 10471,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10543,
											"end": 10551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10536,
											"end": 10552,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10527,
											"end": 10552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10527,
											"end": 10552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10578,
											"end": 10581,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10582,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 10565,
											"end": 10605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 10585,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 10585,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10565,
											"end": 10605,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 10565,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10618,
											"end": 10623,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10633,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 10356,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10742,
											"end": 10744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10732,
											"end": 10740,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 10745,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10723,
											"end": 10726,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 10717,
											"end": 10721,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10727,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10710,
											"end": 10746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10692,
											"end": 10694,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 10682,
											"end": 10690,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10679,
											"end": 10695,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 10676,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 10668,
											"end": 10672,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10665,
											"end": 10677,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10661,
											"end": 10696,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10645,
											"end": 10756,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10642,
											"end": 10888,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10642,
											"end": 10888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10642,
											"end": 10888,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10792,
											"end": 10796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10807,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10779,
											"end": 10807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10779,
											"end": 10807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10833,
											"end": 10836,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 10831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10823,
											"end": 10837,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10860,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 10820,
											"end": 10860,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 10840,
											"end": 10858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10860,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 10820,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10873,
											"end": 10878,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10642,
											"end": 10888,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10642,
											"end": 10888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 10951,
											"end": 10954,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10949,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10939,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10932,
											"end": 10933,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10913,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 10913,
											"end": 10955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 10955,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 10913,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10955,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 10991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 10985,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 10992,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 10976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10968,
											"end": 10993,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 10996,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11045,
											"end": 11049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11034,
											"end": 11050,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11025,
											"end": 11050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11025,
											"end": 11050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9983,
											"end": 11056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11343,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 11062,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11162,
											"end": 11166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11144,
											"end": 11167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11167,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11144,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 11204,
											"end": 11212,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 11188,
											"end": 11213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11213,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 11188,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11176,
											"end": 11213,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11176,
											"end": 11213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11232,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11269,
											"end": 11335,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11259,
											"end": 11267,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11253,
											"end": 11257,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11232,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 11232,
											"end": 11336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11232,
											"end": 11336,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11232,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11759,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11349,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11389,
											"end": 11396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 11430,
											"end": 11431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11412,
											"end": 11432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11432,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 11412,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11407,
											"end": 11432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11407,
											"end": 11432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11446,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11446,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11446,
											"end": 11466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11446,
											"end": 11466,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11446,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11441,
											"end": 11466,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11441,
											"end": 11466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11501,
											"end": 11502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11498,
											"end": 11499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11503,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11541,
											"end": 11552,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11523,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11523,
											"end": 11553,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11523,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11693,
											"end": 11700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11689,
											"end": 11704,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11686,
											"end": 11687,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11683,
											"end": 11705,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11663,
											"end": 11664,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11656,
											"end": 11665,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11636,
											"end": 11719,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11613,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 11613,
											"end": 11752,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11732,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 11732,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 11732,
											"end": 11750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11732,
											"end": 11750,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 11732,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11613,
											"end": 11752,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 11613,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11397,
											"end": 11759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11759,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 11918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11954,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11941,
											"end": 11950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11937,
											"end": 11955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11965,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 12033,
											"end": 12034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12022,
											"end": 12031,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12009,
											"end": 12015,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11965,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11965,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11965,
											"end": 12036,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 11965,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 12114,
											"end": 12116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12103,
											"end": 12112,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12090,
											"end": 12096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12046,
											"end": 12118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12118,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 12046,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 12196,
											"end": 12198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12172,
											"end": 12178,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12128,
											"end": 12200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12200,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 12128,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11765,
											"end": 12207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12213,
											"end": 12330,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 12213,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12322,
											"end": 12323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12324,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12336,
											"end": 12453,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12336,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12447,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12613,
											"end": 12621,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12601,
											"end": 12611,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12598,
											"end": 12622,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12595,
											"end": 12706,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12595,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 12595,
											"end": 12706,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 12625,
											"end": 12704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 12625,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12595,
											"end": 12706,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 12595,
											"end": 12706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12737,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12721,
											"end": 12729,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 12738,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12715,
											"end": 12822,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12741,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 12741,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12741,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12741,
											"end": 12820,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 12741,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12822,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12715,
											"end": 12822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12872,
											"end": 12873,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12860,
											"end": 12870,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12848,
											"end": 12854,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12844,
											"end": 12875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12831,
											"end": 12875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12831,
											"end": 12875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12911,
											"end": 12921,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12901,
											"end": 12909,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12897,
											"end": 12922,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12884,
											"end": 12922,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12884,
											"end": 12922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13030,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12934,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13020,
											"end": 13023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13010,
											"end": 13023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13010,
											"end": 13023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13030,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12934,
											"end": 13030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13278,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13128,
											"end": 13278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13165,
											"end": 13172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13205,
											"end": 13271,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 13198,
											"end": 13203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13194,
											"end": 13272,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13183,
											"end": 13272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13183,
											"end": 13272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13278,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13391,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 13284,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13328,
											"end": 13336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13378,
											"end": 13383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13372,
											"end": 13376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13384,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13347,
											"end": 13384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13347,
											"end": 13384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13391,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13949,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 13397,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13488,
											"end": 13493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13519,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 13560,
											"end": 13563,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13519,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 13519,
											"end": 13564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13519,
											"end": 13564,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 13519,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13589,
											"end": 13594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 13644,
											"end": 13652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13631,
											"end": 13653,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13613,
											"end": 13654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13654,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 13613,
											"end": 13654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13604,
											"end": 13654,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13604,
											"end": 13654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13678,
											"end": 13680,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 13670,
											"end": 13676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13667,
											"end": 13681,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13664,
											"end": 13942,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13664,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13664,
											"end": 13942,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13834,
											"end": 13900,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 13804,
											"end": 13810,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13802,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13793,
											"end": 13794,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 13789,
											"end": 13812,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 13749,
											"end": 13918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13918,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13749,
											"end": 13918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13726,
											"end": 13731,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13705,
											"end": 13932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13696,
											"end": 13932,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13696,
											"end": 13932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13664,
											"end": 13942,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13664,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13949,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 14146,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 13955,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 14032,
											"end": 14033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 14014,
											"end": 14034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14009,
											"end": 14034,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14009,
											"end": 14034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 14066,
											"end": 14067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 14048,
											"end": 14068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14068,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 14048,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14043,
											"end": 14068,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14043,
											"end": 14068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14088,
											"end": 14089,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14084,
											"end": 14093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14077,
											"end": 14093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14077,
											"end": 14093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14112,
											"end": 14115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14109,
											"end": 14110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14106,
											"end": 14116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14103,
											"end": 14139,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14103,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 14103,
											"end": 14139,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 14119,
											"end": 14137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 14119,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14103,
											"end": 14139,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 14103,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 14146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 14146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 14146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 14146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13955,
											"end": 14146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/metatx/ERC2771Context.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/reward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimReward(uint256)": "ae169a50",
							"claimRewardPublic(address,uint256)": "ff010f5b",
							"decimals()": "313ce567",
							"decreaseMyToken(uint256)": "301aecb9",
							"decreaseMyTokenPublic(address,uint256)": "1bfdcd9d",
							"increaseSupply(uint256)": "b921e163",
							"isTrustedForwarder(address)": "572b6c05",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"trustedForwarder()": "7da0a877"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimRewardPublic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseMyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseMyTokenPublic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reward.sol\":\"RewardToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/reward.sol\":{\"keccak256\":\"0x5c390e3ad773422a0045b9c164d2b87394ef767a75eea37c8c3d926e926232e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728203fd1ee65a8786cee619318ff8ac518e650efc2029cb0617742ec6c6a98\",\"dweb:/ipfs/QmULg17wworeVJhpkBRakHccrSvngrc4nJn7qDgRqs1MsF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 452,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 458,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 460,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 462,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/reward.sol:RewardToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1079,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1078
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/metatx/ERC2771Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC2771Context": [
							429
						]
					},
					"id": 430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 430,
							"sourceUnit": 1079,
							"src": "135:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "143:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 290,
										"name": "Context",
										"nameLocations": [
											"1005:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "1005:7:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "1005:7:2"
								}
							],
							"canonicalName": "ERC2771Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 289,
								"nodeType": "StructuredDocumentation",
								"src": "182:786:2",
								"text": " @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."
							},
							"fullyImplemented": true,
							"id": 429,
							"linearizedBaseContracts": [
								429,
								1078
							],
							"name": "ERC2771Context",
							"nameLocation": "987:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "1019:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 294,
									"mutability": "immutable",
									"name": "_trustedForwarder",
									"nameLocation": "1111:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "1085:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1085:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1490:54:2",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "_trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1500:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "trustedForwarder_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1520:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1500:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1500:37:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1398:48:2",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 305,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "trustedForwarder_",
												"nameLocation": "1471:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1463:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:27:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:2"
									},
									"scope": 429,
									"src": "1451:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1690:41:2",
										"statements": [
											{
												"expression": {
													"id": 311,
													"name": "_trustedForwarder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 294,
													"src": "1707:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 310,
												"id": 312,
												"nodeType": "Return",
												"src": "1700:24:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1550:69:2",
										"text": " @dev Returns the address of the trusted forwarder."
									},
									"functionSelector": "7da0a877",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trustedForwarder",
									"nameLocation": "1633:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:2:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1681:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:2"
									},
									"scope": 429,
									"src": "1624:107:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1914:55:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 322,
														"name": "forwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1931:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 323,
															"name": "trustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "1944:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1944:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1931:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 326,
												"nodeType": "Return",
												"src": "1924:38:2"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1737:90:2",
										"text": " @dev Indicates whether any particular address is the trusted forwarder."
									},
									"functionSelector": "572b6c05",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "1841:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "1868:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1860:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:19:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1908:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:6:2"
									},
									"scope": 429,
									"src": "1832:137:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1060
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2277:400:2",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "calldataLength",
														"nameLocation": "2295:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2287:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2287:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 337,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2312:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2316:4:2",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"src": "2312:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2321:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2312:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:40:2"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "contextSuffixLength",
														"nameLocation": "2345:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2337:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2337:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 343,
														"name": "_contextSuffixLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															428
														],
														"referencedDeclaration": 428,
														"src": "2367:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2337:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 346,
															"name": "calldataLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "2403:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 347,
															"name": "contextSuffixLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2421:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2403:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 350,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2463:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2467:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2463:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 349,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "2444:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2444:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2403:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "2621:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 369,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2642:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_ERC2771Context_$429_$",
																			"typeString": "type(contract super ERC2771Context)"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2648:10:2",
																	"memberName": "_msgSender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1060,
																	"src": "2642:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2642:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 334,
															"id": 372,
															"nodeType": "Return",
															"src": "2635:25:2"
														}
													]
												},
												"id": 374,
												"nodeType": "IfStatement",
												"src": "2399:272:2",
												"trueBody": {
													"id": 368,
													"nodeType": "Block",
													"src": "2476:139:2",
													"statements": [
														{
															"id": 367,
															"nodeType": "UncheckedBlock",
															"src": "2490:115:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"baseExpression": {
																							"expression": {
																								"id": 358,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "2541:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 359,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2545:4:2",
																							"memberName": "data",
																							"nodeType": "MemberAccess",
																							"src": "2541:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_calldata_ptr",
																								"typeString": "bytes calldata"
																							}
																						},
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexRangeAccess",
																						"src": "2541:47:2",
																						"startExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 362,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 360,
																								"name": "calldataLength",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 336,
																								"src": "2550:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 361,
																								"name": "contextSuffixLength",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 342,
																								"src": "2567:19:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2550:36:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_calldata_ptr_slice",
																							"typeString": "bytes calldata slice"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_calldata_ptr_slice",
																							"typeString": "bytes calldata slice"
																						}
																					],
																					"id": 357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2533:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 356,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "2533:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2533:56:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			],
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2525:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 354,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2525:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2525:65:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"functionReturnParameters": 334,
																	"id": 366,
																	"nodeType": "Return",
																	"src": "2518:72:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1975:226:2",
										"text": " @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "2215:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2250:8:2"
									},
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2268:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:9:2"
									},
									"scope": 429,
									"src": "2206:471:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2986:380:2",
										"statements": [
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "calldataLength",
														"nameLocation": "3004:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2996:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2996:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 385,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3021:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3025:4:2",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"src": "3021:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3030:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3021:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2996:40:2"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "contextSuffixLength",
														"nameLocation": "3054:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "3046:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 391,
														"name": "_contextSuffixLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															428
														],
														"referencedDeclaration": 428,
														"src": "3076:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3076:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3046:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 394,
															"name": "calldataLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3112:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 395,
															"name": "contextSuffixLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3130:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3112:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3172:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3176:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3172:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 397,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3153:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3153:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3112:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "3312:48:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 411,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3333:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_ERC2771Context_$429_$",
																			"typeString": "type(contract super ERC2771Context)"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3339:8:2",
																	"memberName": "_msgData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1069,
																	"src": "3333:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
																		"typeString": "function () view returns (bytes calldata)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3333:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"functionReturnParameters": 382,
															"id": 414,
															"nodeType": "Return",
															"src": "3326:23:2"
														}
													]
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "3108:252:2",
												"trueBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "3185:121:2",
													"statements": [
														{
															"id": 409,
															"nodeType": "UncheckedBlock",
															"src": "3199:97:2",
															"statements": [
																{
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 402,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3234:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3238:4:2",
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"src": "3234:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"endExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 404,
																				"name": "calldataLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "3244:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 405,
																				"name": "contextSuffixLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "3261:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3244:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexRangeAccess",
																		"src": "3234:47:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr_slice",
																			"typeString": "bytes calldata slice"
																		}
																	},
																	"functionReturnParameters": 382,
																	"id": 408,
																	"nodeType": "Return",
																	"src": "3227:54:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2683:222:2",
										"text": " @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2919:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 379,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2952:8:2"
									},
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:2:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2970:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2970:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:16:2"
									},
									"scope": 429,
									"src": "2910:456:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1077
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "3550:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3230",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3567:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_20_by_1",
														"typeString": "int_const 20"
													},
													"value": "20"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "3560:9:2"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3372:92:2",
										"text": " @dev ERC-2771 specifies the context as being a single address (20 bytes)."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "3478:20:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 421,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3523:8:2"
									},
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3541:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:9:2"
									},
									"scope": 429,
									"src": "3469:107:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 430,
							"src": "969:2609:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:3470:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							944
						],
						"IERC20": [
							1022
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1048
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1023,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 432,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1022,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1049,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 434,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1048,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1079,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 436,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 438,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 441,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "1133:7:3"
									},
									"id": 442,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 443,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1022,
										"src": "1142:6:3"
									},
									"id": 444,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 445,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "1150:14:3"
									},
									"id": 446,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 447,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 448,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944,
								189,
								1048,
								1022,
								1078
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 451,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 449,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 450,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 457,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 456,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 454,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 464,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 463,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 473,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 481,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 944,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 487,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 486,
												"id": 488,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 944,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 496,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 495,
												"id": 497,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 944,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1047
									],
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 502,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 944,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										971
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2864:36:3",
										"statements": [
											{
												"expression": {
													"id": 514,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "2881:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 513,
												"id": 515,
												"nodeType": "Return",
												"src": "2874:19:3"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:3"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2855:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:3"
									},
									"scope": 944,
									"src": "2803:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										979
									],
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "3007:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 525,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3024:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 527,
													"indexExpression": {
														"id": 526,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3034:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 528,
												"nodeType": "Return",
												"src": "3017:25:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2952:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2998:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:3"
									},
									"scope": 944,
									"src": "2933:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										989
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3319:103:3",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 553,
														"src": "3329:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 540,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 542,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "3345:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "3377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3384:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3388:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3367:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 539,
												"id": 552,
												"nodeType": "Return",
												"src": "3404:11:3"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3262:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3313:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:3"
									},
									"scope": 944,
									"src": "3244:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "3544:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 564,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3561:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 566,
														"indexExpression": {
															"id": 565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3573:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 568,
													"indexExpression": {
														"id": 567,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "3580:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 563,
												"id": 569,
												"nodeType": "Return",
												"src": "3554:34:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:3",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3474:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3489:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3535:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:3"
									},
									"scope": 944,
									"src": "3455:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "3981:107:3",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "3991:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4007:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4038:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4045:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4054:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															835,
															895
														],
														"referencedDeclaration": 835,
														"src": "4029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 580,
												"id": 593,
												"nodeType": "Return",
												"src": "4070:11:3"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3919:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "3975:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:3"
									},
									"scope": 944,
									"src": "3902:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1021
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4773:151:3",
										"statements": [
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "4783:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 607,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 609,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4801:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4839:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4854:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "4823:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4880:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4886:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4890:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "4870:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 606,
												"id": 625,
												"nodeType": "Return",
												"src": "4906:11:3"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4702:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4716:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4728:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:3"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4767:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:3"
									},
									"scope": 944,
									"src": "4680:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "5366:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 637,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "5380:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 638,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "5376:86:3",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "5400:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 644,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 643,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 649,
															"nodeType": "RevertStatement",
															"src": "5414:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "5475:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 653,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "5471:86:3",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "5493:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 659,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 658,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 664,
															"nodeType": "RevertStatement",
															"src": "5507:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5580:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5584:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5566:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:3"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5330:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:3"
									},
									"scope": 944,
									"src": "5297:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "5987:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "6001:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 721,
													"nodeType": "Block",
													"src": "6175:362:3",
													"statements": [
														{
															"assignments": [
																696
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 696,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 721,
																	"src": "6189:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 695,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 700,
															"initialValue": {
																"baseExpression": {
																	"id": 697,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6211:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 699,
																"indexExpression": {
																	"id": 698,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6221:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 701,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "6244:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6258:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 711,
															"nodeType": "IfStatement",
															"src": "6240:115:3",
															"trueBody": {
																"id": 710,
																"nodeType": "Block",
																"src": "6265:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 705,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 677,
																					"src": "6315:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 706,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "6321:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 707,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 681,
																					"src": "6334:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 704,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 709,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:3"
																	}
																]
															}
														},
														{
															"id": 720,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 712,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6475:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 714,
																			"indexExpression": {
																				"id": 713,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 677,
																				"src": "6485:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 715,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "6493:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 716,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 681,
																				"src": "6507:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 719,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:3"
																}
															]
														}
													]
												},
												"id": 722,
												"nodeType": "IfStatement",
												"src": "5997:540:3",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "6021:148:3",
													"statements": [
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 690,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6137:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6153:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6551:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "6766:206:3",
													"statements": [
														{
															"id": 741,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 735,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6925:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 737,
																			"indexExpression": {
																				"id": 736,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "6935:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "6942:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 740,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:3"
																}
															]
														}
													]
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "6547:425:3",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "6569:191:3",
													"statements": [
														{
															"id": 733,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 729,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "6714:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "6730:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 732,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 745,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "6996:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7002:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7006:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 744,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "6987:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "EmitStatement",
												"src": "6982:30:3"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5929:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5943:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5955:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:3"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:3"
									},
									"scope": 944,
									"src": "5912:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "7418:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 759,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "7432:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 760,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "7428:91:3",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "7455:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 768,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 765,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 771,
															"nodeType": "RevertStatement",
															"src": "7469:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 775,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "7548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "7557:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:3"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "7377:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "7394:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:3"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:3"
									},
									"scope": 944,
									"src": "7362:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "7944:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "7958:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"nodeType": "IfStatement",
												"src": "7954:89:3",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "7981:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 798,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 804,
															"nodeType": "RevertStatement",
															"src": "7995:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "8060:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "8081:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "8052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:3"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "7903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "7920:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:3"
									},
									"scope": 944,
									"src": "7888:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "8704:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "8723:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "8730:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "8739:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 827,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															835,
															895
														],
														"referencedDeclaration": 895,
														"src": "8714:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:3"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "8648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "8663:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "8680:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:3"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:3"
									},
									"scope": 944,
									"src": "8630:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "9703:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 847,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "9717:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 848,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "9713:89:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "9738:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 854,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 853,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 859,
															"nodeType": "RevertStatement",
															"src": "9752:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9815:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "9811:90:3",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "9838:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 868,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "9852:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 877,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "9910:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 880,
															"indexExpression": {
																"id": 878,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "9922:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 881,
														"indexExpression": {
															"id": 879,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9929:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "9940:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:3"
											},
											{
												"condition": {
													"id": 885,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "9959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "9955:76:3",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "9970:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 887,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "9998:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 888,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "10005:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 889,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "10014:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 886,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "9989:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "EmitStatement",
															"src": "9984:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9623:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9638:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "9670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:3"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:3"
									},
									"scope": 944,
									"src": "9605:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "10408:387:3",
										"statements": [
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "10418:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "10455:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "10462:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "10445:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10484:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 914,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 913,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "10480:309:3",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "10522:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "10540:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "10559:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 929,
															"nodeType": "IfStatement",
															"src": "10536:130:3",
															"trueBody": {
																"id": 928,
																"nodeType": "Block",
																"src": "10566:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 923,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "10618:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 924,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "10627:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 925,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "10645:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 922,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 927,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:3"
																	}
																]
															}
														},
														{
															"id": 939,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 931,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 898,
																				"src": "10716:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 932,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 900,
																				"src": "10723:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 933,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "10732:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 934,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "10751:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 930,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				835,
																				895
																			],
																			"referencedDeclaration": 895,
																			"src": "10707:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 938,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "10344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "10359:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "10376:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:3"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:3"
									},
									"scope": 944,
									"src": "10319:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 945,
							"src": "1106:9691:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								956,
								965
							]
						}
					],
					"src": "105:10693:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1022
						]
					},
					"id": 1023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1022,
							"linearizedBaseContracts": [
								1022
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 956,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 965,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 1022,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 1022,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 1022,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 1022,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 1022,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 1022,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1023,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								956,
								965
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1022
						],
						"IERC20Metadata": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1024,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1023,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1025,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1022,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1028,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1022,
										"src": "306:6:5"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								1022
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1048,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1048,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1044,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1048,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								956,
								965
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1056,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1058,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1078,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1065,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1067,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1078,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1073,
												"id": 1075,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1078,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1079,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/reward.sol": {
				"ast": {
					"absolutePath": "contracts/reward.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							944
						],
						"ERC2771Context": [
							429
						],
						"IERC20": [
							1022
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1048
						],
						"Ownable": [
							147
						],
						"RewardToken": [
							1360
						]
					},
					"id": 1361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1361,
							"sourceUnit": 945,
							"src": "61:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
							"file": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1361,
							"sourceUnit": 430,
							"src": "118:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1361,
							"sourceUnit": 148,
							"src": "179:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1084,
										"name": "ERC20",
										"nameLocations": [
											"259:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "259:5:7"
									},
									"id": 1085,
									"nodeType": "InheritanceSpecifier",
									"src": "259:5:7"
								},
								{
									"baseName": {
										"id": 1086,
										"name": "ERC2771Context",
										"nameLocations": [
											"266:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "266:14:7"
									},
									"id": 1087,
									"nodeType": "InheritanceSpecifier",
									"src": "266:14:7"
								},
								{
									"baseName": {
										"id": 1088,
										"name": "Ownable",
										"nameLocations": [
											"282:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "282:7:7"
									},
									"id": 1089,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:7"
								}
							],
							"canonicalName": "RewardToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1360,
							"linearizedBaseContracts": [
								1360,
								147,
								429,
								944,
								189,
								1048,
								1022,
								1078
							],
							"name": "RewardToken",
							"nameLocation": "244:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1091,
									"mutability": "immutable",
									"name": "FORWARDER_ADDRESS",
									"nameLocation": "323:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1360,
									"src": "297:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1090,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "552:146:7",
										"statements": [
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "571:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "563:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "563:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1112,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "580:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "596:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1114,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "600:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "600:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "596:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "563:47:7"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1119,
														"name": "FORWARDER_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "621:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1120,
														"name": "trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "641:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "621:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "621:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1124,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "674:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "674:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "668:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "668:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "668:22:7"
											}
										]
									},
									"id": 1130,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "526577617264203120546f6b656e",
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "447:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_88095541ad7879916b53e8cadaec1388c88a8cb5920606da92f121ec3d882f25",
														"typeString": "literal_string \"Reward 1 Token\""
													},
													"value": "Reward 1 Token"
												},
												{
													"hexValue": "5257442031",
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "465:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f983b5fa8ab44436a1b03c403b0613011bcd57805adffde378691f36fc776e81",
														"typeString": "literal_string \"RWD 1\""
													},
													"value": "RWD 1"
												}
											],
											"id": 1102,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1099,
												"name": "ERC20",
												"nameLocations": [
													"441:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 944,
												"src": "441:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "441:32:7"
										},
										{
											"arguments": [
												{
													"id": 1104,
													"name": "trustedForwarder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1093,
													"src": "498:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1105,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1103,
												"name": "ERC2771Context",
												"nameLocations": [
													"483:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "483:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "483:32:7"
										},
										{
											"arguments": [
												{
													"id": 1107,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "533:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1108,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1106,
												"name": "Ownable",
												"nameLocations": [
													"525:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "525:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "525:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "trustedForwarder",
												"nameLocation": "369:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "361:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "395:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "387:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "417:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "409:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:71:7"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:0:7"
									},
									"scope": 1360,
									"src": "349:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										428,
										1077
									],
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "888:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1138,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "906:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1360_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "912:20:7",
														"memberName": "_contextSuffixLength",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 428,
														"src": "906:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "906:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1141,
												"nodeType": "Return",
												"src": "899:35:7"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "753:20:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1134,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1132,
												"name": "ERC2771Context",
												"nameLocations": [
													"829:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "829:14:7"
											},
											{
												"id": 1133,
												"name": "Context",
												"nameLocations": [
													"845:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "845:7:7"
											}
										],
										"src": "820:33:7"
									},
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:7"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "873:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:9:7"
									},
									"scope": 1360,
									"src": "744:198:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										376,
										1060
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "1084:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1151,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1102:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1360_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1108:10:7",
														"memberName": "_msgSender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "1102:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1102:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1154,
												"nodeType": "Return",
												"src": "1095:25:7"
											}
										]
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "959:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1147,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1145,
												"name": "ERC2771Context",
												"nameLocations": [
													"1025:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "1025:14:7"
											},
											{
												"id": 1146,
												"name": "Context",
												"nameLocations": [
													"1041:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "1041:7:7"
											}
										],
										"src": "1016:33:7"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:9:7"
									},
									"scope": 1360,
									"src": "950:178:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										418,
										1069
									],
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1275:42:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1164,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1293:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1360_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1299:8:7",
														"memberName": "_msgData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 418,
														"src": "1293:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
															"typeString": "function () view returns (bytes calldata)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1167,
												"nodeType": "Return",
												"src": "1286:23:7"
											}
										]
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1145:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1160,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1158,
												"name": "ERC2771Context",
												"nameLocations": [
													"1209:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "1209:14:7"
											},
											{
												"id": 1159,
												"name": "Context",
												"nameLocations": [
													"1225:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "1225:7:7"
											}
										],
										"src": "1200:33:7"
									},
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:7"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1253:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1253:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:16:7"
									},
									"scope": 1360,
									"src": "1136:181:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										328
									],
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "1468:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"name": "forwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "1511:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1178,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1486:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RewardToken_$1360_$",
																"typeString": "type(contract super RewardToken)"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1492:18:7",
														"memberName": "isTrustedForwarder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 328,
														"src": "1486:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1182,
												"nodeType": "Return",
												"src": "1479:42:7"
											}
										]
									},
									"functionSelector": "572b6c05",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "1334:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1174,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1173,
												"name": "ERC2771Context",
												"nameLocations": [
													"1422:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "1422:14:7"
											}
										],
										"src": "1413:24:7"
									},
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "1361:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1353:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:19:7"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1456:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:6:7"
									},
									"scope": 1360,
									"src": "1325:204:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "1607:49:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1191,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "1625:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1634:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1193,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "1638:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1638:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1634:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1625:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1190,
												"id": 1197,
												"nodeType": "Return",
												"src": "1618:30:7"
											}
										]
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertAmount",
									"nameLocation": "1546:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1568:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1560:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:16:7"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1598:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1597:9:7"
									},
									"scope": 1360,
									"src": "1537:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "1721:118:7",
										"statements": [
											{
												"assignments": [
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1207,
														"mutability": "mutable",
														"name": "amountInSmallestUnit",
														"nameLocation": "1740:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "1732:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1206,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"id": 1209,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "1777:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"name": "convertAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "1763:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1763:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1732:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1213,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1801:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1801:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "amountInSmallestUnit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "1810:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1795:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1795:36:7"
											}
										]
									},
									"functionSelector": "b921e163",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1203,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1711:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:7"
										}
									],
									"name": "increaseSupply",
									"nameLocation": "1673:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1696:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1688:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1687:16:7"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:7"
									},
									"scope": 1360,
									"src": "1664:175:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "1891:299:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1226,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1943:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1947:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1943:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1225,
																	"name": "isTrustedForwarder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1184
																	],
																	"referencedDeclaration": 1184,
																	"src": "1924:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1924:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1229,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1156
																		],
																		"referencedDeclaration": 1156,
																		"src": "1958:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1958:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1231,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1974:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1974:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1958:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1924:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526577617264546f6b656e3a204d757374207573652061205472757374656420466f72776172646572206f7220626520746865204f776e65722e",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1997:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de",
																"typeString": "literal_string \"RewardToken: Must use a Trusted Forwarder or be the Owner.\""
															},
															"value": "RewardToken: Must use a Trusted Forwarder or be the Owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de",
																"typeString": "literal_string \"RewardToken: Must use a Trusted Forwarder or be the Owner.\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1902:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1902:166:7"
											},
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "2089:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "2081:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2081:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"arguments": [
														{
															"id": 1241,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "2118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"name": "convertAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2104:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2081:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1245,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2146:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2146:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1247,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1156
																],
																"referencedDeclaration": 1156,
																"src": "2155:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2155:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "2169:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2136:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2136:46:7"
											}
										]
									},
									"functionSelector": "ae169a50",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1856:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1876:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1868:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:16:7"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:0:7"
									},
									"scope": 1360,
									"src": "1847:343:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "2280:248:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1263,
																"name": "user_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "2299:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2323:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2315:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1264,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2315:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2315:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2299:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772077616c6c65742063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2327:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5",
																"typeString": "literal_string \"New wallet cannot be the zero address\""
															},
															"value": "New wallet cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5",
																"typeString": "literal_string \"New wallet cannot be the zero address\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2291:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "2291:76:7"
											},
											{
												"assignments": [
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1273,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2386:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1289,
														"src": "2378:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2378:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"expression": {
														"id": 1274,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2395:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2399:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2395:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2378:27:7"
											},
											{
												"assignments": [
													1278
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "2426:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1289,
														"src": "2418:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2418:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"id": 1280,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "2455:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1279,
														"name": "convertAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2441:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2418:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2485:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "user_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "2493:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "2507:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1283,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2475:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2475:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "2475:45:7"
											}
										]
									},
									"functionSelector": "ff010f5b",
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1259,
												"name": "onlyOwner",
												"nameLocations": [
													"2270:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2270:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2270:9:7"
										}
									],
									"name": "claimRewardPublic",
									"nameLocation": "2207:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "2233:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "2225:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2255:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "2247:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:38:7"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:0:7"
									},
									"scope": 1360,
									"src": "2198:330:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "2584:299:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1297,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2636:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2640:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2636:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1296,
																	"name": "isTrustedForwarder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1184
																	],
																	"referencedDeclaration": 1184,
																	"src": "2617:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2617:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1300,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1156
																		],
																		"referencedDeclaration": 1156,
																		"src": "2651:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2651:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1302,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2667:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2667:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2651:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2617:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526577617264546f6b656e3a204d757374207573652061205472757374656420466f72776172646572206f7220626520746865204f776e65722e",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2690:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de",
																"typeString": "literal_string \"RewardToken: Must use a Trusted Forwarder or be the Owner.\""
															},
															"value": "RewardToken: Must use a Trusted Forwarder or be the Owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f5e7d36081579506e7475cf6f7abdc88ffc8cddf35a2e5f0f4170871c9180de",
																"typeString": "literal_string \"RewardToken: Must use a Trusted Forwarder or be the Owner.\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2595:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "2595:166:7"
											},
											{
												"assignments": [
													1310
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "2782:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1323,
														"src": "2774:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2774:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"initialValue": {
													"arguments": [
														{
															"id": 1312,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "2811:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "convertAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2797:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2797:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2774:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1316,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1156
																],
																"referencedDeclaration": 1156,
																"src": "2839:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2839:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1318,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2853:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2853:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2862:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1315,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2829:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2829:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "2829:46:7"
											}
										]
									},
									"functionSelector": "301aecb9",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseMyToken",
									"nameLocation": "2545:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2569:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2561:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:16:7"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2584:0:7"
									},
									"scope": 1360,
									"src": "2536:347:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "2967:246:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1332,
																"name": "user_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "2986:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3010:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3002:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3002:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3002:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2986:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772077616c6c65742063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3014:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5",
																"typeString": "literal_string \"New wallet cannot be the zero address\""
															},
															"value": "New wallet cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_047d38b19885032dc0ac9760c92bc49975d4a00a77a5064579dc2cb9aca2f4c5",
																"typeString": "literal_string \"New wallet cannot be the zero address\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2978:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2978:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "2978:76:7"
											},
											{
												"assignments": [
													1342
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3073:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1358,
														"src": "3065:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1341,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3065:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"expression": {
														"id": 1343,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3082:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3086:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3082:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3065:27:7"
											},
											{
												"assignments": [
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "3113:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1358,
														"src": "3105:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"arguments": [
														{
															"id": 1349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "3142:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "convertAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3128:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3128:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3105:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1353,
															"name": "user_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "3170:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1354,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "3184:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3192:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1352,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3160:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "3160:45:7"
											}
										]
									},
									"functionSelector": "1bfdcd9d",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseMyTokenPublic",
									"nameLocation": "2900:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "2930:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "2922:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2952:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "2944:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:38:7"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2967:0:7"
									},
									"scope": 1360,
									"src": "2891:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1361,
							"src": "235:2981:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								956,
								965
							]
						}
					],
					"src": "33:3185:7"
				},
				"id": 7
			}
		}
	}
}